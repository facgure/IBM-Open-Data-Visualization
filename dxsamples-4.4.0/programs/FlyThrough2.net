//
// time: Wed Apr  9 15:34:06 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
//
// comment: This visual program shows how to create a "fly-through" using a computed sequence of "from" points. The camera moves around the object at the same time that it moves closer. Note that the perspective flag to Camera must be set to 1 for this sort of fly-through to work properly.
// comment: 
// comment: To run this visual program, choose Sequencer from the Execute menu and press "play".
// workspace: width = 533, height = 576
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Import[1]: x = 125, y = 30, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "cloudwater"
    //
main_Import_1_out_1 = 
    Import(
    main_Import_1_in_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Isosurface[1]: x = 159, y = 103, inputs = 6, label = Isosurface
    //
main_Isosurface_1_out_1 = 
    Isosurface(
    main_Import_1_out_1,
    main_Isosurface_1_in_2,
    main_Isosurface_1_in_3,
    main_Isosurface_1_in_4,
    main_Isosurface_1_in_5,
    main_Isosurface_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Import[2]: x = 258, y = 102, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "wind"
    //
main_Import_2_out_1 = 
    Import(
    main_Import_2_in_1,
    main_Import_2_in_2,
    main_Import_2_in_3,
    main_Import_2_in_4,
    main_Import_2_in_5,
    main_Import_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Map[1]: x = 195, y = 190, inputs = 4, label = Map
    //
main_Map_1_out_1 = 
    Map(
    main_Isosurface_1_out_1,
    main_Import_2_out_1,
    main_Map_1_in_3,
    main_Map_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[1]: x = 214, y = 297, inputs = 10, label = AutoColor
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Map_1_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Sequencer[1]: x = 414, y = 145, inputs = 7, label = Sequencer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Sequencer_1"
    // input[4]: defaulting = 1, visible = 1, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 1, type = 1, value = 20
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[7]: defaulting = 0, visible = 0, type = 16777217, value = { 0 20 1 1 20 1 }
    // vcr[1]: min = 0, max = 20, beg = 1, end = 20, cur = 1, inc = 1, loop = off, step = off, pal = off
    // window: position = (0.0633,0.1172), size = 0.2188x0.0781
    //
    main_Sequencer_1_out_1 = @frame;
    // 
    // node Compute[2]: x = 373, y = 232, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*10"
    // expression: value = frame*10
    // name[2]: value = frame
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Sequencer_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Compute[1]: x = 464, y = 233, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "350000-$0*17000"
    // expression: value = 350000-frame*17000
    // name[2]: value = frame
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Sequencer_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Direction[1]: x = 400, y = 320, inputs = 3, label = Direction
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 10.0
    //
main_Direction_1_out_1 = 
    Direction(
    main_Compute_2_out_1,
    main_Direction_1_in_2,
    main_Compute_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Camera[1]: x = 314, y = 423, inputs = 9, label = Camera
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 400
    // input[7]: defaulting = 0, visible = 1, type = 3, value = 1
    //
main_Camera_1_out_1 = 
    Camera(
    main_AutoColor_1_out_1,
    main_Direction_1_out_1,
    main_Camera_1_in_3,
    main_Camera_1_in_4,
    main_Camera_1_in_5,
    main_Camera_1_in_6,
    main_Camera_1_in_7,
    main_Camera_1_in_8,
    main_Camera_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Display[1]: x = 169, y = 514, inputs = 8, label = Display
    // depth: value = 24
    // window: position = (0.0445,0.3037), size = 0.3234x0.3613
    //
main_Display_1_out_1[cache: 2] = 
    Display(
    main_AutoColor_1_out_1,
    main_Camera_1_out_1,
    main_Display_1_in_3,
    main_Display_1_in_4,
    main_Display_1_in_5,
    main_Display_1_in_6,
    main_Display_1_in_7,
    main_Display_1_in_8
    ) [instance: 1, cache: 1];
// network: end of macro body
}
main_Import_1_in_1 = "cloudwater";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Isosurface_1_in_2 = NULL;
main_Isosurface_1_in_3 = NULL;
main_Isosurface_1_in_4 = NULL;
main_Isosurface_1_in_5 = NULL;
main_Isosurface_1_in_6 = NULL;
main_Isosurface_1_out_1 = NULL;
main_Import_2_in_1 = "wind";
main_Import_2_in_2 = NULL;
main_Import_2_in_3 = NULL;
main_Import_2_in_4 = NULL;
main_Import_2_in_5 = NULL;
main_Import_2_in_6 = NULL;
main_Import_2_out_1 = NULL;
main_Map_1_in_3 = NULL;
main_Map_1_in_4 = NULL;
main_Map_1_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_1 = NULL;
main_Sequencer_1_in_1 = "Sequencer_1";
main_Sequencer_1_in_2 = NULL;
main_Sequencer_1_in_3 = NULL;
main_Sequencer_1_in_4 = NULL;
main_Sequencer_1_in_5 = NULL;
main_Sequencer_1_in_6 = NULL;
main_Sequencer_1_in_7 = { 0 20 1 1 20 1 };
main_Sequencer_1_out_1 = NULL;

@startframe = 1;
@nextframe  = @startframe;
@endframe   = 20;
@deltaframe = 1;
main_Compute_2_in_1 = "$0*10";
main_Compute_2_out_1 = NULL;
main_Compute_1_in_1 = "350000-$0*17000";
main_Compute_1_out_1 = NULL;
main_Direction_1_in_2 = 10.0;
main_Direction_1_out_1 = NULL;
main_Camera_1_in_3 = NULL;
main_Camera_1_in_4 = 400;
main_Camera_1_in_5 = NULL;
main_Camera_1_in_6 = NULL;
main_Camera_1_in_7 = 1;
main_Camera_1_in_8 = NULL;
main_Camera_1_in_9 = NULL;
main_Camera_1_out_1 = NULL;
main_Display_1_in_3 = "X24,,";
main_Display_1_in_4 = NULL;
main_Display_1_in_5 = NULL;
main_Display_1_in_6 = NULL;
main_Display_1_in_7 = NULL;
main_Display_1_in_8 = NULL;
Executive("product version 3 1 4");
$sync

sequence main();
play;

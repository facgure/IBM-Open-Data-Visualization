//
// time: Tue Apr 29 11:57:17 1997
//
// version: 3.1.1 (format), 3.1.4 (DX)
//
//
// MODULE main
// CATEGORY Macros
//
// comment: This visual program shows the elevation of a portion of the United States. The color map is created using Construct, and has a sharp discontinuity at a level controlled by a stepper interactor. In addition, a contour line is drawn at a level also controlled by an interactor.
// comment: 
// comment: You can see the effect of changes in sealevel on the coastline of the United States by changing the slider interactors.
// page assignment: color	order=3, windowed=0, showing=0
// page assignment: contours	order=4, windowed=0, showing=0
// page assignment: image	order=5, windowed=0, showing=0
// page assignment: import	order=2, windowed=0, showing=1
// workspace: width = 412, height = 330
// layout: snap = 0, width = 50, height = 50, align = CC
//
macro main(
) -> (
) {
    // 
    // node Caption[1]: x = 319, y = 154, inputs = 9, label = Caption
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"level" "(thousand meters)"}
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.05, 0.95]
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.500000
    // page group: image
    //
main_Caption_1_out_1 = 
    Caption(
    main_Caption_1_in_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Import[1]: x = 49, y = 138, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "southeastern_topo.dx"
    // page group: import
    //
main_Import_1_out_1 = 
    Import(
    main_Import_1_in_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[3]: x = 79, y = 268, inputs = 1, label = sealevel
    // page group: import
    //
sealevel = main_Import_1_out_1;
    // 
    // node Receiver[3]: x = 35, y = 20, inputs = 1, label = sealevel
    // page group: color
    //
main_Receiver_3_out_1[cache: 0] = sealevel;
    // 
    // node Scalar[1]: x = 332, y = 20, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.00000 
    // input[4]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -100.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 100.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[8]: defaulting = 1, visible = 0, type = 32, value = "5"
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 5, value = 0.00000 
    // page group: color
    //
    // 
    // node Compute[3]: x = 310, y = 92, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+.01"
    // page group: color
    // expression: value = a+.01
    // name[2]: value = a
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Scalar_1_out_1
    ) [instance: 3, cache: 1];
    // 
    // node List[1]: x = 170, y = 89, inputs = 5, label = List
    // input[1]: defaulting = 0, visible = 1, type = 29, value = -7000
    // input[4]: defaulting = 0, visible = 1, type = 29, value = 900.0
    // input[5]: defaulting = 0, visible = 1, type = 29, value = 2900.0
    // page group: color
    //
main_List_1_out_1 = 
    List(
    main_List_1_in_1,
    main_Compute_3_out_1,
    main_Compute_3_out_1,
    main_List_1_in_4,
    main_List_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Construct[1]: x = 112, y = 167, inputs = 4, label = Construct
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {[.1 .1 1],[.4 1 1],[1 .5 0],[.4 .1 .1],[.2 .1 .1]}
    // page group: color
    //
main_Construct_1_out_1 = 
    Construct(
    main_List_1_out_1,
    main_Construct_1_in_2,
    main_Construct_1_in_3,
    main_Construct_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 61, y = 245, inputs = 5, label = Color
    // page group: color
    //
main_Color_1_out_1 = 
    Color(
    main_Receiver_3_out_1,
    main_Construct_1_out_1,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[1]: x = 52, y = 538, inputs = 1, label = colored
    // page group: color
    //
colored = main_Color_1_out_1;
    // 
    // node Receiver[1]: x = 61, y = 122, inputs = 1, label = colored
    // page group: image
    //
main_Receiver_1_out_1[cache: 0] = colored;
    // 
    // node Receiver[4]: x = 28, y = 14, inputs = 1, label = sealevel
    // page group: contours
    //
main_Receiver_4_out_1[cache: 0] = sealevel;
    // 
    // node Scalar[2]: x = 152, y = 20, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 6.00000 
    // input[4]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -100.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 100.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[8]: defaulting = 1, visible = 0, type = 32, value = "5"
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 5, value = 6.00000 
    // page group: contours
    //
    // 
    // node Compute[4]: x = 125, y = 122, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0+.01"
    // page group: contours
    // expression: value = a+.01
    // name[2]: value = a
    //
main_Compute_4_out_1 = 
    Compute(
    main_Compute_4_in_1,
    main_Scalar_2_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Isosurface[1]: x = 85, y = 243, inputs = 6, label = Isosurface
    // page group: contours
    //
main_Isosurface_1_out_1 = 
    Isosurface(
    main_Receiver_4_out_1,
    main_Compute_4_out_1,
    main_Isosurface_1_in_3,
    main_Isosurface_1_in_4,
    main_Isosurface_1_in_5,
    main_Isosurface_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Color[2]: x = 152, y = 342, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "black"
    // page group: contours
    //
main_Color_2_out_1 = 
    Color(
    main_Isosurface_1_out_1,
    main_Color_2_in_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[4]: x = 189, y = 461, inputs = 1, label = contours
    // page group: contours
    //
contours = main_Color_2_out_1;
    // 
    // node Receiver[5]: x = 131, y = 122, inputs = 1, label = contours
    // page group: image
    //
main_Receiver_5_out_1[cache: 0] = contours;
    // 
    // node Mark[1]: x = 182, y = 241, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: color
    //
main_Mark_1_out_1 = 
    Mark(
    main_Construct_1_out_1,
    main_Mark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Compute[5]: x = 208, y = 324, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0/1000.0"
    // page group: color
    // expression: value = a/1000.0
    // name[2]: value = a
    //
main_Compute_5_out_1 = 
    Compute(
    main_Compute_5_in_1,
    main_Mark_1_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Unmark[1]: x = 290, y = 387, inputs = 2, label = Unmark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: color
    //
main_Unmark_1_out_1 = 
    Unmark(
    main_Compute_5_out_1,
    main_Unmark_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node ColorBar[1]: x = 260, y = 462, inputs = 14, label = ColorBar
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.8, 0.95]
    // input[4]: defaulting = 0, visible = 1, type = 3, value = 1
    // input[8]: visible = 0
    // input[9]: defaulting = 1, visible = 0, type = 16777248, value = {"ticks"}
    // page group: color
    //
main_ColorBar_1_out_1 = 
    ColorBar(
    main_Unmark_1_out_1,
    main_ColorBar_1_in_2,
    main_ColorBar_1_in_3,
    main_ColorBar_1_in_4,
    main_ColorBar_1_in_5,
    main_ColorBar_1_in_6,
    main_ColorBar_1_in_7,
    main_ColorBar_1_in_8,
    main_ColorBar_1_in_9,
    main_ColorBar_1_in_10,
    main_ColorBar_1_in_11,
    main_ColorBar_1_in_12,
    main_ColorBar_1_in_13,
    main_ColorBar_1_in_14
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[2]: x = 284, y = 539, inputs = 1, label = colorbar
    // page group: color
    //
colorbar = main_ColorBar_1_out_1;
    // 
    // node Receiver[2]: x = 211, y = 144, inputs = 1, label = colorbar
    // page group: image
    //
main_Receiver_2_out_1[cache: 0] = colorbar;
    // 
    // node Collect[1]: x = 96, y = 309, inputs = 4, label = Collect
    // page group: image
    //
main_Collect_1_out_1 = 
    Collect(
    main_Receiver_1_out_1,
    main_Receiver_5_out_1,
    main_Receiver_2_out_1,
    main_Caption_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[2]: x = 103, y = 435, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [275 29.1667 0]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [275 29.1667 67.6621]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 36.2601
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // page group: image
    // depth: value = 24
    // window: position = (0.4094,0.0654), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_1_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48
    ) [instance: 2, cache: 1];
    //
    // decorator Annotate	pos=(56,53) size=356x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 96
    // annotation user: This page imports the sealevel data (elevation
    // annotation user: above sealevel in the southeastern United States)
    // annotation user_end: <NULL>
    // page group: import
    //
    // decorator Annotate	pos=(245,189) size=403x76 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 191
    // annotation user: This page colors the data using a constructed colormap.
    // annotation user: The map is also passed to ColorBar (after dividing data
    // annotation user: values by 1000, just to improve the appearance of tick
    // annotation user: labels on the colorbar).
    // annotation user_end: <NULL>
    // page group: color
    //
    // decorator Annotate	pos=(256,108) size=234x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 32
    // annotation user: This page creates contour lines.
    // annotation user_end: <NULL>
    // page group: contours
    //
    // decorator Annotate	pos=(110,65) size=392x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 88
    // annotation user: This page collects the various parts of the visualization
    // annotation user: and sends the result to Image.
    // annotation user_end: <NULL>
    // page group: image
// network: end of macro body
CacheScene("Image_2", main_Image_2_out_1, main_Image_2_out_2);
}
main_Caption_1_in_1 = {"level" "(thousand meters)"};
main_Caption_1_in_2 = [0.05, 0.95];
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = 0.500000;
main_Caption_1_in_6 = NULL;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Import_1_in_1 = "southeastern_topo.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 0.00000 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 0.00000 ;
main_Compute_3_in_1 = "$0+.01";
main_Compute_3_out_1 = NULL;
main_List_1_in_1 = -7000;
main_List_1_in_4 = 900.0;
main_List_1_in_5 = 2900.0;
main_List_1_out_1 = NULL;
main_Construct_1_in_2 = NULL;
main_Construct_1_in_3 = NULL;
main_Construct_1_in_4 = {[.1 .1 1],[.4 1 1],[1 .5 0],[.4 .1 .1],[.2 .1 .1]};
main_Construct_1_out_1 = NULL;
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 6.00000 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 6.00000 ;
main_Compute_4_in_1 = "$0+.01";
main_Compute_4_out_1 = NULL;
main_Isosurface_1_in_3 = NULL;
main_Isosurface_1_in_4 = NULL;
main_Isosurface_1_in_5 = NULL;
main_Isosurface_1_in_6 = NULL;
main_Isosurface_1_out_1 = NULL;
main_Color_2_in_2 = "black";
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_Mark_1_in_2 = "positions";
main_Mark_1_out_1 = NULL;
main_Compute_5_in_1 = "$0/1000.0";
main_Compute_5_out_1 = NULL;
main_Unmark_1_in_2 = "positions";
main_Unmark_1_out_1 = NULL;
main_ColorBar_1_in_2 = [0.8, 0.95];
main_ColorBar_1_in_3 = NULL;
main_ColorBar_1_in_4 = 1;
main_ColorBar_1_in_5 = NULL;
main_ColorBar_1_in_6 = NULL;
main_ColorBar_1_in_7 = NULL;
main_ColorBar_1_in_8 = NULL;
main_ColorBar_1_in_9 = NULL;
main_ColorBar_1_in_10 = NULL;
main_ColorBar_1_in_11 = NULL;
main_ColorBar_1_in_12 = NULL;
main_ColorBar_1_in_13 = NULL;
main_ColorBar_1_in_14 = NULL;
main_ColorBar_1_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Collect_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X24,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [275 29.1667 0];
main_Image_2_in_6 = [275 29.1667 67.6621];
main_Image_2_in_7 = 36.2601;
main_Image_2_in_8 = 640;
main_Image_2_in_9 = 0.75;
main_Image_2_in_10 = [0 1 0];
main_Image_2_in_11 = NULL;
main_Image_2_in_12 = 0;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = NULL;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = NULL;
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

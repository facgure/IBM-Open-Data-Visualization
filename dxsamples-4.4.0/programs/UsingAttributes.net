//
// time: Wed Apr  9 15:46:10 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
// CATEGORY Macros
//
// comment: This example visual program shows two ways to use attributes.
// comment: 
// comment:  The data file  datawithattribute.dx has been created with two attributes, "date" and "source".  The Attribute module extracts these attributes, and they are then used to caption the image.  The "source" attribute is incorporated into a longer string using the Format module.
// comment:  
// comment:  The data file labelled_series.dx is a series where each field member of the series has an attribute attached to it. This attribute is called the "field label" attribute, but it could be called anything. The Inquire module is used to extract the list of these attributes from the file. This list is passed into the Selector tool, making it a data-driven Selector. Selector then displays the list of these attributes, and the first output can be used by the Select module to select the member of the series which matches that attribute. 
// workspace: width = 562, height = 573
// layout: snap = 0, width = 50, height = 50, align = UL
//
macro main(
) -> (
) {
    // 
    // node Import[1]: x = 67, y = 6, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "datawithattribute.dx"
    //
main_Import_1_out_1 = 
    Import(
    main_Import_1_in_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Attribute[1]: x = 0, y = 126, inputs = 2, label = Attribute
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "date"
    //
main_Attribute_1_out_1 = 
    Attribute(
    main_Import_1_out_1,
    main_Attribute_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Attribute[2]: x = 95, y = 124, inputs = 2, label = Attribute
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "source"
    //
main_Attribute_2_out_1 = 
    Attribute(
    main_Import_1_out_1,
    main_Attribute_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node AutoColor[1]: x = 199, y = 207, inputs = 10, label = AutoColor
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Import_1_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Import[8]: x = 353, y = 9, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "labelled_series"
    //
main_Import_8_out_1 = 
    Import(
    main_Import_8_in_1,
    main_Import_8_in_2,
    main_Import_8_in_3,
    main_Import_8_in_4,
    main_Import_8_in_5,
    main_Import_8_in_6
    ) [instance: 8, cache: 1];
    // 
    // node Inquire[3]: x = 365, y = 90, inputs = 3, label = Inquire-extracts the "field label" attribute from each member of the series
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "member attributes"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "field label"
    //
main_Inquire_3_out_1 = 
    Inquire(
    main_Import_8_out_1,
    main_Inquire_3_in_2,
    main_Inquire_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Selector[12]: x = 366, y = 170, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_12"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "first member" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "first member" "second member" "third member" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 0 1 2 }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "first member" 
    //
main_Selector_12_out_1[cache: 2],
main_Selector_12_out_2[cache: 2] = 
    Selector(
    main_Selector_12_in_1,
    main_Selector_12_in_2,
    main_Selector_12_in_3,
    main_Inquire_3_out_1,
    main_Selector_12_in_5,
    main_Selector_12_in_6,
    main_Selector_12_in_7
    ) [instance: 12, cache: 1];
    // 
    // node Select[5]: x = 327, y = 249, inputs = 3, label = Select
    //
main_Select_5_out_1 = 
    Select(
    main_Import_8_out_1,
    main_Selector_12_out_1,
    main_Select_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node AutoColor[8]: x = 411, y = 333, inputs = 10, label = AutoColor
    //
main_AutoColor_8_out_1,
main_AutoColor_8_out_2 = 
    AutoColor(
    main_Select_5_out_1,
    main_AutoColor_8_in_2,
    main_AutoColor_8_in_3,
    main_AutoColor_8_in_4,
    main_AutoColor_8_in_5,
    main_AutoColor_8_in_6,
    main_Import_8_out_1,
    main_AutoColor_8_in_8,
    main_AutoColor_8_in_9,
    main_AutoColor_8_in_10
    ) [instance: 8, cache: 1];
    // 
    // node Format[1]: x = 106, y = 202, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "data source: %s"
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Attribute_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node List[1]: x = 38, y = 287, inputs = 2, label = List
    //
main_List_1_out_1 = 
    List(
    main_Attribute_1_out_1,
    main_Format_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Caption[1]: x = 44, y = 381, inputs = 9, label = Caption
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [0.05, 0.95]
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.00000
    //
main_Caption_1_out_1 = 
    Caption(
    main_List_1_out_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Caption[3]: x = 501, y = 340, inputs = 9, label = Caption
    //
main_Caption_3_out_1 = 
    Caption(
    main_Selector_12_out_2,
    main_Caption_3_in_2,
    main_Caption_3_in_3,
    main_Caption_3_in_4,
    main_Caption_3_in_5,
    main_Caption_3_in_6,
    main_Caption_3_in_7,
    main_Caption_3_in_8,
    main_Caption_3_in_9
    ) [instance: 3, cache: 1];
    // 
    // node Collect[1]: x = 146, y = 368, inputs = 2, label = Collect
    //
main_Collect_1_out_1 = 
    Collect(
    main_Caption_1_out_1,
    main_AutoColor_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Collect[6]: x = 426, y = 427, inputs = 2, label = Collect
    //
main_Collect_6_out_1 = 
    Collect(
    main_AutoColor_8_out_1,
    main_Caption_3_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Image[6]: x = 184, y = 474, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_6"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [1 1.45465 2]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-4.01188 4.84008 13.965]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 7.18469
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 408
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.808
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.0470653 0.96615 -0.253651]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // depth: value = 24
    // window: position = (0.5312,0.5518), size = 0.3297x0.3896
    // internal caching: 1
    //
main_Image_6_out_1,
main_Image_6_out_2,
main_Image_6_out_3 = 
    Image(
    main_Image_6_in_1,
    main_Collect_1_out_1,
    main_Image_6_in_3,
    main_Image_6_in_4,
    main_Image_6_in_5,
    main_Image_6_in_6,
    main_Image_6_in_7,
    main_Image_6_in_8,
    main_Image_6_in_9,
    main_Image_6_in_10,
    main_Image_6_in_11,
    main_Image_6_in_12,
    main_Image_6_in_13,
    main_Image_6_in_14,
    main_Image_6_in_15,
    main_Image_6_in_16,
    main_Image_6_in_17,
    main_Image_6_in_18,
    main_Image_6_in_19,
    main_Image_6_in_20,
    main_Image_6_in_21,
    main_Image_6_in_22,
    main_Image_6_in_23,
    main_Image_6_in_24,
    main_Image_6_in_25,
    main_Image_6_in_26,
    main_Image_6_in_27,
    main_Image_6_in_28,
    main_Image_6_in_29,
    main_Image_6_in_30,
    main_Image_6_in_31,
    main_Image_6_in_32,
    main_Image_6_in_33,
    main_Image_6_in_34,
    main_Image_6_in_35,
    main_Image_6_in_36,
    main_Image_6_in_37,
    main_Image_6_in_38,
    main_Image_6_in_39,
    main_Image_6_in_40,
    main_Image_6_in_41,
    main_Image_6_in_42,
    main_Image_6_in_43,
    main_Image_6_in_44,
    main_Image_6_in_45,
    main_Image_6_in_46,
    main_Image_6_in_47,
    main_Image_6_in_48
    ) [instance: 6, cache: 1];
    // 
    // node Image[7]: x = 445, y = 511, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_7"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [1.5 1 1]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [1.5 1 9.22257]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 4.40648
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 449
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.794
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // depth: value = 24
    // window: position = (0.5039,0.1074), size = 0.3617x0.3906
    // internal caching: 1
    //
main_Image_7_out_1,
main_Image_7_out_2,
main_Image_7_out_3 = 
    Image(
    main_Image_7_in_1,
    main_Collect_6_out_1,
    main_Image_7_in_3,
    main_Image_7_in_4,
    main_Image_7_in_5,
    main_Image_7_in_6,
    main_Image_7_in_7,
    main_Image_7_in_8,
    main_Image_7_in_9,
    main_Image_7_in_10,
    main_Image_7_in_11,
    main_Image_7_in_12,
    main_Image_7_in_13,
    main_Image_7_in_14,
    main_Image_7_in_15,
    main_Image_7_in_16,
    main_Image_7_in_17,
    main_Image_7_in_18,
    main_Image_7_in_19,
    main_Image_7_in_20,
    main_Image_7_in_21,
    main_Image_7_in_22,
    main_Image_7_in_23,
    main_Image_7_in_24,
    main_Image_7_in_25,
    main_Image_7_in_26,
    main_Image_7_in_27,
    main_Image_7_in_28,
    main_Image_7_in_29,
    main_Image_7_in_30,
    main_Image_7_in_31,
    main_Image_7_in_32,
    main_Image_7_in_33,
    main_Image_7_in_34,
    main_Image_7_in_35,
    main_Image_7_in_36,
    main_Image_7_in_37,
    main_Image_7_in_38,
    main_Image_7_in_39,
    main_Image_7_in_40,
    main_Image_7_in_41,
    main_Image_7_in_42,
    main_Image_7_in_43,
    main_Image_7_in_44,
    main_Image_7_in_45,
    main_Image_7_in_46,
    main_Image_7_in_47,
    main_Image_7_in_48
    ) [instance: 7, cache: 1];
// network: end of macro body
CacheScene("Image_6", main_Image_6_out_1, main_Image_6_out_2);
CacheScene("Image_7", main_Image_7_out_1, main_Image_7_out_2);
}
main_Import_1_in_1 = "datawithattribute.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Attribute_1_in_2 = "date";
main_Attribute_1_out_1 = NULL;
main_Attribute_2_in_2 = "source";
main_Attribute_2_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_1 = NULL;
main_Import_8_in_1 = "labelled_series";
main_Import_8_in_2 = NULL;
main_Import_8_in_3 = NULL;
main_Import_8_in_4 = NULL;
main_Import_8_in_5 = NULL;
main_Import_8_in_6 = NULL;
main_Import_8_out_1 = NULL;
main_Inquire_3_in_2 = "member attributes";
main_Inquire_3_in_3 = "field label";
main_Inquire_3_out_1 = NULL;
main_Selector_12_in_1 = "Selector_12";
main_Selector_12_in_2 = "first member" ;
main_Selector_12_in_3 = 0 ;
main_Selector_12_in_5 = NULL;
main_Selector_12_in_6 = NULL;
main_Selector_12_in_7 = NULL;
main_Selector_12_out_1 = 0 ;
main_Selector_12_out_2 = "first member" ;
main_Select_5_in_3 = NULL;
main_Select_5_out_1 = NULL;
main_AutoColor_8_in_2 = NULL;
main_AutoColor_8_in_3 = NULL;
main_AutoColor_8_in_4 = NULL;
main_AutoColor_8_in_5 = NULL;
main_AutoColor_8_in_6 = NULL;
main_AutoColor_8_in_8 = NULL;
main_AutoColor_8_in_9 = NULL;
main_AutoColor_8_in_10 = NULL;
main_AutoColor_8_out_1 = NULL;
main_Format_1_in_1 = "data source: %s";
main_Format_1_out_1 = NULL;
main_List_1_out_1 = NULL;
main_Caption_1_in_2 = [0.05, 0.95];
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = 0.00000;
main_Caption_1_in_6 = NULL;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Caption_3_in_2 = NULL;
main_Caption_3_in_3 = NULL;
main_Caption_3_in_4 = NULL;
main_Caption_3_in_5 = NULL;
main_Caption_3_in_6 = NULL;
main_Caption_3_in_7 = NULL;
main_Caption_3_in_8 = NULL;
main_Caption_3_in_9 = NULL;
main_Caption_3_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_Collect_6_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_6_in_1 = "Image_6";
main_Image_6_in_3 = "X24,,";
main_Image_6_in_4 = 1;
main_Image_6_in_5 = [1 1.45465 2];
main_Image_6_in_6 = [-4.01188 4.84008 13.965];
main_Image_6_in_7 = 7.18469;
main_Image_6_in_8 = 408;
main_Image_6_in_9 = 0.808;
main_Image_6_in_10 = [0.0470653 0.96615 -0.253651];
main_Image_6_in_11 = NULL;
main_Image_6_in_12 = 0;
main_Image_6_in_13 = NULL;
main_Image_6_in_14 = 1;
main_Image_6_in_15 = NULL;
main_Image_6_in_16 = NULL;
main_Image_6_in_17 = NULL;
main_Image_6_in_18 = NULL;
main_Image_6_in_19 = 0;
main_Image_6_in_20 = NULL;
main_Image_6_in_21 = NULL;
main_Image_6_in_22 = NULL;
main_Image_6_in_23 = NULL;
main_Image_6_in_25 = NULL;
main_Image_6_in_26 = NULL;
main_Image_6_in_27 = NULL;
main_Image_6_in_28 = NULL;
main_Image_6_in_29 = NULL;
main_Image_6_in_30 = NULL;
main_Image_6_in_31 = NULL;
main_Image_6_in_32 = NULL;
main_Image_6_in_33 = NULL;
main_Image_6_in_34 = NULL;
main_Image_6_in_35 = NULL;
main_Image_6_in_36 = NULL;
main_Image_6_in_37 = NULL;
main_Image_6_in_38 = NULL;
main_Image_6_in_39 = NULL;
main_Image_6_in_40 = NULL;
main_Image_6_in_41 = NULL;
main_Image_6_in_42 = NULL;
main_Image_6_in_43 = NULL;
main_Image_6_in_44 = NULL;
main_Image_6_in_45 = NULL;
main_Image_6_in_46 = NULL;
main_Image_6_in_47 = NULL;
main_Image_6_in_48 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_7_in_1 = "Image_7";
main_Image_7_in_3 = "X24,,";
main_Image_7_in_4 = 1;
main_Image_7_in_5 = [1.5 1 1];
main_Image_7_in_6 = [1.5 1 9.22257];
main_Image_7_in_7 = 4.40648;
main_Image_7_in_8 = 449;
main_Image_7_in_9 = 0.794;
main_Image_7_in_10 = [0 1 0];
main_Image_7_in_11 = NULL;
main_Image_7_in_12 = 0;
main_Image_7_in_13 = NULL;
main_Image_7_in_14 = 1;
main_Image_7_in_15 = NULL;
main_Image_7_in_16 = NULL;
main_Image_7_in_17 = NULL;
main_Image_7_in_18 = NULL;
main_Image_7_in_19 = 0;
main_Image_7_in_20 = NULL;
main_Image_7_in_21 = NULL;
main_Image_7_in_22 = NULL;
main_Image_7_in_23 = NULL;
main_Image_7_in_25 = NULL;
main_Image_7_in_26 = NULL;
main_Image_7_in_27 = NULL;
main_Image_7_in_28 = NULL;
main_Image_7_in_29 = NULL;
main_Image_7_in_30 = NULL;
main_Image_7_in_31 = NULL;
main_Image_7_in_32 = NULL;
main_Image_7_in_33 = NULL;
main_Image_7_in_34 = NULL;
main_Image_7_in_35 = NULL;
main_Image_7_in_36 = NULL;
main_Image_7_in_37 = NULL;
main_Image_7_in_38 = NULL;
main_Image_7_in_39 = NULL;
main_Image_7_in_40 = NULL;
main_Image_7_in_41 = NULL;
main_Image_7_in_42 = NULL;
main_Image_7_in_43 = NULL;
main_Image_7_in_44 = NULL;
main_Image_7_in_45 = NULL;
main_Image_7_in_46 = NULL;
main_Image_7_in_47 = NULL;
main_Image_7_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

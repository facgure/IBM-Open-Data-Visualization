//
// time: Wed Apr  9 15:40:40 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
//
// comment: This visual program shows one way to use the Pick tool.  Execute once. Click one or more times somewhere on the isosurface to place pick points, then execute again. A streamline will appear. That streamlines start at the points on the isosurface selected by the pick. In addition, a magenta glyph marks each pick point, and text is placed at each pick point indicating the wind value. 
// comment: 
// comment: The image window is automatically put into "pick" mode by using the intrctnMode parameter to the Image tool.
// page assignment: import	order=2, windowed=0, showing=1
// page assignment: pick	order=3, windowed=0, showing=0
// page assignment: pick_viz	order=6, windowed=0, showing=0
// page assignment: streamline	order=4, windowed=0, showing=0
// page assignment: text	order=5, windowed=0, showing=0
// workspace: width = 282, height = 514
// layout: snap = 0, width = 50, height = 50, align = UL
//
macro main(
) -> (
) {
    // 
    // node Import[3]: x = 154, y = 26, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "wind"
    // page group: import
    //
main_Import_3_out_1 = 
    Import(
    main_Import_3_in_1,
    main_Import_3_in_2,
    main_Import_3_in_3,
    main_Import_3_in_4,
    main_Import_3_in_5,
    main_Import_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[1]: x = 171, y = 330, inputs = 1, label = wind
    // page group: import
    //
wind = main_Import_3_out_1;
    // 
    // node Receiver[4]: x = 20, y = 30, inputs = 1, label = wind
    // page group: streamline
    //
main_Receiver_4_out_1[cache: 0] = wind;
    // 
    // node Pick[1]: x = 61, y = 20, inputs = 9, label = Pick_1
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Pick_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "Image_5"
    // input[3]: defaulting = 0, visible = 0, type = 16777224, value = NULL
    // input[4]: defaulting = 0, visible = 0, type = 3, value = 89
    // input[5]: defaulting = 1, visible = 1, type = 3, value = 1
    // input[7]: defaulting = 1, visible = 1, type = 3, value = 1
    // page group: pick
    //
main_Pick_1_out_1 = 
    Pick(
    main_Pick_1_in_1,
    main_Pick_1_in_2,
    main_Pick_1_in_3,
    main_Pick_1_in_4,
    main_Pick_1_in_5,
    main_Pick_1_in_6,
    main_Pick_1_in_7,
    main_Pick_1_in_8,
    main_Pick_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Extract[1]: x = 306, y = 177, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: pick
    //
main_Extract_1_out_1 = 
    Extract(
    main_Pick_1_out_1,
    main_Extract_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[2]: x = 285, y = 417, inputs = 1, label = pick_position
    // page group: pick
    //
pick_position = main_Extract_1_out_1;
    // 
    // node Receiver[6]: x = 82, y = 33, inputs = 1, label = pick_position
    // page group: streamline
    //
main_Receiver_6_out_1[cache: 0] = pick_position;
    // 
    // node Streamline[1]: x = 37, y = 149, inputs = 7, label = Streamline
    // input[6]: defaulting = 0, visible = 1, type = 3, value = 1
    // page group: streamline
    //
main_Streamline_1_out_1 = 
    Streamline(
    main_Receiver_4_out_1,
    main_Receiver_6_out_1,
    main_Streamline_1_in_3,
    main_Streamline_1_in_4,
    main_Streamline_1_in_5,
    main_Streamline_1_in_6,
    main_Streamline_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[2]: x = 59, y = 231, inputs = 10, label = AutoColor
    // page group: streamline
    //
main_AutoColor_2_out_1,
main_AutoColor_2_out_2 = 
    AutoColor(
    main_Streamline_1_out_1,
    main_AutoColor_2_in_2,
    main_AutoColor_2_in_3,
    main_AutoColor_2_in_4,
    main_AutoColor_2_in_5,
    main_AutoColor_2_in_6,
    main_AutoColor_2_in_7,
    main_AutoColor_2_in_8,
    main_AutoColor_2_in_9,
    main_AutoColor_2_in_10
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[5]: x = 190, y = 411, inputs = 1, label = pick
    // page group: pick
    //
pick = main_Pick_1_out_1;
    // 
    // node Receiver[7]: x = 42, y = 30, inputs = 1, label = pick
    // page group: text
    //
main_Receiver_7_out_1[cache: 0] = pick;
    // 
    // node Receiver[1]: x = 107, y = 29, inputs = 1, label = wind
    // page group: text
    //
main_Receiver_1_out_1[cache: 0] = wind;
    // 
    // node Map[1]: x = 68, y = 111, inputs = 4, label = Map
    // page group: text
    //
main_Map_1_out_1 = 
    Map(
    main_Receiver_7_out_1,
    main_Receiver_1_out_1,
    main_Map_1_in_3,
    main_Map_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node AutoGlyph[2]: x = 44, y = 225, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "text font=area"
    // page group: text
    //
main_AutoGlyph_2_out_1 = 
    AutoGlyph(
    main_Map_1_out_1,
    main_AutoGlyph_2_in_2,
    main_AutoGlyph_2_in_3,
    main_AutoGlyph_2_in_4,
    main_AutoGlyph_2_in_5,
    main_AutoGlyph_2_in_6,
    main_AutoGlyph_2_in_7
    ) [instance: 2, cache: 1];
    // 
    // node Caption[1]: x = 57, y = 244, inputs = 9, label = Caption
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"Use mouse to place one or more picks. ""(See \"Application Comment\" for How to Use Picking)"}
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [.05 .95]
    // page group: pick_viz
    //
main_Caption_1_out_1 = 
    Caption(
    main_Caption_1_in_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Import[2]: x = 27, y = 20, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "cloudwater"
    // page group: import
    //
main_Import_2_out_1 = 
    Import(
    main_Import_2_in_1,
    main_Import_2_in_2,
    main_Import_2_in_3,
    main_Import_2_in_4,
    main_Import_2_in_5,
    main_Import_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Isosurface[1]: x = 22, y = 116, inputs = 6, label = Isosurface
    // page group: import
    //
main_Isosurface_1_out_1 = 
    Isosurface(
    main_Import_2_out_1,
    main_Isosurface_1_in_2,
    main_Isosurface_1_in_3,
    main_Isosurface_1_in_4,
    main_Isosurface_1_in_5,
    main_Isosurface_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Color[6]: x = 20, y = 212, inputs = 5, label = Color
    // input[3]: defaulting = 0, visible = 1, type = 5, value = 0.5
    // page group: import
    //
main_Color_6_out_1 = 
    Color(
    main_Isosurface_1_out_1,
    main_Color_6_in_2,
    main_Color_6_in_3,
    main_Color_6_in_4,
    main_Color_6_in_5
    ) [instance: 6, cache: 1];
    // 
    // node Transmitter[3]: x = 22, y = 329, inputs = 1, label = colored_iso
    // page group: import
    //
colored_iso = main_Color_6_out_1;
    // 
    // node Receiver[3]: x = 16, y = 178, inputs = 1, label = colored_iso
    //
main_Receiver_3_out_1[cache: 0] = colored_iso;
    // 
    // node Receiver[5]: x = 48, y = 23, inputs = 1, label = pick
    // page group: pick_viz
    //
main_Receiver_5_out_1[cache: 0] = pick;
    // 
    // node Inquire[1]: x = 53, y = 133, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "is empty"
    // page group: pick_viz
    //
main_Inquire_1_out_1 = 
    Inquire(
    main_Receiver_5_out_1,
    main_Inquire_1_in_2,
    main_Inquire_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node Switch[2]: x = 20, y = 319, inputs = 2, label = Switch
    // page group: pick_viz
    //
main_Switch_2_out_1 = 
    Switch(
    main_Inquire_1_out_1,
    main_Caption_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Compute[1]: x = 138, y = 246, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0 ? 0 : 1"
    // page group: pick_viz
    // expression: value = empty ? 0 : 1
    // name[2]: value = empty
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Inquire_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Glyph[1]: x = 24, y = 177, inputs = 7, label = Glyph
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 1000.00
    // page group: pick
    //
main_Glyph_1_out_1 = 
    Glyph(
    main_Pick_1_out_1,
    main_Glyph_1_in_2,
    main_Glyph_1_in_3,
    main_Glyph_1_in_4,
    main_Glyph_1_in_5,
    main_Glyph_1_in_6,
    main_Glyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Color[7]: x = 41, y = 300, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "magenta"
    // page group: pick
    //
main_Color_7_out_1 = 
    Color(
    main_Glyph_1_out_1,
    main_Color_7_in_2,
    main_Color_7_in_3,
    main_Color_7_in_4,
    main_Color_7_in_5
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[7]: x = 72, y = 416, inputs = 1, label = glyph
    // page group: pick
    //
glyph = main_Color_7_out_1;
    // 
    // node Receiver[8]: x = 223, y = 129, inputs = 1, label = glyph
    // page group: pick_viz
    //
main_Receiver_8_out_1[cache: 0] = glyph;
    // 
    // node Ribbon[1]: x = 83, y = 328, inputs = 2, label = Ribbon
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 2000.00
    // page group: streamline
    //
main_Ribbon_1_out_1 = 
    Ribbon(
    main_AutoColor_2_out_1,
    main_Ribbon_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[8]: x = 81, y = 430, inputs = 1, label = streamline
    // page group: streamline
    //
streamline = main_Ribbon_1_out_1;
    // 
    // node Receiver[9]: x = 287, y = 129, inputs = 1, label = streamline
    // page group: pick_viz
    //
main_Receiver_9_out_1[cache: 0] = streamline;
    // 
    // node Transmitter[9]: x = 74, y = 382, inputs = 1, label = text
    // page group: text
    //
text = main_AutoGlyph_2_out_1;
    // 
    // node Receiver[10]: x = 380, y = 133, inputs = 1, label = text
    // page group: pick_viz
    //
main_Receiver_10_out_1[cache: 0] = text;
    // 
    // node Collect[8]: x = 269, y = 295, inputs = 3, label = Collect
    // page group: pick_viz
    //
main_Collect_8_out_1 = 
    Collect(
    main_Receiver_8_out_1,
    main_Receiver_9_out_1,
    main_Receiver_10_out_1
    ) [instance: 8, cache: 1];
    // 
    // node Switch[1]: x = 133, y = 332, inputs = 2, label = Switch
    // page group: pick_viz
    //
main_Switch_1_out_1 = 
    Switch(
    main_Compute_1_out_1,
    main_Collect_8_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Collect[9]: x = 112, y = 428, inputs = 2, label = Collect
    // page group: pick_viz
    //
main_Collect_9_out_1 = 
    Collect(
    main_Switch_2_out_1,
    main_Switch_1_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Transmitter[10]: x = 151, y = 506, inputs = 1, label = pick_viz
    // page group: pick_viz
    //
pick_viz = main_Collect_9_out_1;
    // 
    // node Receiver[11]: x = 134, y = 182, inputs = 1, label = pick_viz
    //
main_Receiver_11_out_1[cache: 0] = pick_viz;
    // 
    // node Collect[7]: x = 79, y = 363, inputs = 2, label = Collect
    //
main_Collect_7_out_1 = 
    Collect(
    main_Receiver_3_out_1,
    main_Receiver_11_out_1
    ) [instance: 7, cache: 1];
    // 
    // node Image[5]: x = 73, y = 452, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_5"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [50000 7255.11 29674.9]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-29419.4 274965 -8359.79]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 115630.0
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.936467 0.241701 -0.254186]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 23.1866
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 1, type = 32, value = "pick"
    // depth: value = 24
    // window: position = (0.3336,0.4121), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_5_out_1,
main_Image_5_out_2,
main_Image_5_out_3 = 
    Image(
    main_Image_5_in_1,
    main_Collect_7_out_1,
    main_Image_5_in_3,
    main_Image_5_in_4,
    main_Image_5_in_5,
    main_Image_5_in_6,
    main_Image_5_in_7,
    main_Image_5_in_8,
    main_Image_5_in_9,
    main_Image_5_in_10,
    main_Image_5_in_11,
    main_Image_5_in_12,
    main_Image_5_in_13,
    main_Image_5_in_14,
    main_Image_5_in_15,
    main_Image_5_in_16,
    main_Image_5_in_17,
    main_Image_5_in_18,
    main_Image_5_in_19,
    main_Image_5_in_20,
    main_Image_5_in_21,
    main_Image_5_in_22,
    main_Image_5_in_23,
    main_Image_5_in_24,
    main_Image_5_in_25,
    main_Image_5_in_26,
    main_Image_5_in_27,
    main_Image_5_in_28,
    main_Image_5_in_29,
    main_Image_5_in_30,
    main_Image_5_in_31,
    main_Image_5_in_32,
    main_Image_5_in_33,
    main_Image_5_in_34,
    main_Image_5_in_35,
    main_Image_5_in_36,
    main_Image_5_in_37,
    main_Image_5_in_38,
    main_Image_5_in_39,
    main_Image_5_in_40,
    main_Image_5_in_41,
    main_Image_5_in_42,
    main_Image_5_in_43,
    main_Image_5_in_44,
    main_Image_5_in_45,
    main_Image_5_in_46,
    main_Image_5_in_47,
    main_Image_5_in_48
    ) [instance: 5, cache: 1];
    //
    // decorator Annotate	pos=(245,97) size=360x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 50
    // annotation user: This page imports data, and creates an isosurface.
    // annotation user_end: <NULL>
    // page group: import
    //
    // decorator Annotate	pos=(216,34) size=383x60 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 156
    // annotation user: This page contains the pick tool. A glyph is created at
    // annotation user: the picked point. In addition, just the position of the
    // annotation user: pick is extracted and sent to a transmitter.
    // annotation user_end: <NULL>
    // resource *decorator.alignment:XmALIGNMENT_BEGINNING
    // page group: pick
    //
    // decorator Annotate	pos=(204,72) size=420x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 81
    // annotation user: A streamline is started at the picked position, colored, and 
    // annotation user: made into a ribbon.
    // annotation user_end: <NULL>
    // page group: streamline
    //
    // decorator Annotate	pos=(161,111) size=346x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 75
    // annotation user: The wind data is mapped onto the pick positions
    // annotation user: and text glyphs are created
    // annotation user_end: <NULL>
    // page group: text
    //
    // decorator Annotate	pos=(154,39) size=437x76 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 228
    // annotation user: Inquire is used to check whether or not the pick field is empty
    // annotation user: (that is, if the user hasn't picked anything yet). If so, then
    // annotation user: a caption telling the user what to do is put up. Otherwise, the
    // annotation user: visualization using the pick is used.
    // annotation user_end: <NULL>
    // page group: pick_viz
    //
    // decorator Annotate	pos=(31,70) size=251x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 34
    // annotation user: The image is presented to the user
    // annotation user_end: <NULL>
// network: end of macro body
CacheScene("Image_5", main_Image_5_out_1, main_Image_5_out_2);
}
main_Import_3_in_1 = "wind";
main_Import_3_in_2 = NULL;
main_Import_3_in_3 = NULL;
main_Import_3_in_4 = NULL;
main_Import_3_in_5 = NULL;
main_Import_3_in_6 = NULL;
main_Import_3_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Pick_1_in_1 = "Pick_1";
main_Pick_1_in_2 = "Image_5";
main_Pick_1_in_3 = NULL;
main_Pick_1_in_4 = 89;
main_Pick_1_in_5 = NULL;
main_Pick_1_in_6 = NULL;
main_Pick_1_in_7 = NULL;
main_Pick_1_in_8 = NULL;
main_Pick_1_in_9 = NULL;
main_Pick_1_out_1 = NULL;
main_Extract_1_in_2 = "positions";
main_Extract_1_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_6_out_1 = NULL;
main_Streamline_1_in_3 = NULL;
main_Streamline_1_in_4 = NULL;
main_Streamline_1_in_5 = NULL;
main_Streamline_1_in_6 = 1;
main_Streamline_1_in_7 = NULL;
main_Streamline_1_out_1 = NULL;
main_AutoColor_2_in_2 = NULL;
main_AutoColor_2_in_3 = NULL;
main_AutoColor_2_in_4 = NULL;
main_AutoColor_2_in_5 = NULL;
main_AutoColor_2_in_6 = NULL;
main_AutoColor_2_in_7 = NULL;
main_AutoColor_2_in_8 = NULL;
main_AutoColor_2_in_9 = NULL;
main_AutoColor_2_in_10 = NULL;
main_AutoColor_2_out_1 = NULL;
main_Transmitter_5_out_1 = NULL;
main_Receiver_7_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Map_1_in_3 = NULL;
main_Map_1_in_4 = NULL;
main_Map_1_out_1 = NULL;
main_AutoGlyph_2_in_2 = "text font=area";
main_AutoGlyph_2_in_3 = NULL;
main_AutoGlyph_2_in_4 = NULL;
main_AutoGlyph_2_in_5 = NULL;
main_AutoGlyph_2_in_6 = NULL;
main_AutoGlyph_2_in_7 = NULL;
main_AutoGlyph_2_out_1 = NULL;
main_Caption_1_in_1 = {"Use mouse to place one or more picks. ""(See \"Application Comment\" for How to Use Picking)"};
main_Caption_1_in_2 = [.05 .95];
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = NULL;
main_Caption_1_in_6 = NULL;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Import_2_in_1 = "cloudwater";
main_Import_2_in_2 = NULL;
main_Import_2_in_3 = NULL;
main_Import_2_in_4 = NULL;
main_Import_2_in_5 = NULL;
main_Import_2_in_6 = NULL;
main_Import_2_out_1 = NULL;
main_Isosurface_1_in_2 = NULL;
main_Isosurface_1_in_3 = NULL;
main_Isosurface_1_in_4 = NULL;
main_Isosurface_1_in_5 = NULL;
main_Isosurface_1_in_6 = NULL;
main_Isosurface_1_out_1 = NULL;
main_Color_6_in_2 = NULL;
main_Color_6_in_3 = 0.5;
main_Color_6_in_4 = NULL;
main_Color_6_in_5 = NULL;
main_Color_6_out_1 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_Inquire_1_in_2 = "is empty";
main_Inquire_1_in_3 = NULL;
main_Inquire_1_out_1 = NULL;
main_Switch_2_out_1 = NULL;
main_Compute_1_in_1 = "$0 ? 0 : 1";
main_Compute_1_out_1 = NULL;
main_Glyph_1_in_2 = NULL;
main_Glyph_1_in_3 = NULL;
main_Glyph_1_in_4 = 1000.00;
main_Glyph_1_in_5 = NULL;
main_Glyph_1_in_6 = NULL;
main_Glyph_1_in_7 = NULL;
main_Glyph_1_out_1 = NULL;
main_Color_7_in_2 = "magenta";
main_Color_7_in_3 = NULL;
main_Color_7_in_4 = NULL;
main_Color_7_in_5 = NULL;
main_Color_7_out_1 = NULL;
main_Transmitter_7_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_Ribbon_1_in_2 = 2000.00;
main_Ribbon_1_out_1 = NULL;
main_Transmitter_8_out_1 = NULL;
main_Receiver_9_out_1 = NULL;
main_Transmitter_9_out_1 = NULL;
main_Receiver_10_out_1 = NULL;
main_Collect_8_out_1 = NULL;
main_Switch_1_out_1 = NULL;
main_Collect_9_out_1 = NULL;
main_Transmitter_10_out_1 = NULL;
main_Receiver_11_out_1 = NULL;
main_Collect_7_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_5_in_1 = "Image_5";
main_Image_5_in_3 = "X24,,";
main_Image_5_in_4 = 1;
main_Image_5_in_5 = [50000 7255.11 29674.9];
main_Image_5_in_6 = [-29419.4 274965 -8359.79];
main_Image_5_in_7 = 115630.0;
main_Image_5_in_8 = 640;
main_Image_5_in_9 = 0.75;
main_Image_5_in_10 = [0.936467 0.241701 -0.254186];
main_Image_5_in_11 = NULL;
main_Image_5_in_12 = 0;
main_Image_5_in_13 = NULL;
main_Image_5_in_14 = 1;
main_Image_5_in_15 = NULL;
main_Image_5_in_16 = NULL;
main_Image_5_in_17 = NULL;
main_Image_5_in_18 = NULL;
main_Image_5_in_19 = 0;
main_Image_5_in_20 = NULL;
main_Image_5_in_21 = NULL;
main_Image_5_in_22 = NULL;
main_Image_5_in_23 = NULL;
main_Image_5_in_25 = NULL;
main_Image_5_in_26 = NULL;
main_Image_5_in_27 = NULL;
main_Image_5_in_28 = NULL;
main_Image_5_in_29 = NULL;
main_Image_5_in_30 = NULL;
main_Image_5_in_31 = NULL;
main_Image_5_in_32 = NULL;
main_Image_5_in_33 = NULL;
main_Image_5_in_34 = NULL;
main_Image_5_in_35 = NULL;
main_Image_5_in_36 = NULL;
main_Image_5_in_37 = NULL;
main_Image_5_in_38 = NULL;
main_Image_5_in_39 = NULL;
main_Image_5_in_40 = NULL;
main_Image_5_in_41 = "pick";
main_Image_5_in_42 = NULL;
main_Image_5_in_43 = NULL;
main_Image_5_in_44 = NULL;
main_Image_5_in_45 = NULL;
main_Image_5_in_46 = NULL;
main_Image_5_in_47 = NULL;
main_Image_5_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

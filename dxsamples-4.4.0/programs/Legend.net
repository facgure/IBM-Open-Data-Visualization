//
// time: Wed Apr  9 15:39:05 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
//
// comment: A simple spreadsheet data file is displayed such that each
// comment: category (salesperson) is shown in a different color, while
// comment: each sale is shown with a different glyph. The sale is characterized by two numbers: product and region, and these are displayed in a two-dimensional graph.
// comment: 
// comment: A legend associates a color with each salesperson.
// page assignment: glyphs	order=2, windowed=0, showing=1
// page assignment: image	order=4, windowed=0, showing=0
// page assignment: legend	order=3, windowed=0, showing=0
// workspace: width = 544, height = 608
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node ImportSpreadsheet[1]: x = 18, y = 20, inputs = 10, label = ImportSpreadsheet
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "salesdata.txt"
    // input[5]: defaulting = 0, visible = 1, type = 16777248, value = {"allstring"}
    // page group: glyphs
    //
main_ImportSpreadsheet_1_out_1,
main_ImportSpreadsheet_1_out_2 = 
    ImportSpreadsheet(
    main_ImportSpreadsheet_1_in_1,
    main_ImportSpreadsheet_1_in_2,
    main_ImportSpreadsheet_1_in_3,
    main_ImportSpreadsheet_1_in_4,
    main_ImportSpreadsheet_1_in_5,
    main_ImportSpreadsheet_1_in_6,
    main_ImportSpreadsheet_1_in_7,
    main_ImportSpreadsheet_1_in_8,
    main_ImportSpreadsheet_1_in_9,
    main_ImportSpreadsheet_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Mark[16]: x = 35, y = 101, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "salesperson"
    // page group: glyphs
    //
main_Mark_16_out_1 = 
    Mark(
    main_ImportSpreadsheet_1_out_1,
    main_Mark_16_in_2
    ) [instance: 16, cache: 1];
    // 
    // node AutoColor[11]: x = 37, y = 198, inputs = 10, label = AutoColor
    // page group: glyphs
    //
main_AutoColor_11_out_1,
main_AutoColor_11_out_2 = 
    AutoColor(
    main_Mark_16_out_1,
    main_AutoColor_11_in_2,
    main_AutoColor_11_in_3,
    main_AutoColor_11_in_4,
    main_AutoColor_11_in_5,
    main_AutoColor_11_in_6,
    main_AutoColor_11_in_7,
    main_AutoColor_11_in_8,
    main_AutoColor_11_in_9,
    main_AutoColor_11_in_10
    ) [instance: 11, cache: 1];
    // 
    // node Mark[17]: x = 19, y = 284, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "sales"
    // page group: glyphs
    //
main_Mark_17_out_1 = 
    Mark(
    main_AutoColor_11_out_1,
    main_Mark_17_in_2
    ) [instance: 17, cache: 1];
    // 
    // node Unmark[20]: x = 285, y = 302, inputs = 2, label = Unmark
    // page group: glyphs
    //
main_Unmark_20_out_1 = 
    Unmark(
    main_Mark_17_out_1,
    main_Unmark_20_in_2
    ) [instance: 20, cache: 1];
    // 
    // node Mark[18]: x = 267, y = 378, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "product"
    // page group: glyphs
    //
main_Mark_18_out_1 = 
    Mark(
    main_Unmark_20_out_1,
    main_Mark_18_in_2
    ) [instance: 18, cache: 1];
    // 
    // node Mark[19]: x = 333, y = 375, inputs = 2, label = Mark
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "region"
    // page group: glyphs
    //
main_Mark_19_out_1 = 
    Mark(
    main_Unmark_20_out_1,
    main_Mark_19_in_2
    ) [instance: 19, cache: 1];
    // 
    // node Compute[75]: x = 112, y = 456, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "float([$0, $1])"
    // page group: glyphs
    // expression: value = float([a, b])
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_75_out_1 = 
    Compute(
    main_Compute_75_in_1,
    main_Mark_18_out_1,
    main_Mark_19_out_1
    ) [instance: 75, cache: 1];
    // 
    // node Replace[40]: x = 21, y = 527, inputs = 4, label = Replace
    // input[4]: defaulting = 0, visible = 1, type = 32, value = "positions"
    // page group: glyphs
    //
main_Replace_40_out_1 = 
    Replace(
    main_Compute_75_out_1,
    main_Mark_17_out_1,
    main_Replace_40_in_3,
    main_Replace_40_in_4
    ) [instance: 40, cache: 1];
    // 
    // node AutoGlyph[1]: x = 173, y = 542, inputs = 7, label = AutoGlyph
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "spiffy"
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.0
    // input[6]: defaulting = 0, visible = 0, type = 5, value = 0.0
    // page group: glyphs
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_Replace_40_out_1,
    main_AutoGlyph_1_in_2,
    main_AutoGlyph_1_in_3,
    main_AutoGlyph_1_in_4,
    main_AutoGlyph_1_in_5,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[59]: x = 310, y = 546, inputs = 1, label = glyphs
    // page group: glyphs
    //
glyphs = main_AutoGlyph_1_out_1;
    // 
    // node Receiver[109]: x = 63, y = 68, inputs = 1, label = glyphs
    // page group: image
    //
main_Receiver_109_out_1[cache: 0] = glyphs;
    // 
    // node Extract[8]: x = 440, y = 114, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "salesperson lookup"
    // page group: glyphs
    //
main_Extract_8_out_1 = 
    Extract(
    main_ImportSpreadsheet_1_out_1,
    main_Extract_8_in_2
    ) [instance: 8, cache: 1];
    // 
    // node Transmitter[62]: x = 411, y = 201, inputs = 1, label = salesperson_lookup
    // page group: glyphs
    //
salesperson_lookup = main_Extract_8_out_1;
    // 
    // node Receiver[113]: x = 49, y = 29, inputs = 1, label = salesperson_lookup
    // page group: legend
    //
main_Receiver_113_out_1[cache: 0] = salesperson_lookup;
    // 
    // node Transmitter[61]: x = 300, y = 210, inputs = 1, label = colormap
    // page group: glyphs
    //
colormap = main_AutoColor_11_out_2;
    // 
    // node Receiver[112]: x = 197, y = 20, inputs = 1, label = colormap
    // page group: legend
    //
main_Receiver_112_out_1[cache: 0] = colormap;
    // 
    // node Legend[1]: x = 178, y = 188, inputs = 10, label = Legend
    // page group: legend
    //
main_Legend_1_out_1 = 
    Legend(
    main_Receiver_113_out_1,
    main_Receiver_112_out_1,
    main_Legend_1_in_3,
    main_Legend_1_in_4,
    main_Legend_1_in_5,
    main_Legend_1_in_6,
    main_Legend_1_in_7,
    main_Legend_1_in_8,
    main_Legend_1_in_9,
    main_Legend_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[60]: x = 200, y = 282, inputs = 1, label = legend
    // page group: legend
    //
legend = main_Legend_1_out_1;
    // 
    // node Receiver[110]: x = 163, y = 68, inputs = 1, label = legend
    // page group: image
    //
main_Receiver_110_out_1[cache: 0] = legend;
    // 
    // node Collect[2]: x = 99, y = 253, inputs = 2, label = Collect
    // page group: image
    //
main_Collect_2_out_1 = 
    Collect(
    main_Receiver_109_out_1,
    main_Receiver_110_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Receiver[111]: x = 268, y = 63, inputs = 1, label = glyphs
    // page group: image
    //
main_Receiver_111_out_1[cache: 0] = glyphs;
    // 
    // node Extract[9]: x = 290, y = 245, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "region lookup"
    // page group: image
    //
main_Extract_9_out_1 = 
    Extract(
    main_Receiver_111_out_1,
    main_Extract_9_in_2
    ) [instance: 9, cache: 1];
    // 
    // node Extract[10]: x = 207, y = 243, inputs = 2, label = Extract
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "product lookup"
    // page group: image
    //
main_Extract_10_out_1 = 
    Extract(
    main_Receiver_111_out_1,
    main_Extract_10_in_2
    ) [instance: 10, cache: 1];
    // 
    // node Image[2]: x = 175, y = 367, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [2.06826 1.43515 0]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [2.06826 1.43515 13.9335]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 10.1247
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 39.9344
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "zoom"
    // input[46]: visible = 1
    // input[47]: visible = 1
    // page group: image
    // depth: value = 24
    // window: position = (0.2055,0.3857), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_Collect_2_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Extract_10_out_1,
    main_Extract_9_out_1,
    main_Image_2_in_48
    ) [instance: 2, cache: 1];
    //
    // decorator Annotate	pos=(121,212) size=158x28 style(Label), value = <NULL>
    // annotation user_begin: 20
    // annotation user: color by salesperson
    // annotation user_end: <NULL>
    // page group: glyphs
    //
    // decorator Annotate	pos=(1,374) size=244x28 style(Label), value = <NULL>
    // annotation user_begin: 35
    // annotation user: sales are the "data" for glyph size
    // annotation user_end: <NULL>
    // page group: glyphs
    //
    // decorator Annotate	pos=(351,251) size=292x60 style(Label), value = <NULL>
    // annotation user_begin: 104
    // annotation user: Use the lookup maps to label the axes of
    // annotation user: the  plot (associates a name with integer
    // annotation user: value along the axes)
    // annotation user_end: <NULL>
    // page group: image
    //
    // decorator Annotate	pos=(332,195) size=323x44 style(Label), value = <NULL>
    // annotation user_begin: 65
    // annotation user: create a legend associating a color with each
    // annotation user: salesperson's name.
    // annotation user_end: <NULL>
    // page group: legend
    //
    // decorator Annotate	pos=(245,452) size=261x44 style(Label), value = <NULL>
    // annotation user_begin: 76
    // annotation user: create    2-d   positions   from     the
    // annotation user: "product" and "region" information.
    // annotation user_end: <NULL>
    // page group: glyphs
// network: end of macro body
CacheScene("Image_2", main_Image_2_out_1, main_Image_2_out_2);
}
main_ImportSpreadsheet_1_in_1 = "salesdata.txt";
main_ImportSpreadsheet_1_in_2 = NULL;
main_ImportSpreadsheet_1_in_3 = NULL;
main_ImportSpreadsheet_1_in_4 = NULL;
main_ImportSpreadsheet_1_in_5 = {"allstring"};
main_ImportSpreadsheet_1_in_6 = NULL;
main_ImportSpreadsheet_1_in_7 = NULL;
main_ImportSpreadsheet_1_in_8 = NULL;
main_ImportSpreadsheet_1_in_9 = NULL;
main_ImportSpreadsheet_1_in_10 = NULL;
main_ImportSpreadsheet_1_out_1 = NULL;
main_Mark_16_in_2 = "salesperson";
main_Mark_16_out_1 = NULL;
main_AutoColor_11_in_2 = NULL;
main_AutoColor_11_in_3 = NULL;
main_AutoColor_11_in_4 = NULL;
main_AutoColor_11_in_5 = NULL;
main_AutoColor_11_in_6 = NULL;
main_AutoColor_11_in_7 = NULL;
main_AutoColor_11_in_8 = NULL;
main_AutoColor_11_in_9 = NULL;
main_AutoColor_11_in_10 = NULL;
main_AutoColor_11_out_1 = NULL;
main_AutoColor_11_out_2 = NULL;
main_Mark_17_in_2 = "sales";
main_Mark_17_out_1 = NULL;
main_Unmark_20_in_2 = NULL;
main_Unmark_20_out_1 = NULL;
main_Mark_18_in_2 = "product";
main_Mark_18_out_1 = NULL;
main_Mark_19_in_2 = "region";
main_Mark_19_out_1 = NULL;
main_Compute_75_in_1 = "float([$0, $1])";
main_Compute_75_out_1 = NULL;
main_Replace_40_in_3 = NULL;
main_Replace_40_in_4 = "positions";
main_Replace_40_out_1 = NULL;
main_AutoGlyph_1_in_2 = "spiffy";
main_AutoGlyph_1_in_3 = NULL;
main_AutoGlyph_1_in_4 = NULL;
main_AutoGlyph_1_in_5 = 0.0;
main_AutoGlyph_1_in_6 = 0.0;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_Transmitter_59_out_1 = NULL;
main_Receiver_109_out_1 = NULL;
main_Extract_8_in_2 = "salesperson lookup";
main_Extract_8_out_1 = NULL;
main_Transmitter_62_out_1 = NULL;
main_Receiver_113_out_1 = NULL;
main_Transmitter_61_out_1 = NULL;
main_Receiver_112_out_1 = NULL;
main_Legend_1_in_3 = NULL;
main_Legend_1_in_4 = NULL;
main_Legend_1_in_5 = NULL;
main_Legend_1_in_6 = NULL;
main_Legend_1_in_7 = NULL;
main_Legend_1_in_8 = NULL;
main_Legend_1_in_9 = NULL;
main_Legend_1_in_10 = NULL;
main_Legend_1_out_1 = NULL;
main_Transmitter_60_out_1 = NULL;
main_Receiver_110_out_1 = NULL;
main_Collect_2_out_1 = NULL;
main_Receiver_111_out_1 = NULL;
main_Extract_9_in_2 = "region lookup";
main_Extract_9_out_1 = NULL;
main_Extract_10_in_2 = "product lookup";
main_Extract_10_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X24,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [2.06826 1.43515 0];
main_Image_2_in_6 = [2.06826 1.43515 13.9335];
main_Image_2_in_7 = 10.1247;
main_Image_2_in_8 = 640;
main_Image_2_in_9 = 0.75;
main_Image_2_in_10 = [0 1 0];
main_Image_2_in_11 = NULL;
main_Image_2_in_12 = 0;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = 1;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "zoom";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

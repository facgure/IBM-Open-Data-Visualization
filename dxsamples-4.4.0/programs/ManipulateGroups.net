//
// time: Wed Apr 23 15:00:53 1997
//
// version: 3.1.1 (format), 3.1.4 (DX)
//
//
// MODULE main
//
// comment: This visual program uses ChangeGroupType and ChangeGroupMember to manipulate groups. These two modules are fairly primitive structural modules which allow you to manipulate groups. 
// comment: 
// comment: The top image shows the use of ChangeGroupMember to insert an image into a series of images for use with the Arrange module. The control panel allows you to interactively decide where in the series the member should be placed.
// comment: 
// comment: The bottom images shows the use of ChangeGroupType to convert a generic group to a series, while setting the series position of each member of the group. This series position is used by Stack to set the location of the slice in the eventual 3D volume.
// comment: 
// comment: These are simply examples of possible applications of these basic modules.
// page assignment: GroupMember	order=3, windowed=0, showing=1
// page assignment: GroupType	order=2, windowed=0, showing=0
// workspace: width = 696, height = 611
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Construct[6]: x = 38, y = 20, inputs = 4, label = Construct
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [3 3 3]
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {1 .. 27}
    // page group: GroupMember
    //
main_Construct_6_out_1 = 
    Construct(
    main_Construct_6_in_1,
    main_Construct_6_in_2,
    main_Construct_6_in_3,
    main_Construct_6_in_4
    ) [instance: 6, cache: 1];
    // 
    // node ShowBoundary[1]: x = 66, y = 105, inputs = 2, label = ShowBoundary
    // page group: GroupMember
    //
main_ShowBoundary_1_out_1 = 
    ShowBoundary(
    main_Construct_6_out_1,
    main_ShowBoundary_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[2]: x = 56, y = 186, inputs = 10, label = AutoColor
    // page group: GroupMember
    //
main_AutoColor_2_out_1,
main_AutoColor_2_out_2 = 
    AutoColor(
    main_ShowBoundary_1_out_1,
    main_AutoColor_2_in_2,
    main_AutoColor_2_in_3,
    main_AutoColor_2_in_4,
    main_AutoColor_2_in_5,
    main_AutoColor_2_in_6,
    main_AutoColor_2_in_7,
    main_AutoColor_2_in_8,
    main_AutoColor_2_in_9,
    main_AutoColor_2_in_10
    ) [instance: 2, cache: 1];
    // 
    // node AutoCamera[1]: x = 0, y = 279, inputs = 9, label = AutoCamera
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "off-diagonal"
    // input[3]: defaulting = 1, visible = 0, type = 5, value = 200.0
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 200
    // page group: GroupMember
    //
main_AutoCamera_1_out_1 = 
    AutoCamera(
    main_AutoColor_2_out_1,
    main_AutoCamera_1_in_2,
    main_AutoCamera_1_in_3,
    main_AutoCamera_1_in_4,
    main_AutoCamera_1_in_5,
    main_AutoCamera_1_in_6,
    main_AutoCamera_1_in_7,
    main_AutoCamera_1_in_8,
    main_AutoCamera_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Render[1]: x = 19, y = 375, inputs = 3, label = Render
    // page group: GroupMember
    //
main_Render_1_out_1 = 
    Render(
    main_AutoColor_2_out_1,
    main_AutoCamera_1_out_1,
    main_Render_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node AutoCamera[2]: x = 144, y = 282, inputs = 9, label = AutoCamera
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "off-front"
    // input[3]: defaulting = 1, visible = 0, type = 5, value = 200.0
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 200
    // page group: GroupMember
    //
main_AutoCamera_2_out_1 = 
    AutoCamera(
    main_AutoColor_2_out_1,
    main_AutoCamera_2_in_2,
    main_AutoCamera_2_in_3,
    main_AutoCamera_2_in_4,
    main_AutoCamera_2_in_5,
    main_AutoCamera_2_in_6,
    main_AutoCamera_2_in_7,
    main_AutoCamera_2_in_8,
    main_AutoCamera_2_in_9
    ) [instance: 2, cache: 1];
    // 
    // node Render[2]: x = 127, y = 378, inputs = 3, label = Render
    // page group: GroupMember
    //
main_Render_2_out_1 = 
    Render(
    main_AutoColor_2_out_1,
    main_AutoCamera_2_out_1,
    main_Render_2_in_3
    ) [instance: 2, cache: 1];
    // 
    // node AutoCamera[3]: x = 272, y = 286, inputs = 9, label = AutoCamera
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "off-right"
    // input[3]: defaulting = 1, visible = 0, type = 5, value = 200.0
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 200
    // page group: GroupMember
    //
main_AutoCamera_3_out_1 = 
    AutoCamera(
    main_AutoColor_2_out_1,
    main_AutoCamera_3_in_2,
    main_AutoCamera_3_in_3,
    main_AutoCamera_3_in_4,
    main_AutoCamera_3_in_5,
    main_AutoCamera_3_in_6,
    main_AutoCamera_3_in_7,
    main_AutoCamera_3_in_8,
    main_AutoCamera_3_in_9
    ) [instance: 3, cache: 1];
    // 
    // node Render[3]: x = 240, y = 379, inputs = 3, label = Render
    // page group: GroupMember
    //
main_Render_3_out_1 = 
    Render(
    main_AutoColor_2_out_1,
    main_AutoCamera_3_out_1,
    main_Render_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node CollectSeries[1]: x = 133, y = 472, inputs = 6, label = CollectSeries
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 0.0
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // input[6]: defaulting = 0, visible = 1, type = 5, value = 2.0
    // page group: GroupMember
    //
main_CollectSeries_1_out_1 = 
    CollectSeries(
    main_Render_1_out_1,
    main_CollectSeries_1_in_2,
    main_Render_2_out_1,
    main_CollectSeries_1_in_4,
    main_Render_3_out_1,
    main_CollectSeries_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[1]: x = 162, y = 549, inputs = 1, label = imagegroup
    // page group: GroupMember
    //
imagegroup = main_CollectSeries_1_out_1;
    // 
    // node Receiver[1]: x = 433, y = 16, inputs = 1, label = imagegroup
    // page group: GroupMember
    //
main_Receiver_1_out_1[cache: 0] = imagegroup;
    // 
    // node Selector[1]: x = 551, y = 82, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "insert after" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 0 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "insert before" "insert after" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 0 }
    // output[1]: visible = 1, type = 29, value = 0 
    // output[2]: visible = 1, type = 32, value = "insert after" 
    // page group: GroupMember
    //
    // 
    // node Integer[1]: x = 635, y = 89, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 0 
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 2
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 0 
    // page group: GroupMember
    //
    // 
    // node ShowConnections[2]: x = 374, y = 293, inputs = 1, label = ShowConnections
    // page group: GroupMember
    //
main_ShowConnections_2_out_1 = 
    ShowConnections(
    main_AutoColor_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node AutoCamera[4]: x = 522, y = 290, inputs = 9, label = AutoCamera
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "off-top"
    // input[3]: defaulting = 1, visible = 0, type = 5, value = 200.0
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 200
    // page group: GroupMember
    //
main_AutoCamera_4_out_1 = 
    AutoCamera(
    main_AutoColor_2_out_1,
    main_AutoCamera_4_in_2,
    main_AutoCamera_4_in_3,
    main_AutoCamera_4_in_4,
    main_AutoCamera_4_in_5,
    main_AutoCamera_4_in_6,
    main_AutoCamera_4_in_7,
    main_AutoCamera_4_in_8,
    main_AutoCamera_4_in_9
    ) [instance: 4, cache: 1];
    // 
    // node Render[4]: x = 417, y = 388, inputs = 3, label = Render
    // page group: GroupMember
    //
main_Render_4_out_1 = 
    Render(
    main_ShowConnections_2_out_1,
    main_AutoCamera_4_out_1,
    main_Render_4_in_3
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[6]: x = 420, y = 490, inputs = 1, label = image_to_insert
    // page group: GroupMember
    //
image_to_insert = main_Render_4_out_1;
    // 
    // node Receiver[11]: x = 553, y = 9, inputs = 1, label = image_to_insert
    // page group: GroupMember
    //
main_Receiver_11_out_1[cache: 0] = image_to_insert;
    // 
    // node ChangeGroupMember[1]: x = 503, y = 191, inputs = 5, label = ChangeGroupMember
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 0.0
    // page group: GroupMember
    //
main_ChangeGroupMember_1_out_1 = 
    ChangeGroupMember(
    main_Receiver_1_out_1,
    main_Selector_1_out_2,
    main_Integer_1_out_1,
    main_Receiver_11_out_1,
    main_ChangeGroupMember_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Arrange[1]: x = 634, y = 283, inputs = 5, label = Arrange
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 2
    // page group: GroupMember
    //
main_Arrange_1_out_1 = 
    Arrange(
    main_ChangeGroupMember_1_out_1,
    main_Arrange_1_in_2,
    main_Arrange_1_in_3,
    main_Arrange_1_in_4,
    main_Arrange_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Construct[2]: x = 45, y = 21, inputs = 4, label = Construct
    // input[1]: defaulting = 0, visible = 1, type = 16777224, value = {[0 0]}
    // input[2]: defaulting = 0, visible = 1, type = 16777224, value = {[1 1]}
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [3 3]
    // page group: GroupType
    //
main_Construct_2_out_1 = 
    Construct(
    main_Construct_2_in_1,
    main_Construct_2_in_2,
    main_Construct_2_in_3,
    main_Construct_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Collect[1]: x = 62, y = 120, inputs = 4, label = Collect
    // page group: GroupType
    //
main_Collect_1_out_1 = 
    Collect(
    main_Construct_2_out_1,
    main_Construct_2_out_1,
    main_Construct_2_out_1,
    main_Construct_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node ScalarList[1]: x = 217, y = 145, inputs = 11, label = ScalarList
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "ScalarList_1"
    // input[3]: defaulting = 0, visible = 0, type = 16777221, value = { 0.0 1.0 4.0 8.0 }
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 16777221, value = { 0.0 1.0 4.0 8.0 }
    // page group: GroupType
    //
    // 
    // node ChangeGroupType[1]: x = 95, y = 241, inputs = 3, label = ChangeGroupType
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "series"
    // page group: GroupType
    //
main_ChangeGroupType_1_out_1 = 
    ChangeGroupType(
    main_Collect_1_out_1,
    main_ChangeGroupType_1_in_2,
    main_ScalarList_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Display[1]: x = 605, y = 397, inputs = 8, label = Display
    // page group: GroupMember
    // depth: value = 24
    // window: position = (0.2750,0.0752), size = 0.6359x0.1895
    //
main_Display_1_out_1[cache: 2] = 
    Display(
    main_Arrange_1_out_1,
    main_Display_1_in_2,
    main_Display_1_in_3,
    main_Display_1_in_4,
    main_Display_1_in_5,
    main_Display_1_in_6,
    main_Display_1_in_7,
    main_Display_1_in_8
    ) [instance: 1, cache: 1];
    // 
    // node Stack[1]: x = 139, y = 351, inputs = 2, label = Stack
    // page group: GroupType
    //
main_Stack_1_out_1 = 
    Stack(
    main_ChangeGroupType_1_out_1,
    main_Stack_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node ShowConnections[1]: x = 170, y = 435, inputs = 1, label = ShowConnections
    // page group: GroupType
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Stack_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[2]: x = 211, y = 518, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_2"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [4 1 1]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [9.1157 5.31571 21.245]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 11.4268
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.0220954 0.97891 -0.203094]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // page group: GroupType
    // depth: value = 24
    // window: position = (0.3570,0.4551), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_2_out_1,
main_Image_2_out_2,
main_Image_2_out_3 = 
    Image(
    main_Image_2_in_1,
    main_ShowConnections_1_out_1,
    main_Image_2_in_3,
    main_Image_2_in_4,
    main_Image_2_in_5,
    main_Image_2_in_6,
    main_Image_2_in_7,
    main_Image_2_in_8,
    main_Image_2_in_9,
    main_Image_2_in_10,
    main_Image_2_in_11,
    main_Image_2_in_12,
    main_Image_2_in_13,
    main_Image_2_in_14,
    main_Image_2_in_15,
    main_Image_2_in_16,
    main_Image_2_in_17,
    main_Image_2_in_18,
    main_Image_2_in_19,
    main_Image_2_in_20,
    main_Image_2_in_21,
    main_Image_2_in_22,
    main_Image_2_in_23,
    main_Image_2_in_24,
    main_Image_2_in_25,
    main_Image_2_in_26,
    main_Image_2_in_27,
    main_Image_2_in_28,
    main_Image_2_in_29,
    main_Image_2_in_30,
    main_Image_2_in_31,
    main_Image_2_in_32,
    main_Image_2_in_33,
    main_Image_2_in_34,
    main_Image_2_in_35,
    main_Image_2_in_36,
    main_Image_2_in_37,
    main_Image_2_in_38,
    main_Image_2_in_39,
    main_Image_2_in_40,
    main_Image_2_in_41,
    main_Image_2_in_42,
    main_Image_2_in_43,
    main_Image_2_in_44,
    main_Image_2_in_45,
    main_Image_2_in_46,
    main_Image_2_in_47,
    main_Image_2_in_48
    ) [instance: 2, cache: 1];
    //
    // decorator Annotate	pos=(152,18) size=491x92 style(Label), value = <NULL>
    // annotation user_begin: 314
    // annotation user: ChangeGroupType is a fairly primitive, structural module. Here's just
    // annotation user: one example of what you might do with it. We are changing a generic
    // annotation user: group to a series, and interactively setting the series position using
    // annotation user: the scalar interactor. The series position controls the locations of the
    // annotation user: slices in the stacked dimension.
    // annotation user_end: <NULL>
    // page group: GroupType
    //
    // decorator Annotate	pos=(202,100) size=290x108 style(Label), value = <NULL>
    // annotation user_begin: 218
    // annotation user: Again, ChangeGroupMember provides
    // annotation user: a fairly primitive, structural function.
    // annotation user: Here we are interactively inserting an
    // annotation user: image in a series which is then
    // annotation user: passed to Arrange. Choose Open All
    // annotation user: Control Panels from the Windows menu.
    // annotation user_end: <NULL>
    // page group: GroupMember
// network: end of macro body
CacheScene("Image_2", main_Image_2_out_1, main_Image_2_out_2);
}
main_Construct_6_in_1 = NULL;
main_Construct_6_in_2 = NULL;
main_Construct_6_in_3 = [3 3 3];
main_Construct_6_in_4 = {1 .. 27};
main_Construct_6_out_1 = NULL;
main_ShowBoundary_1_in_2 = NULL;
main_ShowBoundary_1_out_1 = NULL;
main_AutoColor_2_in_2 = NULL;
main_AutoColor_2_in_3 = NULL;
main_AutoColor_2_in_4 = NULL;
main_AutoColor_2_in_5 = NULL;
main_AutoColor_2_in_6 = NULL;
main_AutoColor_2_in_7 = NULL;
main_AutoColor_2_in_8 = NULL;
main_AutoColor_2_in_9 = NULL;
main_AutoColor_2_in_10 = NULL;
main_AutoColor_2_out_1 = NULL;
main_AutoCamera_1_in_2 = "off-diagonal";
main_AutoCamera_1_in_3 = NULL;
main_AutoCamera_1_in_4 = 200;
main_AutoCamera_1_in_5 = NULL;
main_AutoCamera_1_in_6 = NULL;
main_AutoCamera_1_in_7 = NULL;
main_AutoCamera_1_in_8 = NULL;
main_AutoCamera_1_in_9 = NULL;
main_AutoCamera_1_out_1 = NULL;
main_Render_1_in_3 = NULL;
main_Render_1_out_1 = NULL;
main_AutoCamera_2_in_2 = "off-front";
main_AutoCamera_2_in_3 = NULL;
main_AutoCamera_2_in_4 = 200;
main_AutoCamera_2_in_5 = NULL;
main_AutoCamera_2_in_6 = NULL;
main_AutoCamera_2_in_7 = NULL;
main_AutoCamera_2_in_8 = NULL;
main_AutoCamera_2_in_9 = NULL;
main_AutoCamera_2_out_1 = NULL;
main_Render_2_in_3 = NULL;
main_Render_2_out_1 = NULL;
main_AutoCamera_3_in_2 = "off-right";
main_AutoCamera_3_in_3 = NULL;
main_AutoCamera_3_in_4 = 200;
main_AutoCamera_3_in_5 = NULL;
main_AutoCamera_3_in_6 = NULL;
main_AutoCamera_3_in_7 = NULL;
main_AutoCamera_3_in_8 = NULL;
main_AutoCamera_3_in_9 = NULL;
main_AutoCamera_3_out_1 = NULL;
main_Render_3_in_3 = NULL;
main_Render_3_out_1 = NULL;
main_CollectSeries_1_in_2 = 0.0;
main_CollectSeries_1_in_4 = 1.0;
main_CollectSeries_1_in_6 = 2.0;
main_CollectSeries_1_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "insert after" ;
main_Selector_1_in_3 = 0 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_2 = "insert after" ;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 0 ;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 0 ;
main_ShowConnections_2_out_1 = NULL;
main_AutoCamera_4_in_2 = "off-top";
main_AutoCamera_4_in_3 = NULL;
main_AutoCamera_4_in_4 = 200;
main_AutoCamera_4_in_5 = NULL;
main_AutoCamera_4_in_6 = NULL;
main_AutoCamera_4_in_7 = NULL;
main_AutoCamera_4_in_8 = NULL;
main_AutoCamera_4_in_9 = NULL;
main_AutoCamera_4_out_1 = NULL;
main_Render_4_in_3 = NULL;
main_Render_4_out_1 = NULL;
main_Transmitter_6_out_1 = NULL;
main_Receiver_11_out_1 = NULL;
main_ChangeGroupMember_1_in_5 = 0.0;
main_ChangeGroupMember_1_out_1 = NULL;
main_Arrange_1_in_2 = NULL;
main_Arrange_1_in_3 = NULL;
main_Arrange_1_in_4 = NULL;
main_Arrange_1_in_5 = NULL;
main_Arrange_1_out_1 = NULL;
main_Construct_2_in_1 = {[0 0]};
main_Construct_2_in_2 = {[1 1]};
main_Construct_2_in_3 = [3 3];
main_Construct_2_in_4 = NULL;
main_Construct_2_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_ScalarList_1_in_1 = "ScalarList_1";
main_ScalarList_1_in_2 = NULL;
main_ScalarList_1_in_3 = { 0.0 1.0 4.0 8.0 };
main_ScalarList_1_in_4 = NULL;
main_ScalarList_1_in_5 = NULL;
main_ScalarList_1_in_6 = NULL;
main_ScalarList_1_in_7 = NULL;
main_ScalarList_1_in_8 = NULL;
main_ScalarList_1_in_9 = NULL;
main_ScalarList_1_in_10 = NULL;
main_ScalarList_1_in_11 = NULL;
main_ScalarList_1_out_1 = { 0.0 1.0 4.0 8.0 };
main_ChangeGroupType_1_in_2 = "series";
main_ChangeGroupType_1_out_1 = NULL;
main_Display_1_in_2 = NULL;
main_Display_1_in_3 = "X24,,";
main_Display_1_in_4 = NULL;
main_Display_1_in_5 = NULL;
main_Display_1_in_6 = NULL;
main_Display_1_in_7 = NULL;
main_Display_1_in_8 = NULL;
main_Stack_1_in_2 = NULL;
main_Stack_1_out_1 = NULL;
main_ShowConnections_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_2_in_1 = "Image_2";
main_Image_2_in_3 = "X24,,";
main_Image_2_in_4 = 1;
main_Image_2_in_5 = [4 1 1];
main_Image_2_in_6 = [9.1157 5.31571 21.245];
main_Image_2_in_7 = 11.4268;
main_Image_2_in_8 = 640;
main_Image_2_in_9 = 0.75;
main_Image_2_in_10 = [-0.0220954 0.97891 -0.203094];
main_Image_2_in_11 = NULL;
main_Image_2_in_12 = 0;
main_Image_2_in_13 = NULL;
main_Image_2_in_14 = 1;
main_Image_2_in_15 = NULL;
main_Image_2_in_16 = NULL;
main_Image_2_in_17 = NULL;
main_Image_2_in_18 = NULL;
main_Image_2_in_19 = 0;
main_Image_2_in_20 = NULL;
main_Image_2_in_21 = NULL;
main_Image_2_in_22 = NULL;
main_Image_2_in_23 = NULL;
main_Image_2_in_25 = NULL;
main_Image_2_in_26 = NULL;
main_Image_2_in_27 = NULL;
main_Image_2_in_28 = NULL;
main_Image_2_in_29 = NULL;
main_Image_2_in_30 = NULL;
main_Image_2_in_31 = NULL;
main_Image_2_in_32 = NULL;
main_Image_2_in_33 = NULL;
main_Image_2_in_34 = NULL;
main_Image_2_in_35 = NULL;
main_Image_2_in_36 = NULL;
main_Image_2_in_37 = NULL;
main_Image_2_in_38 = NULL;
main_Image_2_in_39 = NULL;
main_Image_2_in_40 = NULL;
main_Image_2_in_41 = "rotate";
main_Image_2_in_42 = NULL;
main_Image_2_in_43 = NULL;
main_Image_2_in_44 = NULL;
main_Image_2_in_45 = NULL;
main_Image_2_in_46 = NULL;
main_Image_2_in_47 = NULL;
main_Image_2_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

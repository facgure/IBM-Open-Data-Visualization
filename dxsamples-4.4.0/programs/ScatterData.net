//
// time: Wed Apr  9 15:43:30 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
//
// macro reference (direct): Make3DField Make3DFieldMacro.net
include "Make3DFieldMacro.net"
//
// macro reference (direct): AutoScale AutoScaleMacro.net
include "AutoScaleMacro.net"
//
// macro reference (direct): UnsquishGlyph UnsquishGlyphMacro.net
include "UnsquishGlyphMacro.net"
//
// MODULE main
//
// comment: This visual program visualizes data from the United States Census of 1990 (the data is for 1989). 
// comment: 
// comment: The user chooses three variables to be mapped to the x, y, and z positions, and another variable to be visualized as colored glyphs. The creation of the new field to be visualized is accomplished using the macro Make3DField. The axes are automatically scaled to a 1:1:1 aspect ratio using the AutoScaleMacro found in samples/macros. The glyphs are made to be of uniform aspect ratio by using the UnsquishGlyphsMacro found in samples/macros.  All of these macros will be automatically loaded for you if you do not explicitly load them.
// page assignment: caption	order=3, windowed=0, showing=0
// page assignment: check	order=6, windowed=0, showing=0
// page assignment: field_names	order=4, windowed=0, showing=0
// page assignment: image	order=10, windowed=0, showing=0
// page assignment: import	order=2, windowed=0, showing=1
// page assignment: make3d	order=8, windowed=0, showing=0
// page assignment: make_glyphs	order=9, windowed=0, showing=0
// page assignment: select_glyph	order=7, windowed=0, showing=0
// page assignment: user_choice	order=5, windowed=0, showing=0
// workspace: width = 485, height = 311
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Import[1]: x = 108, y = 163, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "census_normalized.dx"
    // page group: import
    //
main_Import_1_out_1 = 
    Import(
    main_Import_1_in_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[31]: x = 97, y = 249, inputs = 1, label = imported_data
    // page group: import
    //
imported_data = main_Import_1_out_1;
    // 
    // node Receiver[35]: x = 20, y = 20, inputs = 1, label = imported_data
    // page group: make3d
    //
main_Receiver_35_out_1[cache: 0] = imported_data;
    // 
    // node StringList[2]: x = 88, y = 101, inputs = 0, label = StringList
    // output[1]: visible = 1, type = 16777248, value = { "inside_urban_area", "outside_urban_area", "rural_farm", "rural_nonfarm", "males", "females", "age_under_1", "age_21", "age_65_to_69", "in_household_1", "in_household_2", "in_household_3", "in_household_4", "in_household_5", "water_company", "water_drilled_well", "water_dug_well", "heat_utility_gas", "heat_bottled_gas", "heat_oil", "heat_coal", "heat_solar" }
    // page group: field_names
    //
    // 
    // node Transmitter[22]: x = 40, y = 215, inputs = 1, label = list_of_field_names
    // page group: field_names
    //
list_of_field_names = main_StringList_2_out_1;
    // 
    // node Receiver[22]: x = 150, y = 94, inputs = 1, label = list_of_field_names
    // page group: user_choice
    //
main_Receiver_22_out_1[cache: 0] = list_of_field_names;
    // 
    // node SelectorList[1]: x = 44, y = 158, inputs = 7, label = SelectorList
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "SelectorList_1"
    // input[2]: defaulting = 0, visible = 0, type = 16777248, value = { "inside_urban_area" "rural_farm" "in_household_5" }
    // input[3]: defaulting = 0, visible = 0, type = 16777245, value = { 0 2 13 }
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "inside_urban_area" "outside_urban_area" "rural_farm" "rural_nonfarm" "males" "females" "age_under_1" "age_21" "age_65_to_69" "in_household_1" "in_household_2" "in_household_3" "in_household_4" "in_household_5" "water_company" "water_drilled_well" "water_dug_well" "heat_utility_gas" "heat_bottled_gas" "heat_oil" "heat_coal" "heat_solar" }
    // input[5]: defaulting = 1, visible = 1, type = 16777245, value = { 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 }
    // output[1]: visible = 1, type = 16777245, value = { 0 2 13 }
    // output[2]: visible = 1, type = 16777248, value = { "inside_urban_area" "rural_farm" "in_household_5" }
    // page group: user_choice
    //
main_SelectorList_1_out_1[cache: 2],
main_SelectorList_1_out_2[cache: 2] = 
    SelectorList(
    main_SelectorList_1_in_1,
    main_SelectorList_1_in_2,
    main_SelectorList_1_in_3,
    main_Receiver_22_out_1,
    main_SelectorList_1_in_5,
    main_SelectorList_1_in_6,
    main_SelectorList_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node Inquire[6]: x = 13, y = 257, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "is null +1"
    // page group: user_choice
    //
main_Inquire_6_out_1 = 
    Inquire(
    main_SelectorList_1_out_1,
    main_Inquire_6_in_2,
    main_Inquire_6_in_3
    ) [instance: 6, cache: 1];
    // 
    // node Inquire[3]: x = 91, y = 255, inputs = 3, label = Inquire
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "count"
    // page group: user_choice
    //
main_Inquire_3_out_1 = 
    Inquire(
    main_SelectorList_1_out_1,
    main_Inquire_3_in_2,
    main_Inquire_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Switch[9]: x = 40, y = 347, inputs = 3, label = Switch
    // input[3]: defaulting = 0, visible = 1, type = 67108863, value = 0
    // page group: user_choice
    //
main_Switch_9_out_1 = 
    Switch(
    main_Inquire_6_out_1,
    main_Inquire_3_out_1,
    main_Switch_9_in_3
    ) [instance: 9, cache: 1];
    // 
    // node Compute[3]: x = 47, y = 443, inputs = 2, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0 == 3 ? 2 : 1"
    // page group: user_choice
    // expression: value = num_items == 3 ? 2 : 1
    // name[2]: value = num_items
    //
main_Compute_3_out_1 = 
    Compute(
    main_Compute_3_in_1,
    main_Switch_9_out_1
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[28]: x = 31, y = 548, inputs = 1, label = list_has_three_items
    // page group: user_choice
    //
list_has_three_items = main_Compute_3_out_1;
    // 
    // node Receiver[31]: x = 144, y = 20, inputs = 1, label = list_has_three_items
    // page group: make3d
    //
main_Receiver_31_out_1[cache: 0] = list_has_three_items;
    // 
    // node Transmitter[29]: x = 218, y = 545, inputs = 1, label = the_three_dimensions
    // page group: user_choice
    //
the_three_dimensions = main_SelectorList_1_out_2;
    // 
    // node Receiver[33]: x = 299, y = 22, inputs = 1, label = the_three_dimensions
    // page group: make3d
    //
main_Receiver_33_out_1[cache: 0] = the_three_dimensions;
    // 
    // node Route[6]: x = 249, y = 111, inputs = 2, outputs = 2, label = Route
    // page group: make3d
    //
main_Route_6_out_1,
main_Route_6_out_2 = 
    Route(
    main_Receiver_31_out_1,
    main_Receiver_33_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Select[5]: x = 266, y = 202, inputs = 3, label = Select
    // input[2]: defaulting = 1, visible = 1, type = 1, value = 0
    // page group: make3d
    //
main_Select_5_out_1 = 
    Select(
    main_Receiver_35_out_1,
    main_Route_6_out_2,
    main_Select_5_in_3
    ) [instance: 5, cache: 1];
    // 
    // node Select[21]: x = 85, y = 287, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 0
    // page group: make3d
    //
main_Select_21_out_1 = 
    Select(
    main_Select_5_out_1,
    main_Select_21_in_2,
    main_Select_21_in_3
    ) [instance: 21, cache: 1];
    // 
    // node Select[47]: x = 158, y = 287, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 1
    // page group: make3d
    //
main_Select_47_out_1 = 
    Select(
    main_Select_5_out_1,
    main_Select_47_in_2,
    main_Select_47_in_3
    ) [instance: 47, cache: 1];
    // 
    // node Select[48]: x = 246, y = 287, inputs = 3, label = Select
    // input[2]: defaulting = 0, visible = 1, type = 1, value = 2
    // page group: make3d
    //
main_Select_48_out_1 = 
    Select(
    main_Select_5_out_1,
    main_Select_48_in_2,
    main_Select_48_in_3
    ) [instance: 48, cache: 1];
    // 
    // node Receiver[36]: x = 39, y = 147, inputs = 1, label = imported_data
    // page group: select_glyph
    //
main_Receiver_36_out_1[cache: 0] = imported_data;
    // 
    // node Selector[4]: x = 362, y = 203, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_4"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "heat_solar" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 21 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "inside_urban_area" "outside_urban_area" "rural_farm" "rural_nonfarm" "males" "females" "age_under_1" "age_21" "age_65_to_69" "in_household_1" "in_household_2" "in_household_3" "in_household_4" "in_household_5" "water_company" "water_drilled_well" "water_dug_well" "heat_utility_gas" "heat_bottled_gas" "heat_oil" "heat_coal" "heat_solar" }
    // input[5]: defaulting = 1, visible = 1, type = 16777245, value = { 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 }
    // output[1]: visible = 1, type = 29, value = 21 
    // output[2]: visible = 1, type = 32, value = "heat_solar" 
    // page group: user_choice
    //
main_Selector_4_out_1[cache: 2],
main_Selector_4_out_2[cache: 2] = 
    Selector(
    main_Selector_4_in_1,
    main_Selector_4_in_2,
    main_Selector_4_in_3,
    main_Receiver_22_out_1,
    main_Selector_4_in_5,
    main_Selector_4_in_6,
    main_Selector_4_in_7
    ) [instance: 4, cache: 1];
    // 
    // node Transmitter[30]: x = 406, y = 540, inputs = 1, label = name_of_glyph_data
    // page group: user_choice
    //
name_of_glyph_data = main_Selector_4_out_2;
    // 
    // node Receiver[34]: x = 157, y = 147, inputs = 1, label = name_of_glyph_data
    // page group: select_glyph
    //
main_Receiver_34_out_1[cache: 0] = name_of_glyph_data;
    // 
    // node Select[49]: x = 136, y = 244, inputs = 3, label = Select
    // page group: select_glyph
    //
main_Select_49_out_1 = 
    Select(
    main_Receiver_36_out_1,
    main_Receiver_34_out_1,
    main_Select_49_in_3
    ) [instance: 49, cache: 1];
    // 
    // node Extract[18]: x = 170, y = 322, inputs = 2, label = Extract
    // page group: select_glyph
    //
main_Extract_18_out_1 = 
    Extract(
    main_Select_49_out_1,
    main_Extract_18_in_2
    ) [instance: 18, cache: 1];
    // 
    // node Transmitter[33]: x = 161, y = 402, inputs = 1, label = glyph_data
    // page group: select_glyph
    //
glyph_data = main_Extract_18_out_1;
    // 
    // node Receiver[38]: x = 473, y = 23, inputs = 1, label = glyph_data
    // page group: make3d
    //
main_Receiver_38_out_1[cache: 0] = glyph_data;
    // 
    // node Make3DField[1]: x = 108, y = 429, inputs = 4, label = Make3DField
    // page group: make3d
    //
main_Make3DField_1_out_1 = 
    Make3DField(
    main_Select_21_out_1,
    main_Select_47_out_1,
    main_Select_48_out_1,
    main_Receiver_38_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[34]: x = 106, y = 543, inputs = 1, label = three_d_field
    // page group: make3d
    //
three_d_field = main_Make3DField_1_out_1;
    // 
    // node Receiver[39]: x = 42, y = 20, inputs = 1, label = three_d_field
    // page group: make_glyphs
    //
main_Receiver_39_out_1[cache: 0] = three_d_field;
    // 
    // node AutoScale[2]: x = 124, y = 99, inputs = 2, label = AutoScale
    // input[2]: defaulting = 0, visible = 1, type = 67108863, value = [1 1 1]
    // page group: make_glyphs
    //
main_AutoScale_2_out_1,
main_AutoScale_2_out_2 = 
    AutoScale(
    main_Receiver_39_out_1,
    main_AutoScale_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node UnsquishGlyph[1]: x = 109, y = 285, inputs = 2, label = UnsquishGlyph
    // page group: make_glyphs
    //
main_UnsquishGlyph_1_out_1 = 
    UnsquishGlyph(
    main_AutoScale_2_out_2,
    main_UnsquishGlyph_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[2]: x = 257, y = 262, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 2.6 
    // input[4]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.1
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 20.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 2.6 
    // page group: make_glyphs
    //
    // 
    // node AutoGlyph[1]: x = 89, y = 394, inputs = 7, label = AutoGlyph
    // input[5]: defaulting = 0, visible = 1, type = 5, value = 1.0
    // page group: make_glyphs
    //
main_AutoGlyph_1_out_1 = 
    AutoGlyph(
    main_Receiver_39_out_1,
    main_UnsquishGlyph_1_out_1,
    main_AutoGlyph_1_in_3,
    main_Scalar_2_out_1,
    main_AutoGlyph_1_in_5,
    main_AutoGlyph_1_in_6,
    main_AutoGlyph_1_in_7
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[3]: x = 61, y = 471, inputs = 10, label = AutoColor
    // page group: make_glyphs
    //
main_AutoColor_3_out_1,
main_AutoColor_3_out_2 = 
    AutoColor(
    main_AutoGlyph_1_out_1,
    main_AutoColor_3_in_2,
    main_AutoColor_3_in_3,
    main_AutoColor_3_in_4,
    main_AutoColor_3_in_5,
    main_AutoColor_3_in_6,
    main_AutoColor_3_in_7,
    main_AutoColor_3_in_8,
    main_AutoColor_3_in_9,
    main_AutoColor_3_in_10
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[35]: x = 59, y = 553, inputs = 1, label = glyphs
    // page group: make_glyphs
    //
glyphs = main_AutoColor_3_out_1;
    // 
    // node Receiver[40]: x = 57, y = 15, inputs = 1, label = glyphs
    // page group: image
    //
main_Receiver_40_out_1[cache: 0] = glyphs;
    // 
    // node Receiver[21]: x = 20, y = 20, inputs = 1, label = name_of_glyph_data
    // page group: caption
    //
main_Receiver_21_out_1[cache: 0] = name_of_glyph_data;
    // 
    // node Format[2]: x = 64, y = 127, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "Glyphs Represent %s"
    // page group: caption
    //
main_Format_2_out_1 = 
    Format(
    main_Format_2_in_1,
    main_Receiver_21_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Caption[6]: x = 80, y = 208, inputs = 9, label = Caption
    // input[2]: defaulting = 0, visible = 1, type = 8, value = [.5 .02]
    // page group: caption
    //
main_Caption_6_out_1 = 
    Caption(
    main_Format_2_out_1,
    main_Caption_6_in_2,
    main_Caption_6_in_3,
    main_Caption_6_in_4,
    main_Caption_6_in_5,
    main_Caption_6_in_6,
    main_Caption_6_in_7,
    main_Caption_6_in_8,
    main_Caption_6_in_9
    ) [instance: 6, cache: 1];
    // 
    // node Transmitter[27]: x = 121, y = 287, inputs = 1, label = cap
    // page group: caption
    //
cap = main_Caption_6_out_1;
    // 
    // node Receiver[30]: x = 158, y = 7, inputs = 1, label = cap
    // page group: image
    //
main_Receiver_30_out_1[cache: 0] = cap;
    // 
    // node Collect[5]: x = 49, y = 143, inputs = 2, label = Collect
    // page group: image
    //
main_Collect_5_out_1 = 
    Collect(
    main_Receiver_40_out_1,
    main_Receiver_30_out_1
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[23]: x = 341, y = 536, inputs = 1, label = scale_factor
    // page group: make_glyphs
    //
scale_factor = main_AutoScale_2_out_2;
    // 
    // node Receiver[29]: x = 224, y = 16, inputs = 1, label = scale_factor
    // page group: image
    //
main_Receiver_29_out_1[cache: 0] = scale_factor;
    // 
    // node Scale[1]: x = 57, y = 269, inputs = 2, label = Scale
    // page group: image
    //
main_Scale_1_out_1 = 
    Scale(
    main_Collect_5_out_1,
    main_Receiver_29_out_1
    ) [instance: 1, cache: 1];
    // 
    // node AutoCamera[1]: x = 124, y = 294, inputs = 9, label = AutoCamera
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "off-diagonal"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 4.0
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 600
    // input[5]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // page group: image
    //
main_AutoCamera_1_out_1 = 
    AutoCamera(
    main_Scale_1_out_1,
    main_AutoCamera_1_in_2,
    main_AutoCamera_1_in_3,
    main_AutoCamera_1_in_4,
    main_AutoCamera_1_in_5,
    main_AutoCamera_1_in_6,
    main_AutoCamera_1_in_7,
    main_AutoCamera_1_in_8,
    main_AutoCamera_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Reset[1]: x = 168, y = 378, inputs = 6, label = Reset
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "main_Reset_1_out_1"
    // input[2]: defaulting = 0, visible = 0, type = 29, value = 1
    // input[3]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[4]: defaulting = 1, visible = 0, type = 29, value = 1
    // input[5]: defaulting = 1, visible = 0, type = 29, value = 0
    // output[1]: visible = 1, type = 29, value = 1
    // page group: image
    // toggle : 1
    //
    // 
    // node Receiver[20]: x = 321, y = 16, inputs = 1, label = the_three_dimensions
    // page group: image
    //
main_Receiver_20_out_1[cache: 0] = the_three_dimensions;
    // 
    // node Image[3]: x = 108, y = 477, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_3"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [0.719483 0.510341 1.71633]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [4.69949 4.49035 6.61853]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 4.0
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 600
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 1.0
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[20]: visible = 1
    // input[21]: visible = 1
    // input[29]: defaulting = 0, visible = 1, type = 3, value = 1
    // input[30]: defaulting = 1, visible = 1, type = 16777248, value = {"inside_urban_area", "rural_farm", "in_household_5"}
    // input[31]: defaulting = 0, visible = 1, type = 16777217, value = { 8 8 8 }
    // input[32]: defaulting = 1, visible = 0, type = 16777224, value = {[0.000000 0.000000 0.000000] [1.000000 1.000000 1.000000]}
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "rotate"
    // page group: image
    // depth: value = 24
    // window: position = (0.5008,0.2930), size = 0.4797x0.6289
    // internal caching: 1
    //
main_Image_3_out_1,
main_Image_3_out_2,
main_Image_3_out_3 = 
    Image(
    main_Image_3_in_1,
    main_Scale_1_out_1,
    main_Image_3_in_3,
    main_Image_3_in_4,
    main_Image_3_in_5,
    main_Image_3_in_6,
    main_Image_3_in_7,
    main_Image_3_in_8,
    main_Image_3_in_9,
    main_Image_3_in_10,
    main_Image_3_in_11,
    main_Image_3_in_12,
    main_Image_3_in_13,
    main_Image_3_in_14,
    main_Image_3_in_15,
    main_Image_3_in_16,
    main_Image_3_in_17,
    main_Image_3_in_18,
    main_Image_3_in_19,
    main_AutoCamera_1_out_1,
    main_Reset_1_out_1,
    main_Image_3_in_22,
    main_Image_3_in_23,
    main_Image_3_in_24,
    main_Image_3_in_25,
    main_Image_3_in_26,
    main_Image_3_in_27,
    main_Image_3_in_28,
    main_Image_3_in_29,
    main_Receiver_20_out_1,
    main_Image_3_in_31,
    main_Image_3_in_32,
    main_Image_3_in_33,
    main_Image_3_in_34,
    main_Image_3_in_35,
    main_Image_3_in_36,
    main_Image_3_in_37,
    main_Image_3_in_38,
    main_Image_3_in_39,
    main_Image_3_in_40,
    main_Image_3_in_41,
    main_Image_3_in_42,
    main_Image_3_in_43,
    main_Image_3_in_44,
    main_Image_3_in_45,
    main_Image_3_in_46,
    main_Image_3_in_47,
    main_Image_3_in_48
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[32]: x = 73, y = 168, inputs = 1, label = list_has_three_items
    // page group: check
    //
main_Receiver_32_out_1[cache: 0] = list_has_three_items;
    // 
    // node Route[5]: x = 112, y = 270, inputs = 2, outputs = 2, label = Route
    // input[2]: defaulting = 0, visible = 1, type = 16777248, value = {"You must select 3 items from Data List"}
    // page group: check
    //
main_Route_5_out_1,
main_Route_5_out_2 = 
    Route(
    main_Receiver_32_out_1,
    main_Route_5_in_2
    ) [instance: 5, cache: 1];
    // 
    // node Message[1]: x = 104, y = 353, inputs = 3, label = Message
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "error"
    // page group: check
    //
    Message(
    main_Route_5_out_1,
    main_Message_1_in_2,
    main_Message_1_in_3
    ) [instance: 1, cache: 1];
    //
    // decorator Annotate	pos=(41,52) size=444x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 123
    // annotation user: import the data (demographic data from the 1990 census).
    // annotation user: This visualization will create a scatter plot in three dimensions.
    // annotation user_end: <NULL>
    // page group: import
    //
    // decorator Annotate	pos=(46,14) size=358x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 107
    // annotation user: This page creates the list of field names, which will
    // annotation user: data drive a selector and a selector list interactor.
    // annotation user_end: <NULL>
    // page group: field_names
    //
    // decorator Annotate	pos=(84,23) size=446x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 126
    // annotation user: This page allows the user to choose which variables to use for
    // annotation user: the three dimensions, and which variable to use for the glyphs.
    // annotation user_end: <NULL>
    // page group: user_choice
    //
    // decorator Annotate	pos=(68,54) size=446x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 98
    // annotation user: This page puts up a message if the user did not choose exactly
    // annotation user: three variables for the three axes.
    // annotation user_end: <NULL>
    // page group: check
    //
    // decorator Annotate	pos=(56,76) size=423x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 59
    // annotation user: This page extracts the data which the user chose for glyphs
    // annotation user_end: <NULL>
    // page group: select_glyph
    //
    // decorator Annotate	pos=(211,484) size=432x60 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 146
    // annotation user: This page creates three dimensional positions from the three
    // annotation user: selected variables, using the macro Make3DField (found in
    // annotation user: samples/macros)
    // annotation user_end: <NULL>
    // page group: make3d
    //
    // decorator Annotate	pos=(168,23) size=421x60 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 167
    // annotation user: This page creates glyphs at each point in the newly created
    // annotation user: 3D scattered field (using UnsquishGlyph to ensure that
    // annotation user: the glyphs are round after scaling in a later page).
    // annotation user_end: <NULL>
    // page group: make_glyphs
    //
    // decorator Annotate	pos=(253,253) size=401x60 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 118
    // annotation user: This page collects the scattered glyphs with the caption,
    // annotation user: then scales the result to an approximate 1:1:1 aspect
    // annotation user: ratio.
    // annotation user_end: <NULL>
    // page group: image
// network: end of macro body
CacheScene("Image_3", main_Image_3_out_1, main_Image_3_out_2);
}
main_Import_1_in_1 = "census_normalized.dx";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Transmitter_31_out_1 = NULL;
main_Receiver_35_out_1 = NULL;
main_StringList_2_out_1 = { "inside_urban_area", "outside_urban_area", "rural_farm", "rural_nonfarm", "males", "females", "age_under_1", "age_21", "age_65_to_69", "in_household_1", "in_household_2", "in_household_3", "in_household_4", "in_household_5", "water_company", "water_drilled_well", "water_dug_well", "heat_utility_gas", "heat_bottled_gas", "heat_oil", "heat_coal", "heat_solar" };
main_Transmitter_22_out_1 = NULL;
main_Receiver_22_out_1 = NULL;
main_SelectorList_1_in_1 = "SelectorList_1";
main_SelectorList_1_in_2 = { "inside_urban_area" "rural_farm" "in_household_5" };
main_SelectorList_1_in_3 = { 0 2 13 };
main_SelectorList_1_in_5 = NULL;
main_SelectorList_1_in_6 = NULL;
main_SelectorList_1_in_7 = NULL;
main_SelectorList_1_out_1 = { 0 2 13 };
main_SelectorList_1_out_2 = { "inside_urban_area" "rural_farm" "in_household_5" };
main_Inquire_6_in_2 = "is null +1";
main_Inquire_6_in_3 = NULL;
main_Inquire_6_out_1 = NULL;
main_Inquire_3_in_2 = "count";
main_Inquire_3_in_3 = NULL;
main_Inquire_3_out_1 = NULL;
main_Switch_9_in_3 = 0;
main_Switch_9_out_1 = NULL;
main_Compute_3_in_1 = "$0 == 3 ? 2 : 1";
main_Compute_3_out_1 = NULL;
main_Transmitter_28_out_1 = NULL;
main_Receiver_31_out_1 = NULL;
main_Transmitter_29_out_1 = NULL;
main_Receiver_33_out_1 = NULL;
main_Route_6_out_2 = NULL;
main_Select_5_in_3 = NULL;
main_Select_5_out_1 = NULL;
main_Select_21_in_2 = 0;
main_Select_21_in_3 = NULL;
main_Select_21_out_1 = NULL;
main_Select_47_in_2 = 1;
main_Select_47_in_3 = NULL;
main_Select_47_out_1 = NULL;
main_Select_48_in_2 = 2;
main_Select_48_in_3 = NULL;
main_Select_48_out_1 = NULL;
main_Receiver_36_out_1 = NULL;
main_Selector_4_in_1 = "Selector_4";
main_Selector_4_in_2 = "heat_solar" ;
main_Selector_4_in_3 = 21 ;
main_Selector_4_in_5 = NULL;
main_Selector_4_in_6 = NULL;
main_Selector_4_in_7 = NULL;
main_Selector_4_out_2 = "heat_solar" ;
main_Transmitter_30_out_1 = NULL;
main_Receiver_34_out_1 = NULL;
main_Select_49_in_3 = NULL;
main_Select_49_out_1 = NULL;
main_Extract_18_in_2 = NULL;
main_Extract_18_out_1 = NULL;
main_Transmitter_33_out_1 = NULL;
main_Receiver_38_out_1 = NULL;
main_Make3DField_1_out_1 = NULL;
main_Transmitter_34_out_1 = NULL;
main_Receiver_39_out_1 = NULL;
main_AutoScale_2_in_2 = [1 1 1];
main_AutoScale_2_out_2 = NULL;
main_UnsquishGlyph_1_in_2 = NULL;
main_UnsquishGlyph_1_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 2.6 ;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 2.6 ;
main_AutoGlyph_1_in_3 = NULL;
main_AutoGlyph_1_in_5 = 1.0;
main_AutoGlyph_1_in_6 = NULL;
main_AutoGlyph_1_in_7 = NULL;
main_AutoGlyph_1_out_1 = NULL;
main_AutoColor_3_in_2 = NULL;
main_AutoColor_3_in_3 = NULL;
main_AutoColor_3_in_4 = NULL;
main_AutoColor_3_in_5 = NULL;
main_AutoColor_3_in_6 = NULL;
main_AutoColor_3_in_7 = NULL;
main_AutoColor_3_in_8 = NULL;
main_AutoColor_3_in_9 = NULL;
main_AutoColor_3_in_10 = NULL;
main_AutoColor_3_out_1 = NULL;
main_Transmitter_35_out_1 = NULL;
main_Receiver_40_out_1 = NULL;
main_Receiver_21_out_1 = NULL;
main_Format_2_in_1 = "Glyphs Represent %s";
main_Format_2_out_1 = NULL;
main_Caption_6_in_2 = [.5 .02];
main_Caption_6_in_3 = NULL;
main_Caption_6_in_4 = NULL;
main_Caption_6_in_5 = NULL;
main_Caption_6_in_6 = NULL;
main_Caption_6_in_7 = NULL;
main_Caption_6_in_8 = NULL;
main_Caption_6_in_9 = NULL;
main_Caption_6_out_1 = NULL;
main_Transmitter_27_out_1 = NULL;
main_Receiver_30_out_1 = NULL;
main_Collect_5_out_1 = NULL;
main_Transmitter_23_out_1 = NULL;
main_Receiver_29_out_1 = NULL;
main_Scale_1_out_1 = NULL;
main_AutoCamera_1_in_2 = "off-diagonal";
main_AutoCamera_1_in_3 = 4.0;
main_AutoCamera_1_in_4 = 600;
main_AutoCamera_1_in_5 = 1.0;
main_AutoCamera_1_in_6 = NULL;
main_AutoCamera_1_in_7 = NULL;
main_AutoCamera_1_in_8 = NULL;
main_AutoCamera_1_in_9 = NULL;
main_AutoCamera_1_out_1 = NULL;
main_Reset_1_in_1 = "main_Reset_1_out_1";
main_Reset_1_in_2 = 1;
main_Reset_1_in_3 = 1;
main_Reset_1_in_4 = NULL;
main_Reset_1_in_5 = NULL;
main_Reset_1_in_6 = NULL;
main_Reset_1_out_1[oneshot:0] = 1;
main_Receiver_20_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_3_in_1 = "Image_3";
main_Image_3_in_3 = "X24,,";
main_Image_3_in_4 = 1;
main_Image_3_in_5 = [0.719483 0.510341 1.71633];
main_Image_3_in_6 = [4.69949 4.49035 6.61853];
main_Image_3_in_7 = 4.0;
main_Image_3_in_8 = 600;
main_Image_3_in_9 = 1.0;
main_Image_3_in_10 = [0 1 0];
main_Image_3_in_11 = NULL;
main_Image_3_in_12 = 0;
main_Image_3_in_13 = NULL;
main_Image_3_in_14 = 1;
main_Image_3_in_15 = NULL;
main_Image_3_in_16 = NULL;
main_Image_3_in_17 = NULL;
main_Image_3_in_18 = NULL;
main_Image_3_in_19 = 0;
main_Image_3_in_22 = NULL;
main_Image_3_in_23 = NULL;
main_Image_3_in_25 = NULL;
main_Image_3_in_26 = NULL;
main_Image_3_in_27 = NULL;
main_Image_3_in_28 = NULL;
main_Image_3_in_29 = 1;
main_Image_3_in_31 = { 8 8 8 };
main_Image_3_in_32 = NULL;
main_Image_3_in_33 = NULL;
main_Image_3_in_34 = NULL;
main_Image_3_in_35 = NULL;
main_Image_3_in_36 = NULL;
main_Image_3_in_37 = NULL;
main_Image_3_in_38 = NULL;
main_Image_3_in_39 = NULL;
main_Image_3_in_40 = NULL;
main_Image_3_in_41 = "rotate";
main_Image_3_in_42 = NULL;
main_Image_3_in_43 = NULL;
main_Image_3_in_44 = NULL;
main_Image_3_in_45 = NULL;
main_Image_3_in_46 = NULL;
main_Image_3_in_47 = NULL;
main_Image_3_in_48 = NULL;
main_Receiver_32_out_1 = NULL;
main_Route_5_in_2 = {"You must select 3 items from Data List"};
main_Route_5_out_1 = NULL;
main_Message_1_in_2 = "error";
main_Message_1_in_3 = NULL;
Executive("product version 3 1 4");
$sync
main();

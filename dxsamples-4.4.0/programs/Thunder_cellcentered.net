//
// time: Wed Apr  9 15:45:17 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
// CATEGORY Macros
//
// comment: This program demonstrates how easily Data Explorer handles position-dependent and cell-centered data.   The original data that is read (the thunderstorm 51x28x16) is position-dependent.  The Post module is used to generate the cell-centered data.  The flexibility of the system is demonstrated by the fact that the same modules are used for either the position-dependent data or the cell-centered data.  The program also illustrates the differences in the appearance of the two different types of data.
// comment: 
// comment: The size of the scalar fields (cloudwater and temperature) is 0.1 Mbyte; the size of the vector field (wind) is 0.3 Mbyte.
// comment: 
// comment: The program uses hierarchical control panels.  The primary control panel is used to specify position-dependent or cell-centered data, the type of realization, and which data value is used for mapping.  The secondary window is used to specify a scalar factor of for isosurface value when using the Include module with the cell-centered. data.
// page assignment: boundary	order=4, windowed=0, showing=0
// page assignment: image	order=9, windowed=0, showing=0
// page assignment: import	order=2, windowed=0, showing=1
// page assignment: iso	order=3, windowed=0, showing=0
// page assignment: map	order=8, windowed=0, showing=0
// page assignment: plane	order=5, windowed=0, showing=0
// page assignment: user_choice	order=6, windowed=0, showing=0
// page assignment: user_choice1	order=7, windowed=0, showing=0
// workspace: width = 583, height = 420
// layout: snap = 0, width = 50, height = 50, align = UL
//
macro main(
) -> (
) {
    // 
    // node Selector[1]: x = 153, y = 20, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "cell-centered data" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 2 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "position-dependent data" "cell-centered data" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 2 }
    // input[6]: defaulting = 1, visible = 0, type = 3, value = 0
    // output[1]: visible = 1, type = 29, value = 2 
    // output[2]: visible = 1, type = 32, value = "cell-centered data" 
    // page group: user_choice1
    //
    // 
    // node Import[1]: x = 20, y = 20, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "cloudwater"
    // page group: import
    //
main_Import_1_out_1 = 
    Import(
    main_Import_1_in_1,
    main_Import_1_in_2,
    main_Import_1_in_3,
    main_Import_1_in_4,
    main_Import_1_in_5,
    main_Import_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[7]: x = 49, y = 358, inputs = 1, label = data_dep_pos
    // page group: import
    //
data_dep_pos = main_Import_1_out_1;
    // 
    // node Receiver[16]: x = 47, y = 43, inputs = 1, label = data_dep_pos
    // page group: iso
    //
main_Receiver_16_out_1[cache: 0] = data_dep_pos;
    // 
    // node Scalar[1]: x = 163, y = 38, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.150000
    // input[4]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.1
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 2.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[8]: defaulting = 1, visible = 0, type = 32, value = "2"
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.150000
    // page group: iso
    //
    // 
    // node Isosurface[1]: x = 74, y = 200, inputs = 6, label = Isosurface
    // page group: iso
    //
main_Isosurface_1_out_1 = 
    Isosurface(
    main_Receiver_16_out_1,
    main_Scalar_1_out_1,
    main_Isosurface_1_in_3,
    main_Isosurface_1_in_4,
    main_Isosurface_1_in_5,
    main_Isosurface_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[13]: x = 137, y = 357, inputs = 1, label = iso
    // page group: iso
    //
iso = main_Isosurface_1_out_1;
    // 
    // node Receiver[17]: x = 323, y = 31, inputs = 1, label = iso
    // page group: user_choice1
    //
main_Receiver_17_out_1[cache: 0] = iso;
    // 
    // node Post[1]: x = 202, y = 183, inputs = 2, label = Post
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "connections"
    // page group: import
    //
main_Post_1_out_1 = 
    Post(
    main_Import_1_out_1,
    main_Post_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[8]: x = 226, y = 355, inputs = 1, label = data_dep_con
    // page group: import
    //
data_dep_con = main_Post_1_out_1;
    // 
    // node Receiver[15]: x = 0, y = 115, inputs = 1, label = data_dep_con
    // page group: boundary
    //
main_Receiver_15_out_1[cache: 0] = data_dep_con;
    // 
    // node Transmitter[1]: x = 206, y = 349, inputs = 1, label = isovalue
    // page group: iso
    //
isovalue = main_Scalar_1_out_1;
    // 
    // node Receiver[1]: x = 121, y = 20, inputs = 1, label = isovalue
    // page group: boundary
    //
main_Receiver_1_out_1[cache: 0] = isovalue;
    // 
    // node Scalar[2]: x = 243, y = 31, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_2"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 0.270000
    // input[4]: defaulting = 1, visible = 0, type = 3, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 5, value = 0.15
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[8]: defaulting = 1, visible = 0, type = 32, value = "2"
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 2
    // output[1]: visible = 1, type = 5, value = 0.270000
    // page group: boundary
    //
    // 
    // node Compute[1]: x = 141, y = 140, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*(1.0-$1)"
    // page group: boundary
    // expression: value = isovalue*(1.0-factor)
    // name[2]: value = isovalue
    // name[3]: value = factor
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_Receiver_1_out_1,
    main_Scalar_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Compute[2]: x = 223, y = 136, inputs = 3, label = Compute
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0*(1.0+$1)"
    // page group: boundary
    // expression: value = isovalue*(1.0+factor)
    // name[2]: value = isovalue
    // name[3]: value = factor
    //
main_Compute_2_out_1 = 
    Compute(
    main_Compute_2_in_1,
    main_Receiver_1_out_1,
    main_Scalar_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Include[1]: x = 149, y = 222, inputs = 6, label = Include
    // page group: boundary
    //
main_Include_1_out_1 = 
    Include(
    main_Receiver_15_out_1,
    main_Compute_1_out_1,
    main_Compute_2_out_1,
    main_Include_1_in_4,
    main_Include_1_in_5,
    main_Include_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node ShowBoundary[1]: x = 135, y = 312, inputs = 2, label = ShowBoundary
    // page group: boundary
    //
main_ShowBoundary_1_out_1 = 
    ShowBoundary(
    main_Include_1_out_1,
    main_ShowBoundary_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node FaceNormals[1]: x = 142, y = 403, inputs = 1, label = FaceNormals
    // page group: boundary
    //
main_FaceNormals_1_out_1 = 
    FaceNormals(
    main_ShowBoundary_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[14]: x = 172, y = 509, inputs = 1, label = boundary
    // page group: boundary
    //
boundary = main_FaceNormals_1_out_1;
    // 
    // node Receiver[18]: x = 381, y = 34, inputs = 1, label = boundary
    // page group: user_choice1
    //
main_Receiver_18_out_1[cache: 0] = boundary;
    // 
    // node Switch[1]: x = 305, y = 304, inputs = 3, label = Switch
    // page group: user_choice1
    //
main_Switch_1_out_1 = 
    Switch(
    main_Selector_1_out_1,
    main_Receiver_17_out_1,
    main_Receiver_18_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[12]: x = 297, y = 440, inputs = 1, label = iso_or_boundary
    // page group: user_choice1
    //
iso_or_boundary = main_Switch_1_out_1;
    // 
    // node Receiver[14]: x = 20, y = 20, inputs = 1, label = iso_or_boundary
    // page group: map
    //
main_Receiver_14_out_1[cache: 0] = iso_or_boundary;
    // 
    // node Transmitter[2]: x = 14, y = 431, inputs = 1, label = choice
    // page group: user_choice1
    //
choice = main_Selector_1_out_1;
    // 
    // node Receiver[2]: x = 1662, y = 293, inputs = 1, label = choice
    // page group: image
    //
main_Receiver_2_out_1[cache: 0] = choice;
    // 
    // node Selector[3]: x = 1423, y = 144, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_3"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "temperature" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 1 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "temperature" "wind" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 2 }
    // input[6]: defaulting = 1, visible = 0, type = 3, value = 0
    // output[1]: visible = 1, type = 29, value = 1 
    // output[2]: visible = 1, type = 32, value = "temperature" 
    // page group: image
    //
    // 
    // node Import[2]: x = 1387, y = 31, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "temperature"
    // page group: image
    //
main_Import_2_out_1 = 
    Import(
    main_Import_2_in_1,
    main_Import_2_in_2,
    main_Import_2_in_3,
    main_Import_2_in_4,
    main_Import_2_in_5,
    main_Import_2_in_6
    ) [instance: 2, cache: 1];
    // 
    // node Import[3]: x = 1634, y = 28, inputs = 6, label = Import
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "wind"
    // page group: image
    //
main_Import_3_out_1 = 
    Import(
    main_Import_3_in_1,
    main_Import_3_in_2,
    main_Import_3_in_3,
    main_Import_3_in_4,
    main_Import_3_in_5,
    main_Import_3_in_6
    ) [instance: 3, cache: 1];
    // 
    // node Switch[6]: x = 1587, y = 155, inputs = 3, label = Switch
    // page group: image
    //
main_Switch_6_out_1 = 
    Switch(
    main_Selector_3_out_1,
    main_Import_2_out_1,
    main_Import_3_out_1
    ) [instance: 6, cache: 1];
    // 
    // node Post[2]: x = 1776, y = 302, inputs = 2, label = Post
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "connections"
    // page group: image
    //
main_Post_2_out_1 = 
    Post(
    main_Switch_6_out_1,
    main_Post_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Switch[2]: x = 1706, y = 425, inputs = 3, label = Switch
    // page group: image
    //
main_Switch_2_out_1 = 
    Switch(
    main_Receiver_2_out_1,
    main_Switch_6_out_1,
    main_Post_2_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Transmitter[3]: x = 1694, y = 521, inputs = 1, label = data_to_map
    // page group: image
    //
data_to_map = main_Switch_2_out_1;
    // 
    // node Receiver[4]: x = 158, y = 32, inputs = 1, label = data_to_map
    // page group: map
    //
main_Receiver_4_out_1[cache: 0] = data_to_map;
    // 
    // node Map[1]: x = 122, y = 133, inputs = 4, label = Map
    // page group: map
    //
main_Map_1_out_1 = 
    Map(
    main_Receiver_14_out_1,
    main_Receiver_4_out_1,
    main_Map_1_in_3,
    main_Map_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[1]: x = 107, y = 228, inputs = 10, label = AutoColor
    // page group: map
    //
main_AutoColor_1_out_1,
main_AutoColor_1_out_2 = 
    AutoColor(
    main_Map_1_out_1,
    main_AutoColor_1_in_2,
    main_AutoColor_1_in_3,
    main_AutoColor_1_in_4,
    main_AutoColor_1_in_5,
    main_AutoColor_1_in_6,
    main_AutoColor_1_in_7,
    main_AutoColor_1_in_8,
    main_AutoColor_1_in_9,
    main_AutoColor_1_in_10
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[10]: x = 12, y = 24, inputs = 1, label = choice
    // page group: plane
    //
main_Receiver_10_out_1[cache: 0] = choice;
    // 
    // node Receiver[9]: x = 101, y = 20, inputs = 1, label = data_dep_pos
    // page group: plane
    //
main_Receiver_9_out_1[cache: 0] = data_dep_pos;
    // 
    // node Receiver[8]: x = 239, y = 25, inputs = 1, label = data_dep_con
    // page group: plane
    //
main_Receiver_8_out_1[cache: 0] = data_dep_con;
    // 
    // node Switch[5]: x = 140, y = 176, inputs = 3, label = Switch
    // page group: plane
    //
main_Switch_5_out_1 = 
    Switch(
    main_Receiver_10_out_1,
    main_Receiver_9_out_1,
    main_Receiver_8_out_1
    ) [instance: 5, cache: 1];
    // 
    // node MapToPlane[1]: x = 168, y = 269, inputs = 3, label = MapToPlane
    // page group: plane
    //
main_MapToPlane_1_out_1 = 
    MapToPlane(
    main_Switch_5_out_1,
    main_MapToPlane_1_in_2,
    main_MapToPlane_1_in_3
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[2]: x = 153, y = 364, inputs = 10, label = AutoColor
    // page group: plane
    //
main_AutoColor_2_out_1,
main_AutoColor_2_out_2 = 
    AutoColor(
    main_MapToPlane_1_out_1,
    main_AutoColor_2_in_2,
    main_AutoColor_2_in_3,
    main_AutoColor_2_in_4,
    main_AutoColor_2_in_5,
    main_AutoColor_2_in_6,
    main_AutoColor_2_in_7,
    main_AutoColor_2_in_8,
    main_AutoColor_2_in_9,
    main_AutoColor_2_in_10
    ) [instance: 2, cache: 1];
    // 
    // node Selector[2]: x = 20, y = 20, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_2"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "isosurface" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 1 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "isosurface" "slice" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 2 }
    // input[6]: defaulting = 1, visible = 0, type = 3, value = 0
    // output[1]: visible = 1, type = 29, value = 1 
    // output[2]: visible = 1, type = 32, value = "isosurface" 
    // page group: user_choice
    //
    // 
    // node Transmitter[11]: x = 35, y = 230, inputs = 1, label = iso_or_plane
    // page group: user_choice
    //
iso_or_plane = main_Selector_2_out_1;
    // 
    // node Receiver[13]: x = 1391, y = 279, inputs = 1, label = iso_or_plane
    // page group: image
    //
main_Receiver_13_out_1[cache: 0] = iso_or_plane;
    // 
    // node Format[1]: x = 1531, y = 268, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "isosurface of cloudwater density; colors represent %s"
    // page group: image
    //
main_Format_1_out_1 = 
    Format(
    main_Format_1_in_1,
    main_Selector_3_out_2
    ) [instance: 1, cache: 1];
    // 
    // node Switch[7]: x = 1516, y = 383, inputs = 3, label = Switch
    // input[3]: defaulting = 0, visible = 1, type = 16777248, value = {"colors represent cloudwater"}
    // page group: image
    //
main_Switch_7_out_1 = 
    Switch(
    main_Receiver_13_out_1,
    main_Format_1_out_1,
    main_Switch_7_in_3
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[10]: x = 1539, y = 512, inputs = 1, label = colors_caption
    // page group: image
    //
colors_caption = main_Switch_7_out_1;
    // 
    // node Receiver[12]: x = 172, y = 272, inputs = 1, label = colors_caption
    // page group: user_choice1
    //
main_Receiver_12_out_1[cache: 0] = colors_caption;
    // 
    // node List[1]: x = 105, y = 343, inputs = 2, label = List
    // page group: user_choice1
    //
main_List_1_out_1 = 
    List(
    main_Selector_1_out_2,
    main_Receiver_12_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[4]: x = 128, y = 440, inputs = 1, label = caption
    // page group: user_choice1
    //
caption = main_List_1_out_1;
    // 
    // node Receiver[5]: x = 42, y = 12, inputs = 1, label = caption
    // page group: image
    //
main_Receiver_5_out_1[cache: 0] = caption;
    // 
    // node List[2]: x = 36, y = 127, inputs = 2, label = List
    // input[2]: defaulting = 0, visible = 1, type = 16777248, value = {"Data Courtesy of NCSA, University of Illinois at Urbana-Champaign"}
    // page group: image
    //
main_List_2_out_1 = 
    List(
    main_Receiver_5_out_1,
    main_List_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Caption[1]: x = 59, y = 206, inputs = 9, label = Caption
    // input[6]: defaulting = 0, visible = 1, type = 1, value = 18
    // page group: image
    //
main_Caption_1_out_1 = 
    Caption(
    main_List_2_out_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Receiver[19]: x = 174, y = 22, inputs = 1, label = iso_or_plane
    // page group: image
    //
main_Receiver_19_out_1[cache: 0] = iso_or_plane;
    // 
    // node Transmitter[6]: x = 89, y = 385, inputs = 1, label = mapped_iso
    // page group: map
    //
mapped_iso = main_AutoColor_1_out_1;
    // 
    // node Receiver[7]: x = 323, y = 41, inputs = 1, label = mapped_iso
    // page group: image
    //
main_Receiver_7_out_1[cache: 0] = mapped_iso;
    // 
    // node Shade[5]: x = 182, y = 456, inputs = 7, label = Shade
    // input[2]: defaulting = 0, visible = 1, type = 3, value = 0
    // page group: plane
    //
main_Shade_5_out_1 = 
    Shade(
    main_AutoColor_2_out_1,
    main_Shade_5_in_2,
    main_Shade_5_in_3,
    main_Shade_5_in_4,
    main_Shade_5_in_5,
    main_Shade_5_in_6,
    main_Shade_5_in_7
    ) [instance: 5, cache: 1];
    // 
    // node Transmitter[9]: x = 195, y = 555, inputs = 1, label = maptoplane
    // page group: plane
    //
maptoplane = main_Shade_5_out_1;
    // 
    // node Receiver[11]: x = 422, y = 40, inputs = 1, label = maptoplane
    // page group: image
    //
main_Receiver_11_out_1[cache: 0] = maptoplane;
    // 
    // node Switch[4]: x = 221, y = 203, inputs = 3, label = Switch
    // page group: image
    //
main_Switch_4_out_1 = 
    Switch(
    main_Receiver_19_out_1,
    main_Receiver_7_out_1,
    main_Receiver_11_out_1
    ) [instance: 4, cache: 1];
    // 
    // node Collect[1]: x = 147, y = 322, inputs = 2, label = Collect
    // page group: image
    //
main_Collect_1_out_1 = 
    Collect(
    main_Caption_1_out_1,
    main_Switch_4_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[3]: x = 173, y = 497, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_3"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [50000 7750 27000]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-29115.1 60431.9 262859]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 136275.0
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.0325374 0.977701 -0.207467]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0002
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // page group: image
    // depth: value = 24
    // window: position = (0.3438,0.0791), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_3_out_1,
main_Image_3_out_2,
main_Image_3_out_3 = 
    Image(
    main_Image_3_in_1,
    main_Collect_1_out_1,
    main_Image_3_in_3,
    main_Image_3_in_4,
    main_Image_3_in_5,
    main_Image_3_in_6,
    main_Image_3_in_7,
    main_Image_3_in_8,
    main_Image_3_in_9,
    main_Image_3_in_10,
    main_Image_3_in_11,
    main_Image_3_in_12,
    main_Image_3_in_13,
    main_Image_3_in_14,
    main_Image_3_in_15,
    main_Image_3_in_16,
    main_Image_3_in_17,
    main_Image_3_in_18,
    main_Image_3_in_19,
    main_Image_3_in_20,
    main_Image_3_in_21,
    main_Image_3_in_22,
    main_Image_3_in_23,
    main_Image_3_in_24,
    main_Image_3_in_25,
    main_Image_3_in_26,
    main_Image_3_in_27,
    main_Image_3_in_28,
    main_Image_3_in_29,
    main_Image_3_in_30,
    main_Image_3_in_31,
    main_Image_3_in_32,
    main_Image_3_in_33,
    main_Image_3_in_34,
    main_Image_3_in_35,
    main_Image_3_in_36,
    main_Image_3_in_37,
    main_Image_3_in_38,
    main_Image_3_in_39,
    main_Image_3_in_40,
    main_Image_3_in_41,
    main_Image_3_in_42,
    main_Image_3_in_43,
    main_Image_3_in_44,
    main_Image_3_in_45,
    main_Image_3_in_46,
    main_Image_3_in_47,
    main_Image_3_in_48
    ) [instance: 3, cache: 1];
    //
    // decorator Annotate	pos=(193,61) size=390x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 103
    // annotation user: This page imports some data then uses Post to make it
    // annotation user: "dep connections" (cell-centered) for comparison.
    // annotation user_end: <NULL>
    // page group: import
    //
    // decorator Annotate	pos=(277,110) size=231x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 31
    // annotation user: This page creates an isosurface
    // annotation user_end: <NULL>
    // page group: iso
    //
    // decorator Annotate	pos=(311,77) size=326x44 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 56
    // annotation user: this page creates region within "factor" of the
    // annotation user: isovalue
    // annotation user_end: <NULL>
    // page group: boundary
    //
    // decorator Annotate	pos=(242,168) size=380x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 54
    // annotation user: This page creates a cutting plane of the selected data
    // annotation user_end: <NULL>
    // page group: plane
    //
    // decorator Annotate	pos=(136,54) size=475x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 68
    // annotation user: This page allows the user to choose either a 3D or 2D visualization.
    // annotation user_end: <NULL>
    // page group: user_choice
    //
    // decorator Annotate	pos=(150,305) size=461x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 63
    // annotation user: Map another variable onto the isosurface or boundary and color.
    // annotation user_end: <NULL>
    // page group: map
    //
    // decorator Annotate	pos=(323,262) size=126x28 style(Label), font=bold, value = <NULL>
    // annotation user_begin: 16
    // annotation user: create the image
    // annotation user_end: <NULL>
    // page group: image
// network: end of macro body
CacheScene("Image_3", main_Image_3_out_1, main_Image_3_out_2);
}
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "cell-centered data" ;
main_Selector_1_in_3 = 2 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 2 ;
main_Selector_1_out_2 = "cell-centered data" ;
main_Import_1_in_1 = "cloudwater";
main_Import_1_in_2 = NULL;
main_Import_1_in_3 = NULL;
main_Import_1_in_4 = NULL;
main_Import_1_in_5 = NULL;
main_Import_1_in_6 = NULL;
main_Import_1_out_1 = NULL;
main_Transmitter_7_out_1 = NULL;
main_Receiver_16_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 0.150000;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 0.150000;
main_Isosurface_1_in_3 = NULL;
main_Isosurface_1_in_4 = NULL;
main_Isosurface_1_in_5 = NULL;
main_Isosurface_1_in_6 = NULL;
main_Isosurface_1_out_1 = NULL;
main_Transmitter_13_out_1 = NULL;
main_Receiver_17_out_1 = NULL;
main_Post_1_in_2 = "connections";
main_Post_1_out_1 = NULL;
main_Transmitter_8_out_1 = NULL;
main_Receiver_15_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Scalar_2_in_1 = "Scalar_2";
main_Scalar_2_in_2 = NULL;
main_Scalar_2_in_3 = 0.270000;
main_Scalar_2_in_4 = NULL;
main_Scalar_2_in_5 = NULL;
main_Scalar_2_in_6 = NULL;
main_Scalar_2_in_7 = NULL;
main_Scalar_2_in_8 = NULL;
main_Scalar_2_in_9 = NULL;
main_Scalar_2_in_10 = NULL;
main_Scalar_2_in_11 = NULL;
main_Scalar_2_out_1 = 0.270000;
main_Compute_1_in_1 = "$0*(1.0-$1)";
main_Compute_1_out_1 = NULL;
main_Compute_2_in_1 = "$0*(1.0+$1)";
main_Compute_2_out_1 = NULL;
main_Include_1_in_4 = NULL;
main_Include_1_in_5 = NULL;
main_Include_1_in_6 = NULL;
main_Include_1_out_1 = NULL;
main_ShowBoundary_1_in_2 = NULL;
main_ShowBoundary_1_out_1 = NULL;
main_FaceNormals_1_out_1 = NULL;
main_Transmitter_14_out_1 = NULL;
main_Receiver_18_out_1 = NULL;
main_Switch_1_out_1 = NULL;
main_Transmitter_12_out_1 = NULL;
main_Receiver_14_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Selector_3_in_1 = "Selector_3";
main_Selector_3_in_2 = "temperature" ;
main_Selector_3_in_3 = 1 ;
main_Selector_3_in_4 = NULL;
main_Selector_3_in_5 = NULL;
main_Selector_3_in_6 = NULL;
main_Selector_3_in_7 = NULL;
main_Selector_3_out_1 = 1 ;
main_Selector_3_out_2 = "temperature" ;
main_Import_2_in_1 = "temperature";
main_Import_2_in_2 = NULL;
main_Import_2_in_3 = NULL;
main_Import_2_in_4 = NULL;
main_Import_2_in_5 = NULL;
main_Import_2_in_6 = NULL;
main_Import_2_out_1 = NULL;
main_Import_3_in_1 = "wind";
main_Import_3_in_2 = NULL;
main_Import_3_in_3 = NULL;
main_Import_3_in_4 = NULL;
main_Import_3_in_5 = NULL;
main_Import_3_in_6 = NULL;
main_Import_3_out_1 = NULL;
main_Switch_6_out_1 = NULL;
main_Post_2_in_2 = "connections";
main_Post_2_out_1 = NULL;
main_Switch_2_out_1 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Map_1_in_3 = NULL;
main_Map_1_in_4 = NULL;
main_Map_1_out_1 = NULL;
main_AutoColor_1_in_2 = NULL;
main_AutoColor_1_in_3 = NULL;
main_AutoColor_1_in_4 = NULL;
main_AutoColor_1_in_5 = NULL;
main_AutoColor_1_in_6 = NULL;
main_AutoColor_1_in_7 = NULL;
main_AutoColor_1_in_8 = NULL;
main_AutoColor_1_in_9 = NULL;
main_AutoColor_1_in_10 = NULL;
main_AutoColor_1_out_1 = NULL;
main_Receiver_10_out_1 = NULL;
main_Receiver_9_out_1 = NULL;
main_Receiver_8_out_1 = NULL;
main_Switch_5_out_1 = NULL;
main_MapToPlane_1_in_2 = NULL;
main_MapToPlane_1_in_3 = NULL;
main_MapToPlane_1_out_1 = NULL;
main_AutoColor_2_in_2 = NULL;
main_AutoColor_2_in_3 = NULL;
main_AutoColor_2_in_4 = NULL;
main_AutoColor_2_in_5 = NULL;
main_AutoColor_2_in_6 = NULL;
main_AutoColor_2_in_7 = NULL;
main_AutoColor_2_in_8 = NULL;
main_AutoColor_2_in_9 = NULL;
main_AutoColor_2_in_10 = NULL;
main_AutoColor_2_out_1 = NULL;
main_Selector_2_in_1 = "Selector_2";
main_Selector_2_in_2 = "isosurface" ;
main_Selector_2_in_3 = 1 ;
main_Selector_2_in_4 = NULL;
main_Selector_2_in_5 = NULL;
main_Selector_2_in_6 = NULL;
main_Selector_2_in_7 = NULL;
main_Selector_2_out_1 = 1 ;
main_Transmitter_11_out_1 = NULL;
main_Receiver_13_out_1 = NULL;
main_Format_1_in_1 = "isosurface of cloudwater density; colors represent %s";
main_Format_1_out_1 = NULL;
main_Switch_7_in_3 = {"colors represent cloudwater"};
main_Switch_7_out_1 = NULL;
main_Transmitter_10_out_1 = NULL;
main_Receiver_12_out_1 = NULL;
main_List_1_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_List_2_in_2 = {"Data Courtesy of NCSA, University of Illinois at Urbana-Champaign"};
main_List_2_out_1 = NULL;
main_Caption_1_in_2 = NULL;
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = NULL;
main_Caption_1_in_6 = 18;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Receiver_19_out_1 = NULL;
main_Transmitter_6_out_1 = NULL;
main_Receiver_7_out_1 = NULL;
main_Shade_5_in_2 = 0;
main_Shade_5_in_3 = NULL;
main_Shade_5_in_4 = NULL;
main_Shade_5_in_5 = NULL;
main_Shade_5_in_6 = NULL;
main_Shade_5_in_7 = NULL;
main_Shade_5_out_1 = NULL;
main_Transmitter_9_out_1 = NULL;
main_Receiver_11_out_1 = NULL;
main_Switch_4_out_1 = NULL;
main_Collect_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_3_in_1 = "Image_3";
main_Image_3_in_3 = "X24,,";
main_Image_3_in_4 = 1;
main_Image_3_in_5 = [50000 7750 27000];
main_Image_3_in_6 = [-29115.1 60431.9 262859];
main_Image_3_in_7 = 136275.0;
main_Image_3_in_8 = 640;
main_Image_3_in_9 = 0.75;
main_Image_3_in_10 = [0.0325374 0.977701 -0.207467];
main_Image_3_in_11 = NULL;
main_Image_3_in_12 = 0;
main_Image_3_in_13 = NULL;
main_Image_3_in_14 = 1;
main_Image_3_in_15 = NULL;
main_Image_3_in_16 = NULL;
main_Image_3_in_17 = NULL;
main_Image_3_in_18 = NULL;
main_Image_3_in_19 = 0;
main_Image_3_in_20 = NULL;
main_Image_3_in_21 = NULL;
main_Image_3_in_22 = NULL;
main_Image_3_in_23 = NULL;
main_Image_3_in_25 = NULL;
main_Image_3_in_26 = NULL;
main_Image_3_in_27 = NULL;
main_Image_3_in_28 = NULL;
main_Image_3_in_29 = NULL;
main_Image_3_in_30 = NULL;
main_Image_3_in_31 = NULL;
main_Image_3_in_32 = NULL;
main_Image_3_in_33 = NULL;
main_Image_3_in_34 = NULL;
main_Image_3_in_35 = NULL;
main_Image_3_in_36 = NULL;
main_Image_3_in_37 = NULL;
main_Image_3_in_38 = NULL;
main_Image_3_in_39 = NULL;
main_Image_3_in_40 = NULL;
main_Image_3_in_41 = NULL;
main_Image_3_in_42 = NULL;
main_Image_3_in_43 = NULL;
main_Image_3_in_44 = NULL;
main_Image_3_in_45 = NULL;
main_Image_3_in_46 = NULL;
main_Image_3_in_47 = NULL;
main_Image_3_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

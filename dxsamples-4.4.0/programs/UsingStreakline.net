//
// time: Wed Apr  9 15:48:07 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
// CATEGORY Macros
//
// comment: This example shows the use of the Streakline module. Streaklines show the progress of a particle in a changing vector field.  This is in contrast to streamlines, which follow the path of a particle in a static vector field.  In this example, a probe point is used to set the starting points of the streaklines. To use this example, first go to Options in the Image window and choose "View Control". Then in the Mode menu, choose "Cursors".  This will make the probe "grid_pts" active.  A bounding box and a small square will appear which marks the probe point. The probe defines a point around which a regular grid will be constructed using the Grid module.  The left mouse button can be used to click on, and move the probe point. You can put Execute on Change on so that as you change probe points, Data Explorer will re-execute the program.
// comment: 
// comment: "series_data" is a receiver which receives a series field from a simple set of modules to the right of the first part of the visual program you see. Use the scroll bar at the bottom of the visual program editor to see this part.
// comment: 
// comment: Now choose Open All Control Panels in the Windows menu. You will find an interactor which controls the ending frame for the streaklines. In this example, the value was saved as 2.  This means that only frames 0, 1, and 2 will be used to construct the streaklines.  Try increasing the interactor value to see how the streaklines progress in time.  (There are a total of six frames in this simple example.)
// workspace: width = 1447, height = 588
// layout: snap = 0, width = 50, height = 50, align = UL
//
macro main(
) -> (
) {
    // 
    // node Construct[1]: x = 781, y = 26, inputs = 4, label = Construct
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [10]
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {[1.0 0 0]}
    //
main_Construct_1_out_1 = 
    Construct(
    main_Construct_1_in_1,
    main_Construct_1_in_2,
    main_Construct_1_in_3,
    main_Construct_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Construct[2]: x = 887, y = 20, inputs = 4, label = Construct
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [10]
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {[1 0.1 0]}
    //
main_Construct_2_out_1 = 
    Construct(
    main_Construct_2_in_1,
    main_Construct_2_in_2,
    main_Construct_2_in_3,
    main_Construct_2_in_4
    ) [instance: 2, cache: 1];
    // 
    // node Construct[3]: x = 1119, y = 20, inputs = 4, label = Construct
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [10, 10, 10]
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {[1 -1.3 0]}
    //
main_Construct_3_out_1 = 
    Construct(
    main_Construct_3_in_1,
    main_Construct_3_in_2,
    main_Construct_3_in_3,
    main_Construct_3_in_4
    ) [instance: 3, cache: 1];
    // 
    // node Construct[4]: x = 1003, y = 16, inputs = 4, label = Construct
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [10]
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {[0.8 0.8 0.1]}
    //
main_Construct_4_out_1 = 
    Construct(
    main_Construct_4_in_1,
    main_Construct_4_in_2,
    main_Construct_4_in_3,
    main_Construct_4_in_4
    ) [instance: 4, cache: 1];
    // 
    // node Construct[5]: x = 1235, y = 24, inputs = 4, label = Construct
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [10]
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {[3.3 1 0.6]}
    //
main_Construct_5_out_1 = 
    Construct(
    main_Construct_5_in_1,
    main_Construct_5_in_2,
    main_Construct_5_in_3,
    main_Construct_5_in_4
    ) [instance: 5, cache: 1];
    // 
    // node Construct[6]: x = 1351, y = 31, inputs = 4, label = Construct
    // input[3]: defaulting = 0, visible = 1, type = 8, value = [10]
    // input[4]: defaulting = 0, visible = 1, type = 16777245, value = {[1.0 -5 0]}
    //
main_Construct_6_out_1 = 
    Construct(
    main_Construct_6_in_1,
    main_Construct_6_in_2,
    main_Construct_6_in_3,
    main_Construct_6_in_4
    ) [instance: 6, cache: 1];
    // 
    // node CollectSeries[1]: x = 923, y = 204, inputs = 12, label = CollectSeries
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 0.00000
    // input[4]: defaulting = 0, visible = 1, type = 5, value = 0.500000
    // input[6]: defaulting = 0, visible = 1, type = 5, value = 1.00000
    // input[8]: defaulting = 0, visible = 1, type = 5, value = 1.80000
    // input[10]: defaulting = 0, visible = 1, type = 5, value = 3.00000
    // input[12]: defaulting = 0, visible = 1, type = 5, value = 6.00000
    //
main_CollectSeries_1_out_1 = 
    CollectSeries(
    main_Construct_1_out_1,
    main_CollectSeries_1_in_2,
    main_Construct_2_out_1,
    main_CollectSeries_1_in_4,
    main_Construct_3_out_1,
    main_CollectSeries_1_in_6,
    main_Construct_4_out_1,
    main_CollectSeries_1_in_8,
    main_Construct_5_out_1,
    main_CollectSeries_1_in_10,
    main_Construct_6_out_1,
    main_CollectSeries_1_in_12
    ) [instance: 1, cache: 1];
    // 
    // node Replace[1]: x = 1081, y = 344, inputs = 4, label = Replace--puts the "positions" into the "data" component
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "positions"
    //
main_Replace_1_out_1 = 
    Replace(
    main_CollectSeries_1_out_1,
    main_CollectSeries_1_out_1,
    main_Replace_1_in_3,
    main_Replace_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node Compute[1]: x = 989, y = 432, inputs = 3, label = Compute is being used to add the "positions" to the "data" to modify the data values slightly.
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "$0 + $1/8."
    // expression: value = a + b/8.
    // name[2]: value = a
    // name[3]: value = b
    //
main_Compute_1_out_1 = 
    Compute(
    main_Compute_1_in_1,
    main_CollectSeries_1_out_1,
    main_Replace_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[1]: x = 1065, y = 526, inputs = 1, label = series_data
    //
series_data = main_Compute_1_out_1;
    // 
    // node Receiver[1]: x = 147, y = 5, inputs = 1, label = series_data
    //
main_Receiver_1_out_1[cache: 0] = series_data;
    // 
    // node ShowBox[2]: x = 54, y = 208, inputs = 1, label = ShowBox
    //
main_ShowBox_2_out_1,
main_ShowBox_2_out_2 = 
    ShowBox(
    main_Receiver_1_out_1
    ) [instance: 2, cache: 1];
    // 
    // node Color[1]: x = 75, y = 292, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "pink"
    //
main_Color_1_out_1 = 
    Color(
    main_ShowBox_2_out_1,
    main_Color_1_in_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Probe[1]: x = 314, y = 13, inputs = 0, label = grid_pt
    // output[1]: visible = 1, type = 8, value = [0.600258, 5.29718, 5.65793]
    //
    // 
    // node Grid[1]: x = 304, y = 91, inputs = 4, label = Grid
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rectangle"
    // input[3]: defaulting = 0, visible = 1, type = 16777224, value = {[0, 0, 3], [0, 3, 0]}
    // input[4]: defaulting = 0, visible = 1, type = 16777217, value = {7, 7}
    //
main_Grid_1_out_1 = 
    Grid(
    main_Probe_1_out_1,
    main_Grid_1_in_2,
    main_Grid_1_in_3,
    main_Grid_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node ShowConnections[1]: x = 213, y = 218, inputs = 1, label = ShowConnections
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Grid_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Color[2]: x = 224, y = 294, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "grey"
    //
main_Color_2_out_1 = 
    Color(
    main_ShowConnections_1_out_1,
    main_Color_2_in_2,
    main_Color_2_in_3,
    main_Color_2_in_4,
    main_Color_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Integer[1]: x = 500, y = 205, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_1"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 2
    // input[4]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 5
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[8]: defaulting = 1, visible = 0, type = 32, value = "5"
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 1, value = 2
    //
    // 
    // node Streakline[1]: x = 354, y = 296, inputs = 9, label = Streakline
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Streakline_1"
    //
main_Streakline_1_out_1 = 
    Streakline(
    main_Streakline_1_in_1,
    main_Receiver_1_out_1,
    main_Grid_1_out_1,
    main_Streakline_1_in_4,
    main_Streakline_1_in_5,
    main_Integer_1_out_1,
    main_Streakline_1_in_7,
    main_Streakline_1_in_8,
    main_Streakline_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Ribbon[1]: x = 382, y = 409, inputs = 2, label = Ribbon
    // input[2]: defaulting = 0, visible = 1, type = 5, value = 0.100000
    //
main_Ribbon_1_out_1 = 
    Ribbon(
    main_Streakline_1_out_1,
    main_Ribbon_1_in_2
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 163, y = 407, inputs = 3, label = Collect
    //
main_Collect_1_out_1 = 
    Collect(
    main_Color_1_out_1,
    main_Color_2_out_1,
    main_Ribbon_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[3]: x = 168, y = 491, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_3"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [4.5 4.51991 4.50619]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [-15.5119 16.7234 35.9866]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 21.0331
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 640
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.75
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0.146779 0.950165 -0.27503]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // depth: value = 24
    // window: position = (0.3656,0.2119), size = 0.5109x0.5117
    // internal caching: 1
    //
main_Image_3_out_1,
main_Image_3_out_2,
main_Image_3_out_3 = 
    Image(
    main_Image_3_in_1,
    main_Collect_1_out_1,
    main_Image_3_in_3,
    main_Image_3_in_4,
    main_Image_3_in_5,
    main_Image_3_in_6,
    main_Image_3_in_7,
    main_Image_3_in_8,
    main_Image_3_in_9,
    main_Image_3_in_10,
    main_Image_3_in_11,
    main_Image_3_in_12,
    main_Image_3_in_13,
    main_Image_3_in_14,
    main_Image_3_in_15,
    main_Image_3_in_16,
    main_Image_3_in_17,
    main_Image_3_in_18,
    main_Image_3_in_19,
    main_Image_3_in_20,
    main_Image_3_in_21,
    main_Image_3_in_22,
    main_Image_3_in_23,
    main_Image_3_in_24,
    main_Image_3_in_25,
    main_Image_3_in_26,
    main_Image_3_in_27,
    main_Image_3_in_28,
    main_Image_3_in_29,
    main_Image_3_in_30,
    main_Image_3_in_31,
    main_Image_3_in_32,
    main_Image_3_in_33,
    main_Image_3_in_34,
    main_Image_3_in_35,
    main_Image_3_in_36,
    main_Image_3_in_37,
    main_Image_3_in_38,
    main_Image_3_in_39,
    main_Image_3_in_40,
    main_Image_3_in_41,
    main_Image_3_in_42,
    main_Image_3_in_43,
    main_Image_3_in_44,
    main_Image_3_in_45,
    main_Image_3_in_46,
    main_Image_3_in_47,
    main_Image_3_in_48
    ) [instance: 3, cache: 1];
// network: end of macro body
CacheScene("Image_3", main_Image_3_out_1, main_Image_3_out_2);
}
main_Construct_1_in_1 = NULL;
main_Construct_1_in_2 = NULL;
main_Construct_1_in_3 = [10];
main_Construct_1_in_4 = {[1.0 0 0]};
main_Construct_1_out_1 = NULL;
main_Construct_2_in_1 = NULL;
main_Construct_2_in_2 = NULL;
main_Construct_2_in_3 = [10];
main_Construct_2_in_4 = {[1 0.1 0]};
main_Construct_2_out_1 = NULL;
main_Construct_3_in_1 = NULL;
main_Construct_3_in_2 = NULL;
main_Construct_3_in_3 = [10, 10, 10];
main_Construct_3_in_4 = {[1 -1.3 0]};
main_Construct_3_out_1 = NULL;
main_Construct_4_in_1 = NULL;
main_Construct_4_in_2 = NULL;
main_Construct_4_in_3 = [10];
main_Construct_4_in_4 = {[0.8 0.8 0.1]};
main_Construct_4_out_1 = NULL;
main_Construct_5_in_1 = NULL;
main_Construct_5_in_2 = NULL;
main_Construct_5_in_3 = [10];
main_Construct_5_in_4 = {[3.3 1 0.6]};
main_Construct_5_out_1 = NULL;
main_Construct_6_in_1 = NULL;
main_Construct_6_in_2 = NULL;
main_Construct_6_in_3 = [10];
main_Construct_6_in_4 = {[1.0 -5 0]};
main_Construct_6_out_1 = NULL;
main_CollectSeries_1_in_2 = 0.00000;
main_CollectSeries_1_in_4 = 0.500000;
main_CollectSeries_1_in_6 = 1.00000;
main_CollectSeries_1_in_8 = 1.80000;
main_CollectSeries_1_in_10 = 3.00000;
main_CollectSeries_1_in_12 = 6.00000;
main_CollectSeries_1_out_1 = NULL;
main_Replace_1_in_3 = "positions";
main_Replace_1_in_4 = NULL;
main_Replace_1_out_1 = NULL;
main_Compute_1_in_1 = "$0 + $1/8.";
main_Compute_1_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_ShowBox_2_out_1 = NULL;
main_Color_1_in_2 = "pink";
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Probe_1_out_1 = [0.600258, 5.29718, 5.65793];
main_Grid_1_in_2 = "rectangle";
main_Grid_1_in_3 = {[0, 0, 3], [0, 3, 0]};
main_Grid_1_in_4 = {7, 7};
main_Grid_1_out_1 = NULL;
main_ShowConnections_1_out_1 = NULL;
main_Color_2_in_2 = "grey";
main_Color_2_in_3 = NULL;
main_Color_2_in_4 = NULL;
main_Color_2_in_5 = NULL;
main_Color_2_out_1 = NULL;
main_Integer_1_in_1 = "Integer_1";
main_Integer_1_in_2 = NULL;
main_Integer_1_in_3 = 2;
main_Integer_1_in_4 = NULL;
main_Integer_1_in_5 = NULL;
main_Integer_1_in_6 = NULL;
main_Integer_1_in_7 = NULL;
main_Integer_1_in_8 = NULL;
main_Integer_1_in_9 = NULL;
main_Integer_1_in_10 = NULL;
main_Integer_1_in_11 = NULL;
main_Integer_1_out_1 = 2;
main_Streakline_1_in_1 = "Streakline_1";
main_Streakline_1_in_4 = NULL;
main_Streakline_1_in_5 = NULL;
main_Streakline_1_in_7 = NULL;
main_Streakline_1_in_8 = NULL;
main_Streakline_1_in_9 = NULL;
main_Streakline_1_out_1 = NULL;
main_Ribbon_1_in_2 = 0.100000;
main_Ribbon_1_out_1 = NULL;
main_Collect_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_3_in_1 = "Image_3";
main_Image_3_in_3 = "X24,,";
main_Image_3_in_4 = 1;
main_Image_3_in_5 = [4.5 4.51991 4.50619];
main_Image_3_in_6 = [-15.5119 16.7234 35.9866];
main_Image_3_in_7 = 21.0331;
main_Image_3_in_8 = 640;
main_Image_3_in_9 = 0.75;
main_Image_3_in_10 = [0.146779 0.950165 -0.27503];
main_Image_3_in_11 = NULL;
main_Image_3_in_12 = 0;
main_Image_3_in_13 = NULL;
main_Image_3_in_14 = 1;
main_Image_3_in_15 = NULL;
main_Image_3_in_16 = NULL;
main_Image_3_in_17 = NULL;
main_Image_3_in_18 = NULL;
main_Image_3_in_19 = 0;
main_Image_3_in_20 = NULL;
main_Image_3_in_21 = NULL;
main_Image_3_in_22 = NULL;
main_Image_3_in_23 = NULL;
main_Image_3_in_25 = NULL;
main_Image_3_in_26 = NULL;
main_Image_3_in_27 = NULL;
main_Image_3_in_28 = NULL;
main_Image_3_in_29 = NULL;
main_Image_3_in_30 = NULL;
main_Image_3_in_31 = NULL;
main_Image_3_in_32 = NULL;
main_Image_3_in_33 = NULL;
main_Image_3_in_34 = NULL;
main_Image_3_in_35 = NULL;
main_Image_3_in_36 = NULL;
main_Image_3_in_37 = NULL;
main_Image_3_in_38 = NULL;
main_Image_3_in_39 = NULL;
main_Image_3_in_40 = NULL;
main_Image_3_in_41 = NULL;
main_Image_3_in_42 = NULL;
main_Image_3_in_43 = NULL;
main_Image_3_in_44 = NULL;
main_Image_3_in_45 = NULL;
main_Image_3_in_46 = NULL;
main_Image_3_in_47 = NULL;
main_Image_3_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

//
// time: Wed Apr  9 15:46:41 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
//
// comment: This visual program shows how to use the Equalize and Histogram modules. Choose "Open All Control Panels" from the Windows menu. You can choose whether to see the original field or the equalized field.  The histogram of the field or the equalized field is also displayed in a separate window. You can choose how many bins to show in the histogram.
// comment: 
// comment: Equalization redistributes data values to approximate a particular distribution (by default, a uniform distribution, but you can choose other distributions, or pass in a desired histogram).  Thus it can be used to accentuate differences in data. Note that, of course, the data values in the equalized field will be different than in the original field.
// page assignment: import	order=2, windowed=0, showing=1
// page assignment: plot	order=4, windowed=0, showing=0
// page assignment: user_choice	order=3, windowed=0, showing=0
// page assignment: view	order=5, windowed=0, showing=0
// workspace: width = 560, height = 501
// layout: snap = 0, width = 50, height = 50, align = UL
//
macro main(
) -> (
) {
    // 
    // node Selector[5]: x = 20, y = 122, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_5"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "equalized field" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 2 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "original field" "equalized field" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 2 }
    // input[6]: defaulting = 1, visible = 0, type = 3, value = 0
    // output[1]: visible = 1, type = 29, value = 2 
    // output[2]: visible = 1, type = 32, value = "equalized field" 
    // page group: user_choice
    //
    // 
    // node Selector[6]: x = 69, y = 18, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_6"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "cloudwater" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 1 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "cloudwater" "temperature" "rainwater" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 0 0 }
    // input[6]: defaulting = 1, visible = 0, type = 3, value = 0
    // output[1]: visible = 1, type = 29, value = 1 
    // output[2]: visible = 1, type = 32, value = "cloudwater" 
    // page group: import
    //
    // 
    // node Format[5]: x = 116, y = 98, inputs = 2, label = Format
    // input[1]: defaulting = 0, visible = 1, type = 32, value = "%s"
    // page group: import
    //
main_Format_5_out_1 = 
    Format(
    main_Format_5_in_1,
    main_Selector_6_out_2
    ) [instance: 5, cache: 1];
    // 
    // node Import[7]: x = 127, y = 198, inputs = 6, label = Import
    // page group: import
    //
main_Import_7_out_1 = 
    Import(
    main_Format_5_out_1,
    main_Import_7_in_2,
    main_Import_7_in_3,
    main_Import_7_in_4,
    main_Import_7_in_5,
    main_Import_7_in_6
    ) [instance: 7, cache: 1];
    // 
    // node MapToPlane[3]: x = 140, y = 300, inputs = 3, label = MapToPlane
    // page group: import
    //
main_MapToPlane_3_out_1 = 
    MapToPlane(
    main_Import_7_out_1,
    main_MapToPlane_3_in_2,
    main_MapToPlane_3_in_3
    ) [instance: 3, cache: 1];
    // 
    // node Transmitter[1]: x = 179, y = 439, inputs = 1, label = data
    // page group: import
    //
data = main_MapToPlane_3_out_1;
    // 
    // node Receiver[1]: x = 167, y = 20, inputs = 1, label = data
    // page group: user_choice
    //
main_Receiver_1_out_1[cache: 0] = data;
    // 
    // node Equalize[1]: x = 212, y = 171, inputs = 6, label = Equalize
    // page group: user_choice
    //
main_Equalize_1_out_1 = 
    Equalize(
    main_Receiver_1_out_1,
    main_Equalize_1_in_2,
    main_Equalize_1_in_3,
    main_Equalize_1_in_4,
    main_Equalize_1_in_5,
    main_Equalize_1_in_6
    ) [instance: 1, cache: 1];
    // 
    // node Switch[9]: x = 140, y = 267, inputs = 3, label = Switch
    // page group: user_choice
    //
main_Switch_9_out_1 = 
    Switch(
    main_Selector_5_out_1,
    main_Receiver_1_out_1,
    main_Equalize_1_out_1
    ) [instance: 9, cache: 1];
    // 
    // node Transmitter[4]: x = 145, y = 434, inputs = 1, label = which_to_view
    // page group: user_choice
    //
which_to_view = main_Switch_9_out_1;
    // 
    // node Receiver[4]: x = 138, y = 20, inputs = 1, label = which_to_view
    // page group: plot
    //
main_Receiver_4_out_1[cache: 0] = which_to_view;
    // 
    // node Integer[2]: x = 267, y = 76, inputs = 11, label = Integer
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Integer_2"
    // input[3]: defaulting = 0, visible = 0, type = 1, value = 38 
    // input[4]: defaulting = 1, visible = 0, type = 1, value = 0
    // input[5]: defaulting = 1, visible = 0, type = 1, value = 10
    // input[6]: defaulting = 1, visible = 0, type = 1, value = 200
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.00000
    // input[8]: defaulting = 1, visible = 0, type = 32, value = "0"
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 0
    // output[1]: visible = 1, type = 1, value = 38 
    // page group: plot
    //
    // 
    // node Histogram[1]: x = 153, y = 126, inputs = 5, label = Histogram
    // page group: plot
    //
main_Histogram_1_out_1,
main_Histogram_1_out_2 = 
    Histogram(
    main_Receiver_4_out_1,
    main_Integer_2_out_1,
    main_Histogram_1_in_3,
    main_Histogram_1_in_4,
    main_Histogram_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node AutoColor[6]: x = 153, y = 250, inputs = 10, label = AutoColor
    // page group: plot
    //
main_AutoColor_6_out_1,
main_AutoColor_6_out_2 = 
    AutoColor(
    main_Histogram_1_out_1,
    main_AutoColor_6_in_2,
    main_AutoColor_6_in_3,
    main_AutoColor_6_in_4,
    main_AutoColor_6_in_5,
    main_AutoColor_6_in_6,
    main_AutoColor_6_in_7,
    main_AutoColor_6_in_8,
    main_AutoColor_6_in_9,
    main_AutoColor_6_in_10
    ) [instance: 6, cache: 1];
    // 
    // node Transmitter[2]: x = 49, y = 435, inputs = 1, label = data_name
    // page group: import
    //
data_name = main_Selector_6_out_2;
    // 
    // node Receiver[2]: x = 27, y = 132, inputs = 1, label = data_name
    // page group: plot
    //
main_Receiver_2_out_1[cache: 0] = data_name;
    // 
    // node List[2]: x = 66, y = 277, inputs = 2, label = List
    // input[2]: defaulting = 0, visible = 1, type = 16777248, value = {"number of data values"}
    // page group: plot
    //
main_List_2_out_1 = 
    List(
    main_Receiver_2_out_1,
    main_List_2_in_2
    ) [instance: 2, cache: 1];
    // 
    // node Plot[3]: x = 128, y = 356, inputs = 24, label = Plot
    // input[9]: defaulting = 0, visible = 1, type = 5, value = 1.00000
    // page group: plot
    //
main_Plot_3_out_1 = 
    Plot(
    main_AutoColor_6_out_1,
    main_List_2_out_1,
    main_Plot_3_in_3,
    main_Plot_3_in_4,
    main_Plot_3_in_5,
    main_Plot_3_in_6,
    main_Plot_3_in_7,
    main_Plot_3_in_8,
    main_Plot_3_in_9,
    main_Plot_3_in_10,
    main_Plot_3_in_11,
    main_Plot_3_in_12,
    main_Plot_3_in_13,
    main_Plot_3_in_14,
    main_Plot_3_in_15,
    main_Plot_3_in_16,
    main_Plot_3_in_17,
    main_Plot_3_in_18,
    main_Plot_3_in_19,
    main_Plot_3_in_20,
    main_Plot_3_in_21,
    main_Plot_3_in_22,
    main_Plot_3_in_23,
    main_Plot_3_in_24
    ) [instance: 3, cache: 1];
    // 
    // node AutoCamera[3]: x = 329, y = 417, inputs = 9, label = AutoCamera
    // input[4]: defaulting = 0, visible = 1, type = 1, value = 400
    // page group: plot
    //
main_AutoCamera_3_out_1 = 
    AutoCamera(
    main_Plot_3_out_1,
    main_AutoCamera_3_in_2,
    main_AutoCamera_3_in_3,
    main_AutoCamera_3_in_4,
    main_AutoCamera_3_in_5,
    main_AutoCamera_3_in_6,
    main_AutoCamera_3_in_7,
    main_AutoCamera_3_in_8,
    main_AutoCamera_3_in_9
    ) [instance: 3, cache: 1];
    // 
    // node Receiver[5]: x = 82, y = 66, inputs = 1, label = which_to_view
    // page group: view
    //
main_Receiver_5_out_1[cache: 0] = which_to_view;
    // 
    // node AutoColor[7]: x = 64, y = 230, inputs = 10, label = AutoColor
    // page group: view
    //
main_AutoColor_7_out_1,
main_AutoColor_7_out_2 = 
    AutoColor(
    main_Receiver_5_out_1,
    main_AutoColor_7_in_2,
    main_AutoColor_7_in_3,
    main_AutoColor_7_in_4,
    main_AutoColor_7_in_5,
    main_AutoColor_7_in_6,
    main_AutoColor_7_in_7,
    main_AutoColor_7_in_8,
    main_AutoColor_7_in_9,
    main_AutoColor_7_in_10
    ) [instance: 7, cache: 1];
    // 
    // node Transmitter[3]: x = 36, y = 428, inputs = 1, label = choice_name
    // page group: user_choice
    //
choice_name = main_Selector_5_out_2;
    // 
    // node Receiver[3]: x = 195, y = 181, inputs = 1, label = choice_name
    // page group: view
    //
main_Receiver_3_out_1[cache: 0] = choice_name;
    // 
    // node Caption[11]: x = 188, y = 275, inputs = 9, label = Caption
    // page group: view
    //
main_Caption_11_out_1 = 
    Caption(
    main_Receiver_3_out_1,
    main_Caption_11_in_2,
    main_Caption_11_in_3,
    main_Caption_11_in_4,
    main_Caption_11_in_5,
    main_Caption_11_in_6,
    main_Caption_11_in_7,
    main_Caption_11_in_8,
    main_Caption_11_in_9
    ) [instance: 11, cache: 1];
    // 
    // node Collect[11]: x = 75, y = 349, inputs = 2, label = Collect
    // page group: view
    //
main_Collect_11_out_1 = 
    Collect(
    main_AutoColor_7_out_1,
    main_Caption_11_out_1
    ) [instance: 11, cache: 1];
    // 
    // node Display[3]: x = 174, y = 452, inputs = 4, label = Display
    // page group: plot
    // depth: value = 24
    // window: position = (0.2125,0.0586), size = 0.3234x0.3613
    //
main_Display_3_out_1[cache: 2] = 
    Display(
    main_Plot_3_out_1,
    main_AutoCamera_3_out_1,
    main_Display_3_in_3,
    main_Display_3_in_4
    ) [instance: 3, cache: 1];
    // 
    // node Image[11]: x = 64, y = 439, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_11"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [50000 7750 27000]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [50000 7750 281291]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 136275.0
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 583
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.488
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [0 1 0]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0002
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 1, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[29]: defaulting = 1, visible = 0, type = 3, value = 0
    // page group: view
    // depth: value = 24
    // window: position = (0.3680,0.4697), size = 0.4664x0.3203
    // internal caching: 1
    //
main_Image_11_out_1,
main_Image_11_out_2,
main_Image_11_out_3 = 
    Image(
    main_Image_11_in_1,
    main_Collect_11_out_1,
    main_Image_11_in_3,
    main_Image_11_in_4,
    main_Image_11_in_5,
    main_Image_11_in_6,
    main_Image_11_in_7,
    main_Image_11_in_8,
    main_Image_11_in_9,
    main_Image_11_in_10,
    main_Image_11_in_11,
    main_Image_11_in_12,
    main_Image_11_in_13,
    main_Image_11_in_14,
    main_Image_11_in_15,
    main_Image_11_in_16,
    main_Image_11_in_17,
    main_Image_11_in_18,
    main_Image_11_in_19,
    main_Image_11_in_20,
    main_Image_11_in_21,
    main_Image_11_in_22,
    main_Image_11_in_23,
    main_Image_11_in_24,
    main_Image_11_in_25,
    main_Image_11_in_26,
    main_Image_11_in_27,
    main_Image_11_in_28,
    main_Image_11_in_29,
    main_Image_11_in_30,
    main_Image_11_in_31,
    main_Image_11_in_32,
    main_Image_11_in_33,
    main_Image_11_in_34,
    main_Image_11_in_35,
    main_Image_11_in_36,
    main_Image_11_in_37,
    main_Image_11_in_38,
    main_Image_11_in_39,
    main_Image_11_in_40,
    main_Image_11_in_41,
    main_Image_11_in_42,
    main_Image_11_in_43,
    main_Image_11_in_44,
    main_Image_11_in_45,
    main_Image_11_in_46,
    main_Image_11_in_47,
    main_Image_11_in_48
    ) [instance: 11, cache: 1];
    //
    // decorator Annotate	pos=(191,54) size=369x44 style(Label), value = <NULL>
    // annotation user_begin: 76
    // annotation user: This page imports the data and runs a cutting plane
    // annotation user: (MapToPlane) through it.
    // annotation user_end: <NULL>
    // page group: import
    //
    // decorator Annotate	pos=(226,57) size=401x44 style(Label), value = <NULL>
    // annotation user_begin: 89
    // annotation user: This page allows the user to choose whether to view the 
    // annotation user: equalized, or the original, data
    // annotation user_end: <NULL>
    // page group: user_choice
    //
    // decorator Annotate	pos=(261,195) size=316x44 style(Label), value = <NULL>
    // annotation user_begin: 69
    // annotation user: This page makes a plot of a histogram of the
    // annotation user: user-chosen data to view
    // annotation user_end: <NULL>
    // page group: plot
    //
    // decorator Annotate	pos=(223,103) size=382x28 style(Label), value = <NULL>
    // annotation user_begin: 53
    // annotation user: This page autocolors the chosen data and displays it.
    // annotation user_end: <NULL>
    // page group: view
// network: end of macro body
CacheScene("Image_11", main_Image_11_out_1, main_Image_11_out_2);
}
main_Selector_5_in_1 = "Selector_5";
main_Selector_5_in_2 = "equalized field" ;
main_Selector_5_in_3 = 2 ;
main_Selector_5_in_4 = NULL;
main_Selector_5_in_5 = NULL;
main_Selector_5_in_6 = NULL;
main_Selector_5_in_7 = NULL;
main_Selector_5_out_1 = 2 ;
main_Selector_5_out_2 = "equalized field" ;
main_Selector_6_in_1 = "Selector_6";
main_Selector_6_in_2 = "cloudwater" ;
main_Selector_6_in_3 = 1 ;
main_Selector_6_in_4 = NULL;
main_Selector_6_in_5 = NULL;
main_Selector_6_in_6 = NULL;
main_Selector_6_in_7 = NULL;
main_Selector_6_out_2 = "cloudwater" ;
main_Format_5_in_1 = "%s";
main_Format_5_out_1 = NULL;
main_Import_7_in_2 = NULL;
main_Import_7_in_3 = NULL;
main_Import_7_in_4 = NULL;
main_Import_7_in_5 = NULL;
main_Import_7_in_6 = NULL;
main_Import_7_out_1 = NULL;
main_MapToPlane_3_in_2 = NULL;
main_MapToPlane_3_in_3 = NULL;
main_MapToPlane_3_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_1_out_1 = NULL;
main_Equalize_1_in_2 = NULL;
main_Equalize_1_in_3 = NULL;
main_Equalize_1_in_4 = NULL;
main_Equalize_1_in_5 = NULL;
main_Equalize_1_in_6 = NULL;
main_Equalize_1_out_1 = NULL;
main_Switch_9_out_1 = NULL;
main_Transmitter_4_out_1 = NULL;
main_Receiver_4_out_1 = NULL;
main_Integer_2_in_1 = "Integer_2";
main_Integer_2_in_2 = NULL;
main_Integer_2_in_3 = 38 ;
main_Integer_2_in_4 = NULL;
main_Integer_2_in_5 = NULL;
main_Integer_2_in_6 = NULL;
main_Integer_2_in_7 = NULL;
main_Integer_2_in_8 = NULL;
main_Integer_2_in_9 = NULL;
main_Integer_2_in_10 = NULL;
main_Integer_2_in_11 = NULL;
main_Integer_2_out_1 = 38 ;
main_Histogram_1_in_3 = NULL;
main_Histogram_1_in_4 = NULL;
main_Histogram_1_in_5 = NULL;
main_Histogram_1_out_1 = NULL;
main_AutoColor_6_in_2 = NULL;
main_AutoColor_6_in_3 = NULL;
main_AutoColor_6_in_4 = NULL;
main_AutoColor_6_in_5 = NULL;
main_AutoColor_6_in_6 = NULL;
main_AutoColor_6_in_7 = NULL;
main_AutoColor_6_in_8 = NULL;
main_AutoColor_6_in_9 = NULL;
main_AutoColor_6_in_10 = NULL;
main_AutoColor_6_out_1 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_List_2_in_2 = {"number of data values"};
main_List_2_out_1 = NULL;
main_Plot_3_in_3 = NULL;
main_Plot_3_in_4 = NULL;
main_Plot_3_in_5 = NULL;
main_Plot_3_in_6 = NULL;
main_Plot_3_in_7 = NULL;
main_Plot_3_in_8 = NULL;
main_Plot_3_in_9 = 1.00000;
main_Plot_3_in_10 = NULL;
main_Plot_3_in_11 = NULL;
main_Plot_3_in_12 = NULL;
main_Plot_3_in_13 = NULL;
main_Plot_3_in_14 = NULL;
main_Plot_3_in_15 = NULL;
main_Plot_3_in_16 = NULL;
main_Plot_3_in_17 = NULL;
main_Plot_3_in_18 = NULL;
main_Plot_3_in_19 = NULL;
main_Plot_3_in_20 = NULL;
main_Plot_3_in_21 = NULL;
main_Plot_3_in_22 = NULL;
main_Plot_3_in_23 = NULL;
main_Plot_3_in_24 = NULL;
main_Plot_3_out_1 = NULL;
main_AutoCamera_3_in_2 = NULL;
main_AutoCamera_3_in_3 = NULL;
main_AutoCamera_3_in_4 = 400;
main_AutoCamera_3_in_5 = NULL;
main_AutoCamera_3_in_6 = NULL;
main_AutoCamera_3_in_7 = NULL;
main_AutoCamera_3_in_8 = NULL;
main_AutoCamera_3_in_9 = NULL;
main_AutoCamera_3_out_1 = NULL;
main_Receiver_5_out_1 = NULL;
main_AutoColor_7_in_2 = NULL;
main_AutoColor_7_in_3 = NULL;
main_AutoColor_7_in_4 = NULL;
main_AutoColor_7_in_5 = NULL;
main_AutoColor_7_in_6 = NULL;
main_AutoColor_7_in_7 = NULL;
main_AutoColor_7_in_8 = NULL;
main_AutoColor_7_in_9 = NULL;
main_AutoColor_7_in_10 = NULL;
main_AutoColor_7_out_1 = NULL;
main_Transmitter_3_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Caption_11_in_2 = NULL;
main_Caption_11_in_3 = NULL;
main_Caption_11_in_4 = NULL;
main_Caption_11_in_5 = NULL;
main_Caption_11_in_6 = NULL;
main_Caption_11_in_7 = NULL;
main_Caption_11_in_8 = NULL;
main_Caption_11_in_9 = NULL;
main_Caption_11_out_1 = NULL;
main_Collect_11_out_1 = NULL;
main_Display_3_in_3 = "X24,,";
main_Display_3_in_4 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_11_in_1 = "Image_11";
main_Image_11_in_3 = "X24,,";
main_Image_11_in_4 = 1;
main_Image_11_in_5 = [50000 7750 27000];
main_Image_11_in_6 = [50000 7750 281291];
main_Image_11_in_7 = 136275.0;
main_Image_11_in_8 = 583;
main_Image_11_in_9 = 0.488;
main_Image_11_in_10 = [0 1 0];
main_Image_11_in_11 = NULL;
main_Image_11_in_12 = 0;
main_Image_11_in_13 = NULL;
main_Image_11_in_14 = 1;
main_Image_11_in_15 = NULL;
main_Image_11_in_16 = NULL;
main_Image_11_in_17 = NULL;
main_Image_11_in_18 = NULL;
main_Image_11_in_19 = 0;
main_Image_11_in_20 = NULL;
main_Image_11_in_21 = NULL;
main_Image_11_in_22 = NULL;
main_Image_11_in_23 = NULL;
main_Image_11_in_25 = NULL;
main_Image_11_in_26 = NULL;
main_Image_11_in_27 = NULL;
main_Image_11_in_28 = NULL;
main_Image_11_in_29 = NULL;
main_Image_11_in_30 = NULL;
main_Image_11_in_31 = NULL;
main_Image_11_in_32 = NULL;
main_Image_11_in_33 = NULL;
main_Image_11_in_34 = NULL;
main_Image_11_in_35 = NULL;
main_Image_11_in_36 = NULL;
main_Image_11_in_37 = NULL;
main_Image_11_in_38 = NULL;
main_Image_11_in_39 = NULL;
main_Image_11_in_40 = NULL;
main_Image_11_in_41 = NULL;
main_Image_11_in_42 = NULL;
main_Image_11_in_43 = NULL;
main_Image_11_in_44 = NULL;
main_Image_11_in_45 = NULL;
main_Image_11_in_46 = NULL;
main_Image_11_in_47 = NULL;
main_Image_11_in_48 = NULL;
Executive("product version 3 1 4");
$sync
main();

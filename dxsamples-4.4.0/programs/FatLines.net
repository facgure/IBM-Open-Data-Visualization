//
// time: Wed Apr  9 15:33:35 1997
//
// version: 3.1.1 (format), 3.1.4 (DX Beta)
//
//
// MODULE main
//
// comment: in this visual program, a hardware rendered image
// comment: can be antialiased or use multiple-pixel-width lines.
// comment: 
// comment: Note that to run this visual program, you must be
// comment: able to run either OpenGL or GL on your workstation.
// page assignment: antialias	order=3, windowed=0, showing=0
// page assignment: make_object	order=2, windowed=0, showing=1
// page assignment: standard	order=4, windowed=0, showing=0
// workspace: width = 597, height = 491
// layout: snap = 0, width = 50, height = 50, align = NN
//
macro main(
) -> (
) {
    // 
    // node Caption[1]: x = 20, y = 114, inputs = 9, label = Caption
    // input[1]: defaulting = 0, visible = 1, type = 16777248, value = {"You can antialias fonts""or set the line width to multiple""pixels"}
    // input[6]: defaulting = 0, visible = 0, type = 1, value = 25
    // page group: make_object
    //
main_Caption_1_out_1 = 
    Caption(
    main_Caption_1_in_1,
    main_Caption_1_in_2,
    main_Caption_1_in_3,
    main_Caption_1_in_4,
    main_Caption_1_in_5,
    main_Caption_1_in_6,
    main_Caption_1_in_7,
    main_Caption_1_in_8,
    main_Caption_1_in_9
    ) [instance: 1, cache: 1];
    // 
    // node Construct[1]: x = 150, y = 39, inputs = 4, label = Construct
    // input[1]: defaulting = 0, visible = 1, type = 16777224, value = {[0 0 0]}
    // input[2]: defaulting = 0, visible = 1, type = 16777224, value = {[10 10 10]}
    // input[3]: defaulting = 0, visible = 1, type = 1, value = 5
    // page group: make_object
    //
main_Construct_1_out_1 = 
    Construct(
    main_Construct_1_in_1,
    main_Construct_1_in_2,
    main_Construct_1_in_3,
    main_Construct_1_in_4
    ) [instance: 1, cache: 1];
    // 
    // node ShowConnections[1]: x = 154, y = 128, inputs = 1, label = ShowConnections
    // page group: make_object
    //
main_ShowConnections_1_out_1 = 
    ShowConnections(
    main_Construct_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Color[1]: x = 169, y = 208, inputs = 5, label = Color
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "green"
    // input[3]: defaulting = 1, visible = 1, type = 5, value = .5
    // page group: make_object
    //
main_Color_1_out_1 = 
    Color(
    main_ShowConnections_1_out_1,
    main_Color_1_in_2,
    main_Color_1_in_3,
    main_Color_1_in_4,
    main_Color_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Collect[1]: x = 101, y = 315, inputs = 2, label = Collect
    // page group: make_object
    //
main_Collect_1_out_1 = 
    Collect(
    main_Caption_1_out_1,
    main_Color_1_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[1]: x = 107, y = 429, inputs = 1, label = object
    // page group: make_object
    //
object = main_Collect_1_out_1;
    // 
    // node Receiver[2]: x = 83, y = 79, inputs = 1, label = object
    // page group: standard
    //
main_Receiver_2_out_1[cache: 0] = object;
    // 
    // node Options[3]: x = 58, y = 219, inputs = 5, label = Options
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "rendering mode"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "hardware"
    // page group: standard
    //
main_Options_3_out_1 = 
    Options(
    main_Receiver_2_out_1,
    main_Options_3_in_2,
    main_Options_3_in_3,
    main_Options_3_in_4,
    main_Options_3_in_5
    ) [instance: 3, cache: 1];
    // 
    // node Selector[1]: x = 29, y = 237, inputs = 7, label = Selector
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Selector_1"
    // input[2]: defaulting = 0, visible = 0, type = 32, value = "set line width" 
    // input[3]: defaulting = 0, visible = 0, type = 29, value = 2 
    // input[4]: defaulting = 1, visible = 1, type = 16777248, value = { "anti-alias" "set line width" }
    // input[5]: defaulting = 1, visible = 0, type = 16777245, value = { 1 2 }
    // output[1]: visible = 1, type = 29, value = 2 
    // output[2]: visible = 1, type = 32, value = "set line width" 
    // page group: antialias
    //
    // 
    // node Receiver[1]: x = 20, y = 20, inputs = 1, label = object
    // page group: antialias
    //
main_Receiver_1_out_1[cache: 0] = object;
    // 
    // node Options[1]: x = 21, y = 137, inputs = 5, label = Options
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "antialias"
    // input[3]: defaulting = 0, visible = 1, type = 32, value = "lines"
    // input[4]: defaulting = 1, visible = 1, type = 32, value = "antialias"
    // input[5]: defaulting = 1, visible = 1, type = 32, value = "lines"
    // page group: antialias
    //
main_Options_1_out_1 = 
    Options(
    main_Receiver_1_out_1,
    main_Options_1_in_2,
    main_Options_1_in_3,
    main_Options_1_in_4,
    main_Options_1_in_5
    ) [instance: 1, cache: 1];
    // 
    // node Scalar[1]: x = 392, y = 32, inputs = 11, label = Scalar
    // input[1]: defaulting = 0, visible = 0, type = 32, value = "Scalar_1"
    // input[3]: defaulting = 0, visible = 0, type = 5, value = 2.0 
    // input[5]: defaulting = 1, visible = 0, type = 5, value = -1000000.0
    // input[6]: defaulting = 1, visible = 0, type = 5, value = 1000000.0
    // input[7]: defaulting = 1, visible = 0, type = 5, value = 1.0
    // input[9]: defaulting = 1, visible = 0, type = 1, value = 5
    // output[1]: visible = 1, type = 5, value = 2.0 
    // page group: antialias
    //
    // 
    // node Options[2]: x = 340, y = 133, inputs = 5, label = Options
    // input[2]: defaulting = 0, visible = 1, type = 32, value = "line width"
    // page group: antialias
    //
main_Options_2_out_1 = 
    Options(
    main_Receiver_1_out_1,
    main_Options_2_in_2,
    main_Scalar_1_out_1,
    main_Options_2_in_4,
    main_Options_2_in_5
    ) [instance: 2, cache: 1];
    // 
    // node Switch[1]: x = 134, y = 274, inputs = 3, label = Switch
    // page group: antialias
    //
main_Switch_1_out_1 = 
    Switch(
    main_Selector_1_out_1,
    main_Options_1_out_1,
    main_Options_2_out_1
    ) [instance: 1, cache: 1];
    // 
    // node Image[1]: x = 132, y = 375, inputs = 48, label = Image
    // input[1]: defaulting = 0, visible = 0, type = 67108863, value = "Image_1"
    // input[4]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[5]: defaulting = 0, visible = 0, type = 8, value = [23.363 23.363 23.363]
    // input[6]: defaulting = 0, visible = 0, type = 8, value = [203.26 63.0151 116.9]
    // input[7]: defaulting = 0, visible = 0, type = 5, value = 110.718
    // input[8]: defaulting = 0, visible = 0, type = 1, value = 424
    // input[9]: defaulting = 0, visible = 0, type = 5, value = 0.961085
    // input[10]: defaulting = 0, visible = 0, type = 8, value = [-0.137897 0.979049 -0.149825]
    // input[11]: defaulting = 1, visible = 0, type = 5, value = 30.0001
    // input[12]: defaulting = 0, visible = 0, type = 1, value = 0
    // input[14]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[15]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[16]: defaulting = 1, visible = 0, type = 32, value = "none"
    // input[17]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[18]: defaulting = 0, visible = 0, type = 1, value = 1
    // input[19]: defaulting = 0, visible = 0, type = 3, value = 1
    // input[29]: defaulting = 0, visible = 0, type = 3, value = 0
    // input[30]: defaulting = 0, visible = 0, type = 16777248, value = {"x axis", "y axis", "z axis"}
    // input[41]: defaulting = 0, visible = 0, type = 32, value = "none"
    // page group: antialias
    // depth: value = 24
    // window: position = (0.0117,0.2939), size = 0.3422x0.4404
    // internal caching: 1
    //
main_Image_1_out_1,
main_Image_1_out_2,
main_Image_1_out_3 = 
    Image(
    main_Image_1_in_1,
    main_Switch_1_out_1,
    main_Image_1_in_3,
    main_Image_1_in_4,
    main_Image_1_in_5,
    main_Image_1_in_6,
    main_Image_1_in_7,
    main_Image_1_in_8,
    main_Image_1_in_9,
    main_Image_1_in_10,
    main_Image_1_in_11,
    main_Image_1_in_12,
    main_Image_1_in_13,
    main_Image_1_in_14,
    main_Image_1_in_15,
    main_Image_1_in_16,
    main_Image_1_in_17,
    main_Image_1_in_18,
    main_Image_1_in_19,
    main_Image_1_in_20,
    main_Image_1_in_21,
    main_Image_1_in_22,
    main_Image_1_in_23,
    main_Image_1_in_24,
    main_Image_1_in_25,
    main_Image_1_in_26,
    main_Image_1_in_27,
    main_Image_1_in_28,
    main_Image_1_in_29,
    main_Image_1_in_30,
    main_Image_1_in_31,
    main_Image_1_in_32,
    main_Image_1_in_33,
    main_Image_1_in_34,
    main_Image_1_in_35,
    main_Image_1_in_36,
    main_Image_1_in_37,
    main_Image_1_in_38,
    main_Image_1_in_39,
    main_Image_1_in_40,
    main_Image_1_in_41,
    main_Image_1_in_42,
    main_Image_1_in_43,
    main_Image_1_in_44,
    main_Image_1_in_45,
    main_Image_1_in_46,
    main_Image_1_in_47,
    main_Image_1_in_48
    ) [instance: 1, cache: 1];
    // 
    // node Transmitter[2]: x = 136, y = 501, inputs = 1, label = camera
    // page group: antialias
    //
camera = main_Image_1_out_2;
    // 
    // node Receiver[3]: x = 171, y = 375, inputs = 1, label = camera
    // page group: standard
    //
main_Receiver_3_out_1[cache: 0] = camera;
    // 
    // node Display[1]: x = 88, y = 419, inputs = 8, label = Display
    // page group: standard
    // depth: value = 24
    // window: position = (0.3719,0.2998), size = 0.3422x0.4404
    //
main_Display_1_out_1[cache: 2] = 
    Display(
    main_Options_3_out_1,
    main_Receiver_3_out_1,
    main_Display_1_in_3,
    main_Display_1_in_4,
    main_Display_1_in_5,
    main_Display_1_in_6,
    main_Display_1_in_7,
    main_Display_1_in_8
    ) [instance: 1, cache: 1];
    //
    // decorator Annotate	pos=(334,98) size=263x28 style(Label), value = <NULL>
    // annotation user_begin: 35
    // annotation user: This page makes an object to render
    // annotation user_end: <NULL>
    // page group: make_object
    //
    // decorator Annotate	pos=(221,318) size=379x44 style(Label), value = <NULL>
    // annotation user_begin: 77
    // annotation user: The user can choose to see either antialiased or "fat"
    // annotation user: (multiple pixel) lines
    // annotation user_end: <NULL>
    // page group: antialias
    //
    // decorator Annotate	pos=(148,150) size=70x28 style(Label), value = <NULL>
    // annotation user_begin: 9
    // annotation user: antialias
    // annotation user_end: <NULL>
    // page group: antialias
    //
    // decorator Annotate	pos=(470,139) size=149x44 style(Label), value = <NULL>
    // annotation user_begin: 26
    // annotation user: multiple pixel-width
    // annotation user: lines
    // annotation user_end: <NULL>
    // page group: antialias
    //
    // decorator Annotate	pos=(194,66) size=393x28 style(Label), value = <NULL>
    // annotation user_begin: 56
    // annotation user: The standard (non anti-aliased, single pixel width) view
    // annotation user_end: <NULL>
    // page group: standard
    //
    // decorator Annotate	pos=(186,236) size=203x28 style(Label), value = <NULL>
    // annotation user_begin: 26
    // annotation user: turn hardware rendering on
    // annotation user_end: <NULL>
    // page group: standard
// network: end of macro body
CacheScene("Image_1", main_Image_1_out_1, main_Image_1_out_2);
}
main_Caption_1_in_1 = {"You can antialias fonts""or set the line width to multiple""pixels"};
main_Caption_1_in_2 = NULL;
main_Caption_1_in_3 = NULL;
main_Caption_1_in_4 = NULL;
main_Caption_1_in_5 = NULL;
main_Caption_1_in_6 = 25;
main_Caption_1_in_7 = NULL;
main_Caption_1_in_8 = NULL;
main_Caption_1_in_9 = NULL;
main_Caption_1_out_1 = NULL;
main_Construct_1_in_1 = {[0 0 0]};
main_Construct_1_in_2 = {[10 10 10]};
main_Construct_1_in_3 = 5;
main_Construct_1_in_4 = NULL;
main_Construct_1_out_1 = NULL;
main_ShowConnections_1_out_1 = NULL;
main_Color_1_in_2 = "green";
main_Color_1_in_3 = NULL;
main_Color_1_in_4 = NULL;
main_Color_1_in_5 = NULL;
main_Color_1_out_1 = NULL;
main_Collect_1_out_1 = NULL;
main_Transmitter_1_out_1 = NULL;
main_Receiver_2_out_1 = NULL;
main_Options_3_in_2 = "rendering mode";
main_Options_3_in_3 = "hardware";
main_Options_3_in_4 = NULL;
main_Options_3_in_5 = NULL;
main_Options_3_out_1 = NULL;
main_Selector_1_in_1 = "Selector_1";
main_Selector_1_in_2 = "set line width" ;
main_Selector_1_in_3 = 2 ;
main_Selector_1_in_4 = NULL;
main_Selector_1_in_5 = NULL;
main_Selector_1_in_6 = NULL;
main_Selector_1_in_7 = NULL;
main_Selector_1_out_1 = 2 ;
main_Receiver_1_out_1 = NULL;
main_Options_1_in_2 = "antialias";
main_Options_1_in_3 = "lines";
main_Options_1_in_4 = NULL;
main_Options_1_in_5 = NULL;
main_Options_1_out_1 = NULL;
main_Scalar_1_in_1 = "Scalar_1";
main_Scalar_1_in_2 = NULL;
main_Scalar_1_in_3 = 2.0 ;
main_Scalar_1_in_4 = NULL;
main_Scalar_1_in_5 = NULL;
main_Scalar_1_in_6 = NULL;
main_Scalar_1_in_7 = NULL;
main_Scalar_1_in_8 = NULL;
main_Scalar_1_in_9 = NULL;
main_Scalar_1_in_10 = NULL;
main_Scalar_1_in_11 = NULL;
main_Scalar_1_out_1 = 2.0 ;
main_Options_2_in_2 = "line width";
main_Options_2_in_4 = NULL;
main_Options_2_in_5 = NULL;
main_Options_2_out_1 = NULL;
main_Switch_1_out_1 = NULL;
macro Image(
        id,
        object,
        where,
        useVector,
        to,
        from,
        width,
        resolution,
        aspect,
        up,
        viewAngle,
        perspective,
        options,
        buttonState = 1,
        buttonUpApprox = "none",
        buttonDownApprox = "none",
        buttonUpDensity = 1,
        buttonDownDensity = 1,
        renderMode = 0,
        defaultCamera,
        reset,
        backgroundColor,
        throttle,
        RECenable = 0,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable = 0,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        interactionMode,
        title,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels) -> (
        object,
        camera,
        where)
{
    ImageMessage(
        id,
        backgroundColor,
        throttle,
        RECenable,
        RECfile,
        RECformat,
        RECresolution,
        RECaspect,
        AAenable,
        AAlabels,
        AAticks,
        AAcorners,
        AAframe,
        AAadjust,
        AAcursor,
        AAgrid,
        AAcolors,
        AAannotation,
        AAlabelscale,
        AAfont,
        AAxTickLocs,
        AAyTickLocs,
        AAzTickLocs,
        AAxTickLabels,
        AAyTickLabels,
        AAzTickLabels,
        interactionMode,
        title,
        renderMode,
        buttonUpApprox,
        buttonDownApprox,
        buttonUpDensity,
        buttonDownDensity) [instance: 1, cache: 1];
    autoCamera =
        AutoCamera(
            object,
            "front",
            object,
            resolution,
            aspect,
            [0,1,0],
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    realCamera =
        Camera(
            to,
            from,
            width,
            resolution,
            aspect,
            up,
            perspective,
            viewAngle,
            backgroundColor) [instance: 1, cache: 1];
    coloredDefaultCamera = 
	 UpdateCamera(defaultCamera,
            background=backgroundColor) [instance: 1, cache: 1];
    nullDefaultCamera =
        Inquire(defaultCamera,
            "is null + 1") [instance: 1, cache: 1];
    resetCamera =
        Switch(
            nullDefaultCamera,
            coloredDefaultCamera,
            autoCamera) [instance: 1, cache: 1];
    resetNull = 
        Inquire(
            reset,
            "is null + 1") [instance: 2, cache: 1];
    reset =
        Switch(
            resetNull,
            reset,
            0) [instance: 2, cache: 1];
    whichCamera =
        Compute(
            "($0 != 0 || $1 == 0) ? 1 : 2",
            reset,
            useVector) [instance: 1, cache: 1];
    camera = Switch(
            whichCamera,
            resetCamera,
            realCamera) [instance: 3, cache: 1];
    AAobject =
        AutoAxes(
            object,
            camera,
            AAlabels,
            AAticks,
            AAcorners,
            AAframe,
            AAadjust,
            AAcursor,
            AAgrid,
            AAcolors,
            AAannotation,
            AAlabelscale,
            AAfont,
            AAxTickLocs,
            AAyTickLocs,
            AAzTickLocs,
            AAxTickLabels,
            AAyTickLabels,
            AAzTickLabels) [instance: 1, cache: 1];
    switchAAenable = Compute("$0+1",
	     AAenable) [instance: 2, cache: 1];
    object = Switch(
	     switchAAenable,
	     object,
	     AAobject) [instance:4, cache: 1];
    SWapproximation_options =
        Switch(
            buttonState,
            buttonUpApprox,
            buttonDownApprox) [instance: 5, cache: 1];
    SWdensity_options =
        Switch(
            buttonState,
            buttonUpDensity,
            buttonDownDensity) [instance: 6, cache: 1];
    HWapproximation_options =
        Format(
            "%s,%s",
            buttonDownApprox,
            buttonUpApprox) [instance: 1, cache: 1];
    HWdensity_options =
        Format(
            "%d,%d",
            buttonDownDensity,
            buttonUpDensity) [instance: 2, cache: 1];
    switchRenderMode = Compute(
	     "$0+1",
	     renderMode) [instance: 3, cache: 1];
    approximation_options = Switch(
	     switchRenderMode,
            SWapproximation_options,
	     HWapproximation_options) [instance: 7, cache: 1];
    density_options = Switch(
	     switchRenderMode,
            SWdensity_options,
            HWdensity_options) [instance: 8, cache: 1];
    renderModeString = Switch(
            switchRenderMode,
            "software",
            "hardware")[instance: 9, cache: 1];
    object_tag = Inquire(
            object,
            "object tag")[instance: 3, cache: 1];
    annoted_object =
        Options(
            object,
            "send boxes",
            0,
            "cache",
            1,
            "object tag",
            object_tag,
            "ddcamera",
            whichCamera,
            "rendering approximation",
            approximation_options,
            "render every",
            density_options,
            "button state",
            buttonState,
            "rendering mode",
            renderModeString) [instance: 1, cache: 1];
    RECresNull =
        Inquire(
            RECresolution,
            "is null + 1") [instance: 4, cache: 1];
    ImageResolution =
        Inquire(
            camera,
            "camera resolution") [instance: 5, cache: 1];
    RECresolution =
        Switch(
            RECresNull,
            RECresolution,
            ImageResolution) [instance: 10, cache: 1];
    RECaspectNull =
        Inquire(
            RECaspect,
            "is null + 1") [instance: 6, cache: 1];
    ImageAspect =
        Inquire(
            camera,
            "camera aspect") [instance: 7, cache: 1];
    RECaspect =
        Switch(
            RECaspectNull,
            RECaspect,
            ImageAspect) [instance: 11, cache: 1];
    switchRECenable = Compute(
          "$0 == 0 ? 1 : (($2 == $3) && ($4 == $5)) ? ($1 == 1 ? 2 : 3) : 4",
            RECenable,
            switchRenderMode,
            RECresolution,
            ImageResolution,
            RECaspect,
	     ImageAspect) [instance: 4, cache: 1];
    NoRECobject, RECNoRerenderObject, RECNoRerHW, RECRerenderObject = Route(switchRECenable, annoted_object);
    Display(
        NoRECobject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    image =
        Render(
            RECNoRerenderObject,
            camera) [instance: 1, cache: 1];
    Display(
        image,
        NULL,
        where,
        throttle) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    rec_where = Display(
        RECNoRerHW,
        camera,
        where,
        throttle) [instance: 1, cache: 0];
    rec_image = ReadImageWindow(
        rec_where) [instance: 1, cache: 1];
    WriteImage(
        rec_image,
        RECfile,
        RECformat) [instance: 1, cache: 1];
    RECupdateCamera =
	UpdateCamera(
	    camera,
	    resolution=RECresolution,
	    aspect=RECaspect) [instance: 2, cache: 1];
    Display(
        RECRerenderObject,
        camera,
        where,
        throttle) [instance: 1, cache: 1];
    RECRerenderObject =
	ScaleScreen(
	    RECRerenderObject,
	    NULL,
	    RECresolution,
	    camera) [instance: 1, cache: 1];
    image =
        Render(
            RECRerenderObject,
            RECupdateCamera) [instance: 2, cache: 1];
    WriteImage(
        image,
        RECfile,
        RECformat) [instance: 2, cache: 1];
}
main_Image_1_in_1 = "Image_1";
main_Image_1_in_3 = "X24,,";
main_Image_1_in_4 = 1;
main_Image_1_in_5 = [23.363 23.363 23.363];
main_Image_1_in_6 = [203.26 63.0151 116.9];
main_Image_1_in_7 = 110.718;
main_Image_1_in_8 = 424;
main_Image_1_in_9 = 0.961085;
main_Image_1_in_10 = [-0.137897 0.979049 -0.149825];
main_Image_1_in_11 = NULL;
main_Image_1_in_12 = 0;
main_Image_1_in_13 = NULL;
main_Image_1_in_14 = 1;
main_Image_1_in_15 = NULL;
main_Image_1_in_16 = NULL;
main_Image_1_in_17 = 1;
main_Image_1_in_18 = 1;
main_Image_1_in_19 = 1;
main_Image_1_in_20 = NULL;
main_Image_1_in_21 = NULL;
main_Image_1_in_22 = NULL;
main_Image_1_in_23 = NULL;
main_Image_1_in_25 = NULL;
main_Image_1_in_26 = NULL;
main_Image_1_in_27 = NULL;
main_Image_1_in_28 = NULL;
main_Image_1_in_29 = 0;
main_Image_1_in_30 = {"x axis", "y axis", "z axis"};
main_Image_1_in_31 = NULL;
main_Image_1_in_32 = NULL;
main_Image_1_in_33 = NULL;
main_Image_1_in_34 = NULL;
main_Image_1_in_35 = NULL;
main_Image_1_in_36 = NULL;
main_Image_1_in_37 = NULL;
main_Image_1_in_38 = NULL;
main_Image_1_in_39 = NULL;
main_Image_1_in_40 = NULL;
main_Image_1_in_41 = "none";
main_Image_1_in_42 = NULL;
main_Image_1_in_43 = NULL;
main_Image_1_in_44 = NULL;
main_Image_1_in_45 = NULL;
main_Image_1_in_46 = NULL;
main_Image_1_in_47 = NULL;
main_Image_1_in_48 = NULL;
main_Image_1_out_2 = NULL;
main_Transmitter_2_out_1 = NULL;
main_Receiver_3_out_1 = NULL;
main_Display_1_in_3 = "X24,,";
main_Display_1_in_4 = NULL;
main_Display_1_in_5 = NULL;
main_Display_1_in_6 = NULL;
main_Display_1_in_7 = NULL;
main_Display_1_in_8 = NULL;
Executive("product version 3 1 4");
$sync
main();
